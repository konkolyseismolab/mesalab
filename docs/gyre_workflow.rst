.. _gyre_workflow:

GYRE Workflow
=============

The GYRE Workflow in ``mesalab`` integrates the `GYRE <https://gyre.readthedocs.io/>`_ pulsation code to perform asteroseismic analysis on stellar models derived from MESA simulations. This workflow is crucial for understanding the pulsational properties and internal structures of stars.

Purpose
-------

This workflow automates several key steps involved in a GYRE pulsation analysis:

* **Profile Preparation:** Converts selected MESA stellar profiles into a format readable by GYRE (often `*.data` or `*.dta` files). This involves extracting relevant physical quantities (e.g., radius, density, pressure, temperature, chemical composition) at each mesh point.
* **GYRE Inlist Generation:** Creates GYRE input files (inlists) based on a user-defined template and the specific parameters of each stellar model. These inlists specify the calculation parameters for GYRE, such as mode degrees (l), frequency ranges, and output options.
* **GYRE Execution:** Runs the `gyre` executable for each prepared stellar profile and its corresponding inlist.
* **Output Processing (`psort`):** Utilizes the `psort` utility (part of the GYRE suite) to sort and extract key information from GYRE's raw output files (e.g., eigenfrequencies, growth rates, mode inertias).
* **Data Aggregation:** Consolidates the processed GYRE output into structured, easily parsable formats (e.g., CSV files), linking pulsation properties back to the original MESA stellar parameters.

Input
-----

The GYRE Workflow primarily uses stellar profile data generated by the `MESA Run Analysis Workflow <./mesa_analysis_workflow.rst>`_. The specific input depends on the `run_mode` configured.

* **Filtered Profiles (``filtered_profiles.csv``):** If `gyre_workflow.run_mode` is set to `FILTERED_PROFILES`, ``mesalab`` expects a CSV file (e.g., `filtered_profiles.csv`) located in the **``analysis_results``** directory. This file should contain paths to MESA `profile.data` files that meet certain criteria, along with associated MESA history parameters.
* **All Profiles:** If `gyre_workflow.run_mode` is set to `ALL_PROFILES`, ``mesalab`` attempts to process every available MESA profile based on its internal logic.
* **Custom Profiles:** If `gyre_workflow.run_mode` is set to `CUSTOM_PROFILES`, you can specify a list of direct paths to MESA `profile.data` files.

Output
------

All GYRE-related output, including generated GYRE input files, raw GYRE output, processed `psort` output, and summarized pulsation data, is saved to the **``gyre_output``** subdirectory within your `mesalab` session's main `output_dir`.

* **GYRE Input Files:** `.in` files (generated inlists) for each GYRE run.
* **Raw GYRE Output:** `.data` files containing detailed mode properties from GYRE.
* **Processed GYRE Data:** CSV files (e.g., `modes_summary.csv`) containing extracted pulsation frequencies, growth rates, and other relevant information in a tabular format, often linked back to the MESA model properties.
* **Log Files:** Detailed logs from each GYRE execution.

Configuration Parameters
------------------------

The behavior of the GYRE Workflow is controlled by parameters within the `gyre_workflow` section of your `YAML configuration file <./yaml_config.rst>`_.

* **``run_gyre_workflow``**: (Boolean) Set to `true` to enable this workflow. Default: `false`.
* **``run_mode``**: (String) Specifies which profiles to analyze:
    * ``ALL_PROFILES``: Processes all available profiles.
    * ``FILTERED_PROFILES``: Uses profiles identified by the `MESA Run Analysis Workflow` and listed in `filtered_profiles_csv_name`.
    * ``CUSTOM_PROFILES``: Uses a custom list of profiles defined in the configuration.
* **``filtered_profiles_csv_name``**: (String) The filename of the CSV generated by MESA analysis containing filtered profiles (if `run_mode` is `FILTERED_PROFILES`). Default: `filtered_profiles.csv`.
* **``gyre_settings_template``**: (String) The path to a template GYRE inlist file (`.in` file). This template defines the general GYRE calculation settings, which ``mesalab`` then customizes for each specific stellar profile.
* **``gyre_executable``**: (String, Optional) The full path to the `gyre` executable. If not specified, ``mesalab`` expects `gyre` to be in your system's `PATH`.
* **``psort_executable``**: (String, Optional) The full path to the `psort` executable. If not specified, ``mesalab`` expects `psort` to be in your system's `PATH`.
* **``gyre_output_processing``**: (Dictionary) Settings for how ``mesalab`` should process the raw GYRE output using `psort`, e.g., which columns to extract or how to filter modes.

For a complete list of parameters and their detailed descriptions, please refer to the `Understanding the YAML Configuration <./yaml_config.rst>`_ section.

Prerequisites and Troubleshooting
---------------------------------

The GYRE Workflow relies heavily on a correct installation and configuration of the external GYRE software. **It is absolutely ESSENTIAL to install GYRE separately** before attempting to run this workflow.

* **GYRE Installation is ESSENTIAL:** You *must* have the GYRE pulsation code installed separately on your system. ``mesalab`` does not install GYRE for you; it only interacts with an existing GYRE installation. For GYRE **v7.0**, the official and comprehensive installation guide (including compilation steps) is available here: `https://gyre.readthedocs.io/en/v7.0/ref-guide/installation.html`
    Follow these instructions carefully to compile and install GYRE on your system.

* **Setting the `GYRE_DIR` Environment Variable (OR specifying paths in YAML):**
    After successfully installing GYRE, you **must** configure ``mesalab`` to find the GYRE executables and data files. This can be done in one of two ways, with the `GYRE_DIR` environment variable being the most common and recommended:

    1.  **Recommended: Set the `GYRE_DIR` Environment Variable:**
        Set the `GYRE_DIR` environment variable to point to the top-level directory of your GYRE installation (the directory that contains subdirectories like `bin`, `data`, `doc`, etc.). Additionally, it's highly recommended to add the `bin` subdirectory of your GYRE installation to your system's `PATH` environment variable.

        * **On Linux/macOS (bash/zsh):**
            Add the following lines to your `~/.bashrc`, `~/.zshrc`, or `~/.profile` file:
            .. code-block:: bash

                export GYRE_DIR="/path/to/your/gyre_installation"
                export PATH="$GYRE_DIR/bin:$PATH" # Add GYRE executables to your PATH

            Replace `/path/to/your/gyre_installation` with the actual path where you installed GYRE. After modifying the file, open a **new terminal** or run `source ~/.bashrc` (or the appropriate file) to apply the changes.

        * **On Windows:**
            Add a new system or user environment variable named `GYRE_DIR` with the value set to the full path of your GYRE installation directory (e.g., `C:\Program Files\GYRE`). Also, add `%GYRE_DIR%\bin` to your system's `Path` environment variable.

    2.  **Alternative: Specify Executable Paths Directly in the YAML Configuration:**
        As an alternative to setting environment variables, you can explicitly provide the full paths to the `gyre` and `psort` executables within your `mesalab` configuration YAML file. This is useful if you have multiple GYRE installations or prefer not to modify your system's environment variables.
        .. code-block:: yaml

            gyre_workflow:
              run_gyre_workflow: true
              # ...
              gyre_executable: /full/path/to/your/gyre_installation/bin/gyre
              psort_executable: /full/path/to/your/gyre_installation/bin/psort

        Replace the example paths with the actual, full paths to your GYRE executables.

* **Troubleshooting:** For more detailed information on diagnosing and resolving common GYRE-related issues (e.g., "command not found" errors, or unexpected workflow skips), please refer to the `GYRE Workflow Skipped or Failed <./troubleshooting.rst#gyre-workflow-skipped-or-failed>`_ entry in the Troubleshooting section.

Running this Workflow Independently
-----------------------------------

You can choose to run *only* the GYRE Workflow if you have already performed the MESA Run Analysis (and potentially the plotting) in a previous ``mesalab`` run, and you simply wish to run or re-run the pulsation analysis. This is particularly useful for debugging GYRE settings or trying different GYRE inlist templates.

To run only this part, ensure your YAML configuration file has:

.. code-block:: yaml

    mesa_analysis_workflow:
      run_mesa_analysis_workflow: false # Disable MESA analysis

    plotting_workflow:
      run_plotting_workflow: false # Disable plotting (unless you want new plots from new GYRE data)
    
    gyre_workflow:
      run_gyre_workflow: true # Enable GYRE
      # Ensure filtered_profiles_csv_name points to the correct location
      # or custom_profiles is set if using CUSTOM_PROFILES mode.
      # Also, ensure gyre_executable and psort_executable are correctly set if not in PATH,
      # OR that GYRE_DIR and PATH are properly configured.

Then, execute ``mesalab`` as usual:

.. code-block:: bash

    mesalab --config path/to/your_config_settings.yaml

``mesalab`` will look for the necessary MESA profile input (e.g., `filtered_profiles.csv`) in the `analysis_results` directory relative to your specified `output_dir` from the previous analysis run.