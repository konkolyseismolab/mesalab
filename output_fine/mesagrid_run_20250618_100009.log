2025-06-18 10:00:09,348 - INFO - cli.py:81 - Logging set up. Log file: /home/tnd/mesagrid/mesa_blue_loop/output/mesagrid_run_20250618_100009.log
2025-06-18 10:00:09,349 - DEBUG - cli.py:147 - Debug mode enabled.
2025-06-18 10:00:09,349 - DEBUG - cli.py:148 - Full configuration dictionary: {'general_settings': {'input_dir': '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid', 'output_dir': '/home/tnd/mesagrid/mesa_blue_loop/output', 'inlist_name': 'inlist_project', 'force_reanalysis': True, 'debug': True}, 'blue_loop_analysis': {'analyze_blue_loop': True, 'blue_loop_output_type': 'all'}, 'plotting_settings': {'generate_heatmaps': True, 'generate_plots': True, 'generate_hr_diagrams': 'drop_zams', 'generate_blue_loop_plots_with_bc': True}, 'gyre_workflow': {'run_gyre_workflow': True, 'gyre_config_path': 'gyre_config.in', 'gyre_input_csv_name': 'sorted_mass_Z_min_max.csv'}}
2025-06-18 10:00:09,349 - DEBUG - cli.py:159 - Config object for analyzer: Namespace(input_dir='/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid', output_dir='/home/tnd/mesagrid/mesa_blue_loop/output', inlist_name='inlist_project', force_reanalysis=True, debug=True, analyze_blue_loop=True, blue_loop_output_type='all', generate_heatmaps=True, generate_plots=True, generate_hr_diagrams='drop_zams', generate_blue_loop_plots_with_bc=True, run_gyre_workflow=True, gyre_config_path='gyre_config.in', gyre_input_csv_name='sorted_mass_Z_min_max.csv')
2025-06-18 10:00:09,349 - INFO - cli.py:161 - 
--- Starting MESA Grid Analysis ---
2025-06-18 10:00:09,349 - INFO - mesa_analyzer.py:68 - Analysis started. Reanalysis needed: True
2025-06-18 10:00:09,350 - INFO - mesa_analyzer.py:162 - Starting full analysis of MESA runs...
2025-06-18 10:00:09,356 - INFO - data_reader.py:89 - Scanning '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid' for MESA run directories...
2025-06-18 10:00:09,357 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,357 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,357 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,357 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,357 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,357 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,358 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,359 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,360 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,361 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,362 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,363 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,364 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,365 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,366 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,367 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,368 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,369 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,370 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,371 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,372 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,373 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,374 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,375 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,376 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,377 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,378 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,379 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,380 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,381 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,382 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,383 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,384 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,385 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,386 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,387 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,388 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,389 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/src'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/src/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,390 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,391 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,392 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,393 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,394 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,395 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,396 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,397 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,398 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,399 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,400 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,401 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,402 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,403 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,404 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,405 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,406 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,407 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,408 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,409 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,410 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,411 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/make'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/make/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,412 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,413 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,414 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,415 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,416 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,416 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,416 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_8.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_8.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0015'. Skipping this directory.
2025-06-18 10:00:09,417 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0015/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,418 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0185'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0185/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,419 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0075'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0075/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0140'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0140/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,420 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0080'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0080/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0170'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0170/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,421 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0095'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0095/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,422 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0120'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0120/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0155'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0155/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,423 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.0MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.0MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0025'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0025/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,424 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_7.5MSUN_z0.0115'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_7.5MSUN_z0.0115/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0125'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0125/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,425 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0135'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0135/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0050'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0050/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0020'. Skipping this directory.
2025-06-18 10:00:09,426 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0020/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0070'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0070/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0200'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0200/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0085'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0085/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,427 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_15.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0105'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0105/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,428 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0045'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0045/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0110'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.0MSUN_z0.0110/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0100'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0100/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0150'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0150/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_9.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,429 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0160'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0160/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0040'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0040/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0195'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0195/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0145'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_3.5MSUN_z0.0145/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_4.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0055'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0055/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,430 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0190'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0190/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_5.0MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0165'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_14.5MSUN_z0.0165/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0180'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0180/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0090'. Skipping this directory.
2025-06-18 10:00:09,431 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_2.5MSUN_z0.0090/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0030'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.0MSUN_z0.0030/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0175'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.5MSUN_z0.0175/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0130'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0130/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0035'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_12.0MSUN_z0.0035/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0060'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0060/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:111 - Inlist file 'inlist_project' not found in '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0065'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:113 - history.data not found at '/home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_13.5MSUN_z0.0065/LOGS/history.data'. Skipping this directory.
2025-06-18 10:00:09,432 - INFO - data_reader.py:115 - Finished scanning. Found 550 valid MESA runs.
2025-06-18 10:00:09,515 - INFO - mesa_analyzer.py:200 - Generated YAML overview of processed runs: /home/tnd/mesagrid/mesa_blue_loop/output/analysis_results/processed_runs_overview.yaml
2025-06-18 10:00:10,726 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0115. No detailed data for this run.
2025-06-18 10:00:10,726 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0115. Blue loop summary metrics will be NaN.
2025-06-18 10:00:14,447 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0035. No detailed data for this run.
2025-06-18 10:00:14,447 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0035. Blue loop summary metrics will be NaN.
2025-06-18 10:00:17,578 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.012. No detailed data for this run.
2025-06-18 10:00:17,578 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.012. Blue loop summary metrics will be NaN.
2025-06-18 10:00:18,123 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0085. No detailed data for this run.
2025-06-18 10:00:18,123 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0085. Blue loop summary metrics will be NaN.
2025-06-18 10:00:18,747 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0095. No detailed data for this run.
2025-06-18 10:00:18,747 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0095. Blue loop summary metrics will be NaN.
2025-06-18 10:00:25,608 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0125. No detailed data for this run.
2025-06-18 10:00:25,608 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0125. Blue loop summary metrics will be NaN.
2025-06-18 10:00:27,499 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.006. No detailed data for this run.
2025-06-18 10:00:27,499 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.006. Blue loop summary metrics will be NaN.
2025-06-18 10:00:28,144 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.01. No detailed data for this run.
2025-06-18 10:00:28,144 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.01. Blue loop summary metrics will be NaN.
2025-06-18 10:00:28,699 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.019. No detailed data for this run.
2025-06-18 10:00:28,699 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.019. Blue loop summary metrics will be NaN.
2025-06-18 10:00:30,477 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.003. No detailed data for this run.
2025-06-18 10:00:30,477 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.003. Blue loop summary metrics will be NaN.
2025-06-18 10:00:32,892 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.008. No detailed data for this run.
2025-06-18 10:00:32,893 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.008. Blue loop summary metrics will be NaN.
2025-06-18 10:00:37,965 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.0065. No detailed data for this run.
2025-06-18 10:00:37,966 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.0065. Blue loop summary metrics will be NaN.
2025-06-18 10:00:40,511 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0185. No detailed data for this run.
2025-06-18 10:00:40,511 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0185. Blue loop summary metrics will be NaN.
2025-06-18 10:00:45,981 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.004. No detailed data for this run.
2025-06-18 10:00:45,981 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.004. Blue loop summary metrics will be NaN.
2025-06-18 10:00:51,015 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.008. No detailed data for this run.
2025-06-18 10:00:51,015 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.008. Blue loop summary metrics will be NaN.
2025-06-18 10:00:51,608 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.008. No detailed data for this run.
2025-06-18 10:00:51,608 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.008. Blue loop summary metrics will be NaN.
2025-06-18 10:00:52,144 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.005. No detailed data for this run.
2025-06-18 10:00:52,144 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.005. Blue loop summary metrics will be NaN.
2025-06-18 10:00:55,251 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0195. No detailed data for this run.
2025-06-18 10:00:55,251 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0195. Blue loop summary metrics will be NaN.
2025-06-18 10:00:57,715 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0065. No detailed data for this run.
2025-06-18 10:00:57,715 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0065. Blue loop summary metrics will be NaN.
2025-06-18 10:00:58,234 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0065. No detailed data for this run.
2025-06-18 10:00:58,234 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0065. Blue loop summary metrics will be NaN.
2025-06-18 10:01:00,653 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0075. No detailed data for this run.
2025-06-18 10:01:00,653 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0075. Blue loop summary metrics will be NaN.
2025-06-18 10:01:01,158 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=12.0, Z=0.0025. No detailed data for this run.
2025-06-18 10:01:01,159 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=12.0, Z=0.0025. Blue loop summary metrics will be NaN.
2025-06-18 10:01:03,615 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0195. No detailed data for this run.
2025-06-18 10:01:03,615 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0195. Blue loop summary metrics will be NaN.
2025-06-18 10:01:09,341 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.015. No detailed data for this run.
2025-06-18 10:01:09,341 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.015. Blue loop summary metrics will be NaN.
2025-06-18 10:01:13,598 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0125. No detailed data for this run.
2025-06-18 10:01:13,598 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0125. Blue loop summary metrics will be NaN.
2025-06-18 10:01:14,794 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.006. No detailed data for this run.
2025-06-18 10:01:14,794 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.006. Blue loop summary metrics will be NaN.
2025-06-18 10:01:15,991 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.018. No detailed data for this run.
2025-06-18 10:01:15,991 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.018. Blue loop summary metrics will be NaN.
2025-06-18 10:01:19,758 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.007. No detailed data for this run.
2025-06-18 10:01:19,758 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.007. Blue loop summary metrics will be NaN.
2025-06-18 10:01:20,910 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0115. No detailed data for this run.
2025-06-18 10:01:20,910 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0115. Blue loop summary metrics will be NaN.
2025-06-18 10:01:22,141 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0015. No detailed data for this run.
2025-06-18 10:01:22,141 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0015. Blue loop summary metrics will be NaN.
2025-06-18 10:01:24,077 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.007. No detailed data for this run.
2025-06-18 10:01:24,078 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.007. Blue loop summary metrics will be NaN.
2025-06-18 10:01:28,478 - ERROR - data_reader.py:176 - Error loading or processing /home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_11.0MSUN_z0.0045/LOGS/history.data using np.genfromtxt: Some errors were detected !
    Line #1286 (got 254 columns instead of 177)
    Line #1287 (got 200 columns instead of 177)
    Line #1289 (got 223 columns instead of 177)
    Line #1290 (got 200 columns instead of 177)
    Line #1291 (got 200 columns instead of 177)
    Line #1293 (got 322 columns instead of 177)
    Line #1294 (got 200 columns instead of 177)
    Line #1295 (got 299 columns instead of 177)
    Line #1296 (got 200 columns instead of 177)
    Line #1297 (got 23 columns instead of 177)
2025-06-18 10:01:28,481 - ERROR - blue_loop_analyzer.py:81 - ERROR: Missing required columns in history_df for M=11.0, Z=0.0045. Missing: ['log_Teff', 'log_L', 'center_h1', 'star_age', 'model_number', 'log_g', 'center_he4']. Skipping analysis.
2025-06-18 10:01:28,481 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0045. No detailed data for this run.
2025-06-18 10:01:28,481 - WARNING - mesa_analyzer.py:301 - Blue loop analysis failed for M=11.0, Z=0.0045. Blue loop summary metrics will be NaN.
2025-06-18 10:01:32,173 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.011. No detailed data for this run.
2025-06-18 10:01:32,173 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.011. Blue loop summary metrics will be NaN.
2025-06-18 10:01:33,988 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.008. No detailed data for this run.
2025-06-18 10:01:33,988 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.008. Blue loop summary metrics will be NaN.
2025-06-18 10:01:34,603 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.006. No detailed data for this run.
2025-06-18 10:01:34,603 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.006. Blue loop summary metrics will be NaN.
2025-06-18 10:01:39,531 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0145. No detailed data for this run.
2025-06-18 10:01:39,531 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0145. Blue loop summary metrics will be NaN.
2025-06-18 10:01:42,687 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0135. No detailed data for this run.
2025-06-18 10:01:42,687 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0135. Blue loop summary metrics will be NaN.
2025-06-18 10:01:46,515 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.014. No detailed data for this run.
2025-06-18 10:01:46,516 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.014. Blue loop summary metrics will be NaN.
2025-06-18 10:01:54,758 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.018. No detailed data for this run.
2025-06-18 10:01:54,758 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.018. Blue loop summary metrics will be NaN.
2025-06-18 10:01:55,357 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0165. No detailed data for this run.
2025-06-18 10:01:55,357 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0165. Blue loop summary metrics will be NaN.
2025-06-18 10:01:56,620 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.02. No detailed data for this run.
2025-06-18 10:01:56,620 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.02. Blue loop summary metrics will be NaN.
2025-06-18 10:01:57,251 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=12.0, Z=0.0015. No detailed data for this run.
2025-06-18 10:01:57,251 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=12.0, Z=0.0015. Blue loop summary metrics will be NaN.
2025-06-18 10:01:57,833 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.019. No detailed data for this run.
2025-06-18 10:01:57,834 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.019. Blue loop summary metrics will be NaN.
2025-06-18 10:02:03,383 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.01. No detailed data for this run.
2025-06-18 10:02:03,383 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.01. Blue loop summary metrics will be NaN.
2025-06-18 10:02:04,536 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0085. No detailed data for this run.
2025-06-18 10:02:04,536 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0085. Blue loop summary metrics will be NaN.
2025-06-18 10:02:05,800 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0085. No detailed data for this run.
2025-06-18 10:02:05,800 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0085. Blue loop summary metrics will be NaN.
2025-06-18 10:02:06,314 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0075. No detailed data for this run.
2025-06-18 10:02:06,314 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0075. Blue loop summary metrics will be NaN.
2025-06-18 10:02:19,805 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0175. No detailed data for this run.
2025-06-18 10:02:19,805 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0175. Blue loop summary metrics will be NaN.
2025-06-18 10:02:29,941 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.013. No detailed data for this run.
2025-06-18 10:02:29,941 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.013. Blue loop summary metrics will be NaN.
2025-06-18 10:02:30,559 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0035. No detailed data for this run.
2025-06-18 10:02:30,559 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0035. Blue loop summary metrics will be NaN.
2025-06-18 10:02:34,392 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.017. No detailed data for this run.
2025-06-18 10:02:34,393 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.017. Blue loop summary metrics will be NaN.
2025-06-18 10:02:36,232 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0095. No detailed data for this run.
2025-06-18 10:02:36,232 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0095. Blue loop summary metrics will be NaN.
2025-06-18 10:02:41,469 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0115. No detailed data for this run.
2025-06-18 10:02:41,469 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0115. Blue loop summary metrics will be NaN.
2025-06-18 10:02:48,796 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0075. No detailed data for this run.
2025-06-18 10:02:48,796 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0075. Blue loop summary metrics will be NaN.
2025-06-18 10:02:50,704 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.011. No detailed data for this run.
2025-06-18 10:02:50,704 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.011. Blue loop summary metrics will be NaN.
2025-06-18 10:02:51,200 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0055. No detailed data for this run.
2025-06-18 10:02:51,200 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0055. Blue loop summary metrics will be NaN.
2025-06-18 10:02:52,456 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.009. No detailed data for this run.
2025-06-18 10:02:52,456 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.009. Blue loop summary metrics will be NaN.
2025-06-18 10:03:05,854 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.009. No detailed data for this run.
2025-06-18 10:03:05,854 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.009. Blue loop summary metrics will be NaN.
2025-06-18 10:03:06,475 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.003. No detailed data for this run.
2025-06-18 10:03:06,475 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.003. Blue loop summary metrics will be NaN.
2025-06-18 10:03:07,731 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0175. No detailed data for this run.
2025-06-18 10:03:07,731 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0175. Blue loop summary metrics will be NaN.
2025-06-18 10:03:08,923 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.012. No detailed data for this run.
2025-06-18 10:03:08,923 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.012. Blue loop summary metrics will be NaN.
2025-06-18 10:03:16,941 - ERROR - data_reader.py:176 - Error loading or processing /home/tnd/mesa-r23.05.1/STRANGE/nad_convos_mid/run_nad_convos_mid_11.5MSUN_z0.0160/LOGS/history.data using np.genfromtxt: Some errors were detected !
    Line #2172 (got 257 columns instead of 177)
    Line #2173 (got 200 columns instead of 177)
    Line #2174 (got 200 columns instead of 177)
    Line #2175 (got 200 columns instead of 177)
    Line #2176 (got 200 columns instead of 177)
    Line #2177 (got 200 columns instead of 177)
    Line #2178 (got 200 columns instead of 177)
    Line #2179 (got 200 columns instead of 177)
    Line #2180 (got 200 columns instead of 177)
    Line #2181 (got 200 columns instead of 177)
    Line #2182 (got 200 columns instead of 177)
    Line #2184 (got 223 columns instead of 177)
    Line #2186 (got 223 columns instead of 177)
    Line #2187 (got 200 columns instead of 177)
    Line #2188 (got 200 columns instead of 177)
    Line #2189 (got 200 columns instead of 177)
    Line #2190 (got 200 columns instead of 177)
    Line #2193 (got 245 columns instead of 177)
    Line #2194 (got 200 columns instead of 177)
    Line #2196 (got 223 columns instead of 177)
    Line #2198 (got 223 columns instead of 177)
    Line #2199 (got 200 columns instead of 177)
    Line #2200 (got 200 columns instead of 177)
    Line #2201 (got 200 columns instead of 177)
    Line #2202 (got 200 columns instead of 177)
    Line #2205 (got 245 columns instead of 177)
    Line #2210 (got 191 columns instead of 177)
    Line #2212 (got 223 columns instead of 177)
    Line #2213 (got 200 columns instead of 177)
    Line #2218 (got 191 columns instead of 177)
    Line #2219 (got 200 columns instead of 177)
    Line #2220 (got 200 columns instead of 177)
    Line #2221 (got 200 columns instead of 177)
    Line #2223 (got 223 columns instead of 177)
    Line #2224 (got 200 columns instead of 177)
    Line #2228 (got 268 columns instead of 177)
    Line #2229 (got 200 columns instead of 177)
    Line #2234 (got 191 columns instead of 177)
    Line #2241 (got 236 columns instead of 177)
    Line #2242 (got 200 columns instead of 177)
    Line #2243 (got 200 columns instead of 177)
    Line #2246 (got 245 columns instead of 177)
    Line #2255 (got 182 columns instead of 177)
    Line #2257 (got 223 columns instead of 177)
    Line #2266 (got 182 columns instead of 177)
    Line #2267 (got 299 columns instead of 177)
    Line #2271 (got 268 columns instead of 177)
    Line #2279 (got 259 columns instead of 177)
    Line #2281 (got 223 columns instead of 177)
    Line #2283 (got 223 columns instead of 177)
    Line #2285 (got 223 columns instead of 177)
    Line #2287 (got 223 columns instead of 177)
    Line #2288 (got 200 columns instead of 177)
    Line #2289 (got 200 columns instead of 177)
    Line #2291 (got 223 columns instead of 177)
    Line #2300 (got 182 columns instead of 177)
    Line #2301 (got 200 columns instead of 177)
    Line #2305 (got 268 columns instead of 177)
    Line #2309 (got 268 columns instead of 177)
    Line #2311 (got 223 columns instead of 177)
    Line #2316 (got 191 columns instead of 177)
    Line #2319 (got 245 columns instead of 177)
    Line #2320 (got 200 columns instead of 177)
    Line #2325 (got 191 columns instead of 177)
    Line #2326 (got 200 columns instead of 177)
    Line #2328 (got 223 columns instead of 177)
    Line #2329 (got 200 columns instead of 177)
    Line #2332 (got 245 columns instead of 177)
    Line #2333 (got 200 columns instead of 177)
    Line #2337 (got 268 columns instead of 177)
    Line #2340 (got 245 columns instead of 177)
    Line #2342 (got 223 columns instead of 177)
    Line #2350 (got 259 columns instead of 177)
    Line #2359 (got 182 columns instead of 177)
    Line #2373 (got 196 columns instead of 177)
    Line #2374 (got 200 columns instead of 177)
    Line #2389 (got 219 columns instead of 177)
    Line #2391 (got 223 columns instead of 177)
    Line #2393 (got 223 columns instead of 177)
    Line #2401 (got 259 columns instead of 177)
    Line #2406 (got 191 columns instead of 177)
    Line #2413 (got 236 columns instead of 177)
    Line #2419 (got 214 columns instead of 177)
    Line #2435 (got 241 columns instead of 177)
    Line #2439 (got 268 columns instead of 177)
    Line #2442 (got 245 columns instead of 177)
    Line #2448 (got 214 columns instead of 177)
    Line #2457 (got 182 columns instead of 177)
2025-06-18 10:03:16,945 - ERROR - blue_loop_analyzer.py:81 - ERROR: Missing required columns in history_df for M=11.5, Z=0.016. Missing: ['log_Teff', 'log_L', 'center_h1', 'star_age', 'model_number', 'log_g', 'center_he4']. Skipping analysis.
2025-06-18 10:03:16,946 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.016. No detailed data for this run.
2025-06-18 10:03:16,946 - WARNING - mesa_analyzer.py:301 - Blue loop analysis failed for M=11.5, Z=0.016. Blue loop summary metrics will be NaN.
2025-06-18 10:03:25,228 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.017. No detailed data for this run.
2025-06-18 10:03:25,229 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.017. Blue loop summary metrics will be NaN.
2025-06-18 10:03:27,157 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.0075. No detailed data for this run.
2025-06-18 10:03:27,158 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.0075. Blue loop summary metrics will be NaN.
2025-06-18 10:03:29,077 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0045. No detailed data for this run.
2025-06-18 10:03:29,077 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0045. Blue loop summary metrics will be NaN.
2025-06-18 10:03:34,262 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.01. No detailed data for this run.
2025-06-18 10:03:34,262 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.01. Blue loop summary metrics will be NaN.
2025-06-18 10:03:36,793 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.005. No detailed data for this run.
2025-06-18 10:03:36,794 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.005. Blue loop summary metrics will be NaN.
2025-06-18 10:03:37,862 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=12.0, Z=0.003. No detailed data for this run.
2025-06-18 10:03:37,862 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=12.0, Z=0.003. Blue loop summary metrics will be NaN.
2025-06-18 10:03:41,629 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0105. No detailed data for this run.
2025-06-18 10:03:41,630 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0105. Blue loop summary metrics will be NaN.
2025-06-18 10:03:54,467 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0035. No detailed data for this run.
2025-06-18 10:03:54,467 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0035. Blue loop summary metrics will be NaN.
2025-06-18 10:03:56,273 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.005. No detailed data for this run.
2025-06-18 10:03:56,273 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.005. Blue loop summary metrics will be NaN.
2025-06-18 10:03:56,894 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0165. No detailed data for this run.
2025-06-18 10:03:56,894 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0165. Blue loop summary metrics will be NaN.
2025-06-18 10:03:57,487 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.004. No detailed data for this run.
2025-06-18 10:03:57,487 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.004. Blue loop summary metrics will be NaN.
2025-06-18 10:03:58,037 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0095. No detailed data for this run.
2025-06-18 10:03:58,037 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0095. Blue loop summary metrics will be NaN.
2025-06-18 10:03:58,667 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.002. No detailed data for this run.
2025-06-18 10:03:58,667 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.002. Blue loop summary metrics will be NaN.
2025-06-18 10:04:01,909 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0185. No detailed data for this run.
2025-06-18 10:04:01,909 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0185. Blue loop summary metrics will be NaN.
2025-06-18 10:04:03,658 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.005. No detailed data for this run.
2025-06-18 10:04:03,658 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.005. Blue loop summary metrics will be NaN.
2025-06-18 10:04:05,607 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.002. No detailed data for this run.
2025-06-18 10:04:05,607 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.002. Blue loop summary metrics will be NaN.
2025-06-18 10:04:15,052 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0025. No detailed data for this run.
2025-06-18 10:04:15,052 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0025. Blue loop summary metrics will be NaN.
2025-06-18 10:04:20,141 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0105. No detailed data for this run.
2025-06-18 10:04:20,141 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0105. Blue loop summary metrics will be NaN.
2025-06-18 10:04:20,699 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.012. No detailed data for this run.
2025-06-18 10:04:20,699 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.012. Blue loop summary metrics will be NaN.
2025-06-18 10:04:24,453 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0105. No detailed data for this run.
2025-06-18 10:04:24,453 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0105. Blue loop summary metrics will be NaN.
2025-06-18 10:04:26,967 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0055. No detailed data for this run.
2025-06-18 10:04:26,967 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0055. Blue loop summary metrics will be NaN.
2025-06-18 10:04:39,971 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.013. No detailed data for this run.
2025-06-18 10:04:39,971 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.013. Blue loop summary metrics will be NaN.
2025-06-18 10:04:41,910 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.016. No detailed data for this run.
2025-06-18 10:04:41,910 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.016. Blue loop summary metrics will be NaN.
2025-06-18 10:04:43,790 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.011. No detailed data for this run.
2025-06-18 10:04:43,790 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.011. Blue loop summary metrics will be NaN.
2025-06-18 10:04:44,340 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0025. No detailed data for this run.
2025-06-18 10:04:44,341 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0025. Blue loop summary metrics will be NaN.
2025-06-18 10:04:47,566 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0135. No detailed data for this run.
2025-06-18 10:04:47,566 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0135. Blue loop summary metrics will be NaN.
2025-06-18 10:04:49,438 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.0035. No detailed data for this run.
2025-06-18 10:04:49,438 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.0035. Blue loop summary metrics will be NaN.
2025-06-18 10:04:50,064 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0055. No detailed data for this run.
2025-06-18 10:04:50,064 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0055. Blue loop summary metrics will be NaN.
2025-06-18 10:04:57,870 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.009. No detailed data for this run.
2025-06-18 10:04:57,870 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.009. Blue loop summary metrics will be NaN.
2025-06-18 10:05:03,083 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.004. No detailed data for this run.
2025-06-18 10:05:03,083 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.004. Blue loop summary metrics will be NaN.
2025-06-18 10:05:05,618 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=12.0, Z=0.002. No detailed data for this run.
2025-06-18 10:05:05,618 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=12.0, Z=0.002. Blue loop summary metrics will be NaN.
2025-06-18 10:05:06,856 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.006. No detailed data for this run.
2025-06-18 10:05:06,856 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.006. Blue loop summary metrics will be NaN.
2025-06-18 10:05:07,451 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.007. No detailed data for this run.
2025-06-18 10:05:07,451 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.007. Blue loop summary metrics will be NaN.
2025-06-18 10:05:08,019 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0155. No detailed data for this run.
2025-06-18 10:05:08,019 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0155. Blue loop summary metrics will be NaN.
2025-06-18 10:05:15,390 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0015. No detailed data for this run.
2025-06-18 10:05:15,390 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0015. Blue loop summary metrics will be NaN.
2025-06-18 10:05:15,929 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.0125. No detailed data for this run.
2025-06-18 10:05:15,929 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.0125. Blue loop summary metrics will be NaN.
2025-06-18 10:05:21,856 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.0055. No detailed data for this run.
2025-06-18 10:05:21,856 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.0055. Blue loop summary metrics will be NaN.
2025-06-18 10:05:22,413 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0155. No detailed data for this run.
2025-06-18 10:05:22,413 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0155. Blue loop summary metrics will be NaN.
2025-06-18 10:05:22,988 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.014. No detailed data for this run.
2025-06-18 10:05:22,988 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.014. Blue loop summary metrics will be NaN.
2025-06-18 10:05:27,653 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.003. No detailed data for this run.
2025-06-18 10:05:27,653 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.003. Blue loop summary metrics will be NaN.
2025-06-18 10:05:31,426 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.004. No detailed data for this run.
2025-06-18 10:05:31,427 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.004. Blue loop summary metrics will be NaN.
2025-06-18 10:05:36,691 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.015. No detailed data for this run.
2025-06-18 10:05:36,692 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.015. Blue loop summary metrics will be NaN.
2025-06-18 10:05:37,232 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.013. No detailed data for this run.
2025-06-18 10:05:37,232 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.013. Blue loop summary metrics will be NaN.
2025-06-18 10:05:39,110 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.5, Z=0.007. No detailed data for this run.
2025-06-18 10:05:39,110 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.5, Z=0.007. Blue loop summary metrics will be NaN.
2025-06-18 10:05:40,876 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0045. No detailed data for this run.
2025-06-18 10:05:40,876 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0045. Blue loop summary metrics will be NaN.
2025-06-18 10:05:41,499 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.0, Z=0.0065. No detailed data for this run.
2025-06-18 10:05:41,499 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.0, Z=0.0065. Blue loop summary metrics will be NaN.
2025-06-18 10:05:54,728 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=10.0, Z=0.0045. No detailed data for this run.
2025-06-18 10:05:54,729 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=10.0, Z=0.0045. Blue loop summary metrics will be NaN.
2025-06-18 10:05:55,274 - INFO - mesa_analyzer.py:263 - analyzer_output['blue_loop_detail_df'] was empty for M=11.5, Z=0.0145. No detailed data for this run.
2025-06-18 10:05:55,274 - INFO - mesa_analyzer.py:299 - No blue loop found (0 crossings) for M=11.5, Z=0.0145. Blue loop summary metrics will be NaN.
2025-06-18 10:05:55,279 - INFO - mesa_analyzer.py:344 - Generated summary CSV will contain 440 blue loop entries.
2025-06-18 10:05:55,291 - INFO - mesa_analyzer.py:375 - Summary CSV written to /home/tnd/mesagrid/mesa_blue_loop/output/analysis_results/summary_results.csv
2025-06-18 10:05:55,294 - INFO - mesa_analyzer.py:388 - Cross-grid CSV written to /home/tnd/mesagrid/mesa_blue_loop/output/analysis_results/crossing_count_grid.csv
2025-06-18 10:05:55,764 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0015 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0015.csv
2025-06-18 10:05:56,143 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.002 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0020.csv
2025-06-18 10:05:56,475 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0025 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0025.csv
2025-06-18 10:05:56,736 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.003 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0030.csv
2025-06-18 10:05:56,942 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0035 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0035.csv
2025-06-18 10:05:57,124 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.004 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0040.csv
2025-06-18 10:05:57,307 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0045 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0045.csv
2025-06-18 10:05:57,488 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.005 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0050.csv
2025-06-18 10:05:57,717 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0055 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0055.csv
2025-06-18 10:05:57,959 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.006 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0060.csv
2025-06-18 10:05:58,218 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0065 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0065.csv
2025-06-18 10:05:58,512 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.007 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0070.csv
2025-06-18 10:05:58,804 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0075 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0075.csv
2025-06-18 10:05:59,086 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.008 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0080.csv
2025-06-18 10:05:59,407 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0085 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0085.csv
2025-06-18 10:05:59,726 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.009 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0090.csv
2025-06-18 10:06:00,047 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0095 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0095.csv
2025-06-18 10:06:00,359 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.01 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0100.csv
2025-06-18 10:06:00,628 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0105 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0105.csv
2025-06-18 10:06:00,928 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.011 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0110.csv
2025-06-18 10:06:01,192 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0115 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0115.csv
2025-06-18 10:06:01,481 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.012 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0120.csv
2025-06-18 10:06:01,767 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0125 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0125.csv
2025-06-18 10:06:02,020 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.013 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0130.csv
2025-06-18 10:06:02,329 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0135 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0135.csv
2025-06-18 10:06:02,632 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.014 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0140.csv
2025-06-18 10:06:02,929 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0145 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0145.csv
2025-06-18 10:06:03,216 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.015 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0150.csv
2025-06-18 10:06:03,501 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0155 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0155.csv
2025-06-18 10:06:03,788 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.016 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0160.csv
2025-06-18 10:06:04,069 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0165 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0165.csv
2025-06-18 10:06:04,337 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.017 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0170.csv
2025-06-18 10:06:04,609 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0175 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0175.csv
2025-06-18 10:06:04,869 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.018 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0180.csv
2025-06-18 10:06:05,126 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0185 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0185.csv
2025-06-18 10:06:05,374 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.019 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0190.csv
2025-06-18 10:06:05,620 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.0195 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0195.csv
2025-06-18 10:06:05,860 - INFO - mesa_analyzer.py:416 - Written concatenated detail CSV for Z=0.02 with all columns to /home/tnd/mesagrid/mesa_blue_loop/output/blue_loop_detail_files/detail_z0.0200.csv
2025-06-18 10:06:06,089 - INFO - mesa_analyzer.py:430 - Generating GYRE input CSV 'sorted_mass_Z_min_max.csv' from MESA summary data...
2025-06-18 10:06:06,095 - INFO - mesa_analyzer.py:452 - GYRE input CSV saved to: /home/tnd/mesagrid/mesa_blue_loop/output/analysis_results/sorted_mass_Z_min_max.csv
2025-06-18 10:06:06,107 - INFO - cli.py:193 - 
--- Starting Plotting Workflow ---
2025-06-18 10:06:06,108 - INFO - cli.py:195 - Generating heatmaps...
2025-06-18 10:06:06,108 - INFO - mesa_plotter.py:32 - Attempting to generate heatmaps...
2025-06-18 10:06:08,562 - INFO - mesa_plotter.py:76 - Heatmaps generated successfully.
2025-06-18 10:06:08,562 - INFO - cli.py:203 - Heatmaps generated.
2025-06-18 10:06:08,562 - INFO - cli.py:208 - Generating HR Diagrams...
2025-06-18 10:06:08,562 - INFO - mesa_plotter.py:138 - Attempting to generate HR diagrams using pre-loaded full history data...
2025-06-18 10:06:08,562 - INFO - mesa_plotter.py:151 - Preparing to generate HR diagrams with drop_zams=True.
2025-06-18 10:06:08,562 - INFO - all_hrd_plotter.py:52 - Starting HR diagram generation for model 'nad_convos_mid'.
2025-06-18 10:06:08,563 - INFO - all_hrd_plotter.py:69 - Sorted 20 runs by mass for Z=0.0015.
2025-06-18 10:06:08,563 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0015 with 20 masses...
2025-06-18 10:06:08,681 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=2.5 (Z=0.0015).
2025-06-18 10:06:08,685 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.0 (Z=0.0015).
2025-06-18 10:06:08,690 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0015).
2025-06-18 10:06:08,694 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0015).
2025-06-18 10:06:08,698 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0015).
2025-06-18 10:06:08,702 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0015).
2025-06-18 10:06:08,707 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0015).
2025-06-18 10:06:08,711 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0015).
2025-06-18 10:06:08,716 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0015).
2025-06-18 10:06:08,720 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0015).
2025-06-18 10:06:08,724 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0015).
2025-06-18 10:06:08,728 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0015).
2025-06-18 10:06:08,733 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0015).
2025-06-18 10:06:08,738 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.0 (Z=0.0015).
2025-06-18 10:06:08,742 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.5 (Z=0.0015).
2025-06-18 10:06:08,746 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0015).
2025-06-18 10:06:08,750 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0015).
2025-06-18 10:06:08,755 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0015).
2025-06-18 10:06:08,759 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0015).
2025-06-18 10:06:08,763 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=12.0 (Z=0.0015).
2025-06-18 10:06:13,080 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0015.png
2025-06-18 10:06:13,081 - INFO - all_hrd_plotter.py:69 - Sorted 19 runs by mass for Z=0.0020.
2025-06-18 10:06:13,081 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0020 with 19 masses...
2025-06-18 10:06:13,193 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.0 (Z=0.0020).
2025-06-18 10:06:13,198 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0020).
2025-06-18 10:06:13,203 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0020).
2025-06-18 10:06:13,207 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0020).
2025-06-18 10:06:13,212 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0020).
2025-06-18 10:06:13,215 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0020).
2025-06-18 10:06:13,220 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0020).
2025-06-18 10:06:13,224 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0020).
2025-06-18 10:06:13,228 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0020).
2025-06-18 10:06:13,233 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0020).
2025-06-18 10:06:13,237 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0020).
2025-06-18 10:06:13,241 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0020).
2025-06-18 10:06:13,245 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.0 (Z=0.0020).
2025-06-18 10:06:13,250 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.5 (Z=0.0020).
2025-06-18 10:06:13,254 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0020).
2025-06-18 10:06:13,258 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0020).
2025-06-18 10:06:13,262 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0020).
2025-06-18 10:06:13,267 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0020).
2025-06-18 10:06:13,271 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=12.0 (Z=0.0020).
2025-06-18 10:06:17,421 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0020.png
2025-06-18 10:06:17,423 - INFO - all_hrd_plotter.py:69 - Sorted 19 runs by mass for Z=0.0025.
2025-06-18 10:06:17,423 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0025 with 19 masses...
2025-06-18 10:06:17,535 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.0 (Z=0.0025).
2025-06-18 10:06:17,540 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0025).
2025-06-18 10:06:17,545 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0025).
2025-06-18 10:06:17,549 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0025).
2025-06-18 10:06:17,553 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0025).
2025-06-18 10:06:17,557 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0025).
2025-06-18 10:06:17,562 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0025).
2025-06-18 10:06:17,567 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0025).
2025-06-18 10:06:17,571 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0025).
2025-06-18 10:06:17,576 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0025).
2025-06-18 10:06:17,580 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0025).
2025-06-18 10:06:17,584 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0025).
2025-06-18 10:06:17,589 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.0 (Z=0.0025).
2025-06-18 10:06:17,593 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.5 (Z=0.0025).
2025-06-18 10:06:17,598 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0025).
2025-06-18 10:06:17,603 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0025).
2025-06-18 10:06:17,607 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0025).
2025-06-18 10:06:17,611 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0025).
2025-06-18 10:06:17,615 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=12.0 (Z=0.0025).
2025-06-18 10:06:21,747 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0025.png
2025-06-18 10:06:21,748 - INFO - all_hrd_plotter.py:69 - Sorted 18 runs by mass for Z=0.0030.
2025-06-18 10:06:21,748 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0030 with 18 masses...
2025-06-18 10:06:21,859 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0030).
2025-06-18 10:06:21,864 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0030).
2025-06-18 10:06:21,868 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0030).
2025-06-18 10:06:21,872 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0030).
2025-06-18 10:06:21,876 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0030).
2025-06-18 10:06:21,881 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0030).
2025-06-18 10:06:21,885 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0030).
2025-06-18 10:06:21,889 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0030).
2025-06-18 10:06:21,893 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0030).
2025-06-18 10:06:21,897 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0030).
2025-06-18 10:06:21,901 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0030).
2025-06-18 10:06:21,906 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.0 (Z=0.0030).
2025-06-18 10:06:21,910 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.5 (Z=0.0030).
2025-06-18 10:06:21,914 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0030).
2025-06-18 10:06:21,918 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0030).
2025-06-18 10:06:21,922 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0030).
2025-06-18 10:06:21,926 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0030).
2025-06-18 10:06:21,930 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=12.0 (Z=0.0030).
2025-06-18 10:06:25,844 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0030.png
2025-06-18 10:06:25,845 - INFO - all_hrd_plotter.py:69 - Sorted 16 runs by mass for Z=0.0035.
2025-06-18 10:06:25,845 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0035 with 16 masses...
2025-06-18 10:06:25,936 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0035).
2025-06-18 10:06:25,941 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0035).
2025-06-18 10:06:25,945 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0035).
2025-06-18 10:06:25,950 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0035).
2025-06-18 10:06:25,954 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0035).
2025-06-18 10:06:25,958 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0035).
2025-06-18 10:06:25,962 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0035).
2025-06-18 10:06:25,966 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0035).
2025-06-18 10:06:25,970 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0035).
2025-06-18 10:06:25,974 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0035).
2025-06-18 10:06:25,978 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0035).
2025-06-18 10:06:25,983 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=9.0 (Z=0.0035).
2025-06-18 10:06:25,987 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0035).
2025-06-18 10:06:25,992 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0035).
2025-06-18 10:06:25,995 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0035).
2025-06-18 10:06:26,001 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0035).
2025-06-18 10:06:29,323 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0035.png
2025-06-18 10:06:29,326 - INFO - all_hrd_plotter.py:69 - Sorted 15 runs by mass for Z=0.0040.
2025-06-18 10:06:29,326 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0040 with 15 masses...
2025-06-18 10:06:29,571 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0040).
2025-06-18 10:06:29,576 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.0 (Z=0.0040).
2025-06-18 10:06:29,581 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=4.5 (Z=0.0040).
2025-06-18 10:06:29,585 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.0 (Z=0.0040).
2025-06-18 10:06:29,589 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=5.5 (Z=0.0040).
2025-06-18 10:06:29,593 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.0 (Z=0.0040).
2025-06-18 10:06:29,597 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=6.5 (Z=0.0040).
2025-06-18 10:06:29,602 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.0 (Z=0.0040).
2025-06-18 10:06:29,606 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=7.5 (Z=0.0040).
2025-06-18 10:06:29,610 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.0 (Z=0.0040).
2025-06-18 10:06:29,614 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=8.5 (Z=0.0040).
2025-06-18 10:06:29,618 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.0 (Z=0.0040).
2025-06-18 10:06:29,623 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=10.5 (Z=0.0040).
2025-06-18 10:06:29,627 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.0 (Z=0.0040).
2025-06-18 10:06:29,631 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=11.5 (Z=0.0040).
2025-06-18 10:06:32,761 - INFO - all_hrd_plotter.py:219 - ✔ Saved HR diagram: /home/tnd/mesagrid/mesa_blue_loop/output/hr_diagrams/HR_diagram_nad_convos_mid_z0.0040.png
2025-06-18 10:06:32,761 - WARNING - all_hrd_plotter.py:73 - DataFrame for Z=0.0045 is empty or 'initial_mass' column has no data. Skipping mass sort.
2025-06-18 10:06:32,761 - INFO - all_hrd_plotter.py:75 - ➡ Processing HR diagrams for Z=0.0045 with 15 masses...
2025-06-18 10:06:32,852 - INFO - all_hrd_plotter.py:135 - Trimmed pre-MS using 'center_h1' drop criterion (threshold=0.0001) for M=3.5 (Z=0.0045).
2025-06-18 10:06:32,855 - ERROR - mesa_plotter.py:165 - Error generating HR diagrams: single positional indexer is out-of-bounds
2025-06-18 10:06:32,855 - INFO - cli.py:215 - HR Diagrams generated.
2025-06-18 10:06:32,855 - INFO - cli.py:218 - Generating Blue Loop CMD/HRD with Bolometric Corrections...
2025-06-18 10:06:32,855 - INFO - mesa_plotter.py:98 - Attempting to generate blue loop specific plots with BCs...
2025-06-18 10:06:36,944 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=296)
           2	LOAD_FAST(arg=0, lineno=298)
           4	LOAD_FAST(arg=0, lineno=298)
           6	COMPARE_OP(arg=3, lineno=298)
           8	POP_JUMP_IF_TRUE(arg=18, lineno=298)
          10	LOAD_FAST(arg=1, lineno=298)
          12	LOAD_FAST(arg=1, lineno=298)
          14	COMPARE_OP(arg=3, lineno=298)
          16	POP_JUMP_IF_TRUE(arg=18, lineno=298)
          18	LOAD_FAST(arg=2, lineno=298)
          20	LOAD_FAST(arg=2, lineno=298)
          22	COMPARE_OP(arg=3, lineno=298)
          24	POP_JUMP_IF_TRUE(arg=18, lineno=298)
          26	LOAD_FAST(arg=3, lineno=298)
          28	LOAD_FAST(arg=3, lineno=298)
          30	COMPARE_OP(arg=3, lineno=298)
          32	POP_JUMP_IF_FALSE(arg=28, lineno=298)
>         34	LOAD_GLOBAL(arg=0, lineno=299)
          36	LOAD_METHOD(arg=1, lineno=299)
          38	LOAD_CONST(arg=1, lineno=299)
          40	LOAD_CONST(arg=2, lineno=299)
          42	MAKE_FUNCTION(arg=0, lineno=299)
          44	LOAD_FAST(arg=5, lineno=299)
          46	GET_ITER(arg=None, lineno=299)
          48	CALL_FUNCTION(arg=1, lineno=299)
          50	CALL_METHOD(arg=1, lineno=299)
          52	RETURN_VALUE(arg=None, lineno=299)
>         54	LOAD_GLOBAL(arg=2, lineno=301)
          56	LOAD_FAST(arg=0, lineno=301)
          58	LOAD_FAST(arg=1, lineno=301)
          60	LOAD_FAST(arg=2, lineno=301)
          62	LOAD_FAST(arg=3, lineno=301)
          64	LOAD_FAST(arg=6, lineno=301)
          66	LOAD_FAST(arg=7, lineno=301)
          68	LOAD_FAST(arg=8, lineno=301)
          70	LOAD_FAST(arg=9, lineno=301)
          72	CALL_FUNCTION(arg=8, lineno=301)
          74	UNPACK_SEQUENCE(arg=3, lineno=301)
          76	STORE_FAST(arg=10, lineno=301)
          78	STORE_FAST(arg=11, lineno=301)
          80	STORE_FAST(arg=12, lineno=301)
          82	LOAD_FAST(arg=12, lineno=303)
          84	POP_JUMP_IF_FALSE(arg=54, lineno=303)
          86	LOAD_GLOBAL(arg=0, lineno=304)
          88	LOAD_METHOD(arg=1, lineno=304)
          90	LOAD_CONST(arg=3, lineno=304)
          92	LOAD_CONST(arg=2, lineno=304)
          94	MAKE_FUNCTION(arg=0, lineno=304)
          96	LOAD_FAST(arg=5, lineno=304)
          98	GET_ITER(arg=None, lineno=304)
         100	CALL_FUNCTION(arg=1, lineno=304)
         102	CALL_METHOD(arg=1, lineno=304)
         104	RETURN_VALUE(arg=None, lineno=304)
>        106	LOAD_CONST(arg=4, lineno=309)
         108	STORE_FAST(arg=13, lineno=309)
         110	LOAD_CONST(arg=5, lineno=310)
         112	LOAD_FAST(arg=13, lineno=310)
         114	BINARY_POWER(arg=None, lineno=310)
         116	STORE_FAST(arg=14, lineno=310)
         118	LOAD_GLOBAL(arg=0, lineno=311)
         120	LOAD_METHOD(arg=3, lineno=311)
         122	LOAD_FAST(arg=14, lineno=311)
         124	LOAD_FAST(arg=13, lineno=311)
         126	BUILD_TUPLE(arg=2, lineno=311)
         128	CALL_METHOD(arg=1, lineno=311)
         130	STORE_FAST(arg=15, lineno=311)
         132	LOAD_GLOBAL(arg=4, lineno=312)
         134	LOAD_FAST(arg=14, lineno=312)
         136	CALL_FUNCTION(arg=1, lineno=312)
         138	GET_ITER(arg=None, lineno=312)
>        140	FOR_ITER(arg=27, lineno=312)
         142	STORE_FAST(arg=16, lineno=312)
         144	LOAD_GLOBAL(arg=4, lineno=313)
         146	LOAD_FAST(arg=13, lineno=313)
         148	CALL_FUNCTION(arg=1, lineno=313)
         150	GET_ITER(arg=None, lineno=313)
>        152	FOR_ITER(arg=20, lineno=313)
         154	STORE_FAST(arg=17, lineno=313)
         156	LOAD_FAST(arg=10, lineno=314)
         158	LOAD_FAST(arg=17, lineno=314)
         160	BINARY_SUBSCR(arg=None, lineno=314)
         162	LOAD_FAST(arg=16, lineno=314)
         164	LOAD_FAST(arg=13, lineno=314)
         166	LOAD_CONST(arg=6, lineno=314)
         168	BINARY_SUBTRACT(arg=None, lineno=314)
         170	LOAD_FAST(arg=17, lineno=314)
         172	BINARY_SUBTRACT(arg=None, lineno=314)
         174	BINARY_RSHIFT(arg=None, lineno=314)
         176	LOAD_CONST(arg=6, lineno=314)
         178	BINARY_AND(arg=None, lineno=314)
         180	BINARY_ADD(arg=None, lineno=314)
         182	LOAD_FAST(arg=15, lineno=314)
         184	LOAD_FAST(arg=16, lineno=314)
         186	LOAD_FAST(arg=17, lineno=314)
         188	BUILD_TUPLE(arg=2, lineno=314)
         190	STORE_SUBSCR(arg=None, lineno=314)
         192	JUMP_ABSOLUTE(arg=77, lineno=314)
>        194	JUMP_ABSOLUTE(arg=71, lineno=313)
>        196	LOAD_GLOBAL(arg=5, lineno=316)
         198	LOAD_FAST(arg=5, lineno=316)
         200	CALL_FUNCTION(arg=1, lineno=316)
         202	STORE_FAST(arg=18, lineno=316)
         204	LOAD_GLOBAL(arg=0, lineno=317)
         206	LOAD_ATTR(arg=3, lineno=317)
         208	LOAD_FAST(arg=18, lineno=317)
         210	LOAD_GLOBAL(arg=6, lineno=317)
         212	LOAD_ATTR(arg=7, lineno=317)
         214	LOAD_CONST(arg=7, lineno=317)
         216	CALL_FUNCTION_KW(arg=2, lineno=317)
         218	STORE_FAST(arg=19, lineno=317)
         220	LOAD_GLOBAL(arg=4, lineno=319)
         222	LOAD_FAST(arg=14, lineno=319)
         224	CALL_FUNCTION(arg=1, lineno=319)
         226	GET_ITER(arg=None, lineno=319)
>        228	FOR_ITER(arg=92, lineno=319)
         230	STORE_FAST(arg=17, lineno=319)
         232	LOAD_GLOBAL(arg=0, lineno=320)
         234	LOAD_ATTR(arg=3, lineno=320)
         236	LOAD_FAST(arg=13, lineno=320)
         238	LOAD_GLOBAL(arg=6, lineno=320)
         240	LOAD_ATTR(arg=8, lineno=320)
         242	LOAD_CONST(arg=7, lineno=320)
         244	CALL_FUNCTION_KW(arg=2, lineno=320)
         246	STORE_FAST(arg=20, lineno=320)
         248	LOAD_GLOBAL(arg=4, lineno=321)
         250	LOAD_FAST(arg=13, lineno=321)
         252	CALL_FUNCTION(arg=1, lineno=321)
         254	GET_ITER(arg=None, lineno=321)
>        256	FOR_ITER(arg=10, lineno=321)
         258	STORE_FAST(arg=21, lineno=321)
         260	LOAD_FAST(arg=15, lineno=322)
         262	LOAD_FAST(arg=17, lineno=322)
         264	LOAD_FAST(arg=21, lineno=322)
         266	BUILD_TUPLE(arg=2, lineno=322)
         268	BINARY_SUBSCR(arg=None, lineno=322)
         270	LOAD_FAST(arg=20, lineno=322)
         272	LOAD_FAST(arg=21, lineno=322)
         274	STORE_SUBSCR(arg=None, lineno=322)
         276	JUMP_ABSOLUTE(arg=129, lineno=322)
>        278	LOAD_CONST(arg=8, lineno=324)
         280	STORE_FAST(arg=22, lineno=324)
         282	LOAD_GLOBAL(arg=9, lineno=325)
         284	LOAD_FAST(arg=20, lineno=325)
         286	LOAD_FAST(arg=10, lineno=325)
         288	LOAD_FAST(arg=11, lineno=325)
         290	CALL_FUNCTION(arg=3, lineno=325)
         292	GET_ITER(arg=None, lineno=325)
>        294	FOR_ITER(arg=20, lineno=325)
         296	UNPACK_SEQUENCE(arg=3, lineno=325)
         298	STORE_FAST(arg=23, lineno=325)
         300	STORE_FAST(arg=16, lineno=325)
         302	STORE_FAST(arg=24, lineno=325)
         304	LOAD_FAST(arg=23, lineno=326)
         306	LOAD_FAST(arg=16, lineno=326)
         308	COMPARE_OP(arg=2, lineno=326)
         310	POP_JUMP_IF_FALSE(arg=164, lineno=326)
         312	LOAD_FAST(arg=22, lineno=327)
         314	LOAD_CONST(arg=6, lineno=327)
         316	LOAD_FAST(arg=24, lineno=327)
         318	BINARY_SUBTRACT(arg=None, lineno=327)
         320	INPLACE_MULTIPLY(arg=None, lineno=327)
         322	STORE_FAST(arg=22, lineno=327)
         324	JUMP_ABSOLUTE(arg=148, lineno=327)
>        326	LOAD_FAST(arg=22, lineno=329)
         328	LOAD_FAST(arg=24, lineno=329)
         330	INPLACE_MULTIPLY(arg=None, lineno=329)
         332	STORE_FAST(arg=22, lineno=329)
         334	JUMP_ABSOLUTE(arg=148, lineno=329)
>        336	LOAD_GLOBAL(arg=4, lineno=331)
         338	LOAD_FAST(arg=18, lineno=331)
         340	CALL_FUNCTION(arg=1, lineno=331)
         342	GET_ITER(arg=None, lineno=331)
>        344	FOR_ITER(arg=33, lineno=331)
         346	STORE_FAST(arg=25, lineno=331)
         348	LOAD_FAST(arg=5, lineno=332)
         350	LOAD_FAST(arg=25, lineno=332)
         352	BINARY_SUBSCR(arg=None, lineno=332)
         354	STORE_FAST(arg=26, lineno=332)
         356	LOAD_FAST(arg=20, lineno=335)
         358	LOAD_CONST(arg=9, lineno=335)
         360	BINARY_SUBSCR(arg=None, lineno=335)
         362	LOAD_FAST(arg=20, lineno=335)
         364	LOAD_CONST(arg=6, lineno=335)
         366	BINARY_SUBSCR(arg=None, lineno=335)
         368	LOAD_FAST(arg=20, lineno=335)
         370	LOAD_CONST(arg=5, lineno=335)
         372	BINARY_SUBSCR(arg=None, lineno=335)
         374	LOAD_FAST(arg=20, lineno=335)
         376	LOAD_CONST(arg=10, lineno=335)
         378	BINARY_SUBSCR(arg=None, lineno=335)
         380	LOAD_FAST(arg=26, lineno=335)
         382	BUILD_TUPLE(arg=5, lineno=335)
         384	STORE_FAST(arg=27, lineno=335)
         386	LOAD_FAST(arg=19, lineno=336)
         388	LOAD_FAST(arg=25, lineno=336)
         390	DUP_TOP_TWO(arg=None, lineno=336)
         392	BINARY_SUBSCR(arg=None, lineno=336)
         394	LOAD_FAST(arg=4, lineno=336)
         396	LOAD_FAST(arg=27, lineno=336)
         398	BINARY_SUBSCR(arg=None, lineno=336)
         400	LOAD_FAST(arg=22, lineno=336)
         402	BINARY_MULTIPLY(arg=None, lineno=336)
         404	INPLACE_ADD(arg=None, lineno=336)
         406	ROT_THREE(arg=None, lineno=336)
         408	STORE_SUBSCR(arg=None, lineno=336)
         410	JUMP_ABSOLUTE(arg=173, lineno=336)
>        412	JUMP_ABSOLUTE(arg=115, lineno=331)
>        414	LOAD_FAST(arg=19, lineno=338)
         416	RETURN_VALUE(arg=None, lineno=338)
2025-06-18 10:06:36,944 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:36,944 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,944 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=296)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$x02.0']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=COMPARE_OP(arg=3, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$x02.0', '$x04.1']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=POP_JUMP_IF_TRUE(arg=18, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$6compare_op.2']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=10 nstack_initial=0)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$x110.0']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=COMPARE_OP(arg=3, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$x110.0', '$x112.1']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=POP_JUMP_IF_TRUE(arg=18, lineno=298)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:342 - stack ['$14compare_op.2']
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-06-18 10:06:36,945 - DEBUG - byteflow.py:341 - dispatch pc=34, inst=LOAD_GLOBAL(arg=0, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=36, inst=LOAD_METHOD(arg=1, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$34load_global.0']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$const38.2.1']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=42, inst=MAKE_FUNCTION(arg=0, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$const38.2.1', '$const40.3.2']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$42make_function.4']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=46, inst=GET_ITER(arg=None, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$42make_function.4', '$icols44.5']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$42make_function.4', '$46get_iter.6']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=50, inst=CALL_METHOD(arg=1, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$36load_method.1', '$48call_function.7']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=52, inst=RETURN_VALUE(arg=None, lineno=299)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$50call_method.8']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=18 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=18 nstack_initial=0)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=298)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=298)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$x218.0']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=COMPARE_OP(arg=3, lineno=298)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$x218.0', '$x220.1']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=POP_JUMP_IF_TRUE(arg=18, lineno=298)
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:342 - stack ['$22compare_op.2']
2025-06-18 10:06:36,946 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=298)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=298)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$x326.0']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=30, inst=COMPARE_OP(arg=3, lineno=298)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$x326.0', '$x328.1']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=28, lineno=298)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$30compare_op.2']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=54, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=34 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=54 nstack_initial=0)])
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=64, inst=LOAD_FAST(arg=6, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3', '$x362.4']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=66, inst=LOAD_FAST(arg=7, lineno=301)
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3', '$x362.4', '$ii064.5']
2025-06-18 10:06:36,947 - DEBUG - byteflow.py:341 - dispatch pc=68, inst=LOAD_FAST(arg=8, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3', '$x362.4', '$ii064.5', '$ii166.6']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=70, inst=LOAD_FAST(arg=9, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3', '$x362.4', '$ii064.5', '$ii166.6', '$ii268.7']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=72, inst=CALL_FUNCTION(arg=8, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$54load_global.0', '$x056.1', '$x158.2', '$x260.3', '$x362.4', '$ii064.5', '$ii166.6', '$ii268.7', '$ii370.8']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=74, inst=UNPACK_SEQUENCE(arg=3, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$72call_function.9']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=76, inst=STORE_FAST(arg=10, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$74unpack_sequence.12', '$74unpack_sequence.11', '$74unpack_sequence.10']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=78, inst=STORE_FAST(arg=11, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$74unpack_sequence.12', '$74unpack_sequence.11']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=80, inst=STORE_FAST(arg=12, lineno=301)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$74unpack_sequence.12']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=82, inst=LOAD_FAST(arg=12, lineno=303)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=84, inst=POP_JUMP_IF_FALSE(arg=54, lineno=303)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$out_of_bounds82.14']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=86, inst=LOAD_GLOBAL(arg=0, lineno=304)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=88, inst=LOAD_METHOD(arg=1, lineno=304)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$86load_global.0']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=304)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$88load_method.1']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=304)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$const90.2.3']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=94, inst=MAKE_FUNCTION(arg=0, lineno=304)
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$const90.2.3', '$const92.3.2']
2025-06-18 10:06:36,948 - DEBUG - byteflow.py:341 - dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=304)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$94make_function.4']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=98, inst=GET_ITER(arg=None, lineno=304)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$94make_function.4', '$icols96.5']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=100, inst=CALL_FUNCTION(arg=1, lineno=304)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$94make_function.4', '$98get_iter.6']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=102, inst=CALL_METHOD(arg=1, lineno=304)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$88load_method.1', '$100call_function.7']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=304)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$102call_method.8']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=106, inst=LOAD_CONST(arg=4, lineno=309)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=108, inst=STORE_FAST(arg=13, lineno=309)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$const106.0.4']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=110, inst=LOAD_CONST(arg=5, lineno=310)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=112, inst=LOAD_FAST(arg=13, lineno=310)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$const110.1.5']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=114, inst=BINARY_POWER(arg=None, lineno=310)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$const110.1.5', '$ndim112.2']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=116, inst=STORE_FAST(arg=14, lineno=310)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$114binary_power.3']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=118, inst=LOAD_GLOBAL(arg=0, lineno=311)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=120, inst=LOAD_METHOD(arg=3, lineno=311)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$118load_global.4']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=122, inst=LOAD_FAST(arg=14, lineno=311)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$120load_method.5']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=124, inst=LOAD_FAST(arg=13, lineno=311)
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:342 - stack ['$120load_method.5', '$n_edges122.6']
2025-06-18 10:06:36,949 - DEBUG - byteflow.py:341 - dispatch pc=126, inst=BUILD_TUPLE(arg=2, lineno=311)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$120load_method.5', '$n_edges122.6', '$ndim124.7']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=128, inst=CALL_METHOD(arg=1, lineno=311)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$120load_method.5', '$126build_tuple.8']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=130, inst=STORE_FAST(arg=15, lineno=311)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$128call_method.9']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=132, inst=LOAD_GLOBAL(arg=4, lineno=312)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=134, inst=LOAD_FAST(arg=14, lineno=312)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$132load_global.10']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=136, inst=CALL_FUNCTION(arg=1, lineno=312)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$132load_global.10', '$n_edges134.11']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=138, inst=GET_ITER(arg=None, lineno=312)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$136call_function.12']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=140, stack=('$138get_iter.13',), blockstack=(), npush=0)]
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=140 nstack_initial=1)])
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:110 - stack: ['$phi140.0']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=140 nstack_initial=1)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=140, inst=FOR_ITER(arg=27, lineno=312)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$phi140.0']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=196, stack=(), blockstack=(), npush=0), Edge(pc=142, stack=('$phi140.0', '$140for_iter.2'), blockstack=(), npush=0)]
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=196 nstack_initial=0), State(pc_initial=142 nstack_initial=2)])
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=196 nstack_initial=0)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=196, inst=LOAD_GLOBAL(arg=5, lineno=316)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=198, inst=LOAD_FAST(arg=5, lineno=316)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$196load_global.0']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=200, inst=CALL_FUNCTION(arg=1, lineno=316)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$196load_global.0', '$icols198.1']
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:341 - dispatch pc=202, inst=STORE_FAST(arg=18, lineno=316)
2025-06-18 10:06:36,950 - DEBUG - byteflow.py:342 - stack ['$200call_function.2']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=206, inst=LOAD_ATTR(arg=3, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$204load_global.3']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=208, inst=LOAD_FAST(arg=18, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$206load_attr.4']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=210, inst=LOAD_GLOBAL(arg=6, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$206load_attr.4', '$n_values208.5']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=212, inst=LOAD_ATTR(arg=7, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$206load_attr.4', '$n_values208.5', '$210load_global.6']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=214, inst=LOAD_CONST(arg=7, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$206load_attr.4', '$n_values208.5', '$212load_attr.7']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=216, inst=CALL_FUNCTION_KW(arg=2, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$206load_attr.4', '$n_values208.5', '$212load_attr.7', '$const214.8.7']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=218, inst=STORE_FAST(arg=19, lineno=317)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$216call_function_kw.9']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=220, inst=LOAD_GLOBAL(arg=4, lineno=319)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=222, inst=LOAD_FAST(arg=14, lineno=319)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$220load_global.10']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=224, inst=CALL_FUNCTION(arg=1, lineno=319)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$220load_global.10', '$n_edges222.11']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=226, inst=GET_ITER(arg=None, lineno=319)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$224call_function.12']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=228, stack=('$226get_iter.13',), blockstack=(), npush=0)]
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=142 nstack_initial=2), State(pc_initial=228 nstack_initial=1)])
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:110 - stack: ['$phi142.0', '$phi142.1']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=142 nstack_initial=2)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=142, inst=STORE_FAST(arg=16, lineno=312)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$phi142.0', '$phi142.1']
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:341 - dispatch pc=144, inst=LOAD_GLOBAL(arg=4, lineno=313)
2025-06-18 10:06:36,951 - DEBUG - byteflow.py:342 - stack ['$phi142.0']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=146, inst=LOAD_FAST(arg=13, lineno=313)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$phi142.0', '$144load_global.2']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=148, inst=CALL_FUNCTION(arg=1, lineno=313)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$phi142.0', '$144load_global.2', '$ndim146.3']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=150, inst=GET_ITER(arg=None, lineno=313)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$phi142.0', '$148call_function.4']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=152, stack=('$phi142.0', '$150get_iter.5'), blockstack=(), npush=0)]
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=228 nstack_initial=1), State(pc_initial=152 nstack_initial=2)])
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:110 - stack: ['$phi228.0']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=228 nstack_initial=1)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=228, inst=FOR_ITER(arg=92, lineno=319)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$phi228.0']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=414, stack=(), blockstack=(), npush=0), Edge(pc=230, stack=('$phi228.0', '$228for_iter.2'), blockstack=(), npush=0)]
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=152 nstack_initial=2), State(pc_initial=414 nstack_initial=0), State(pc_initial=230 nstack_initial=2)])
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:110 - stack: ['$phi152.0', '$phi152.1']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=152 nstack_initial=2)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=152, inst=FOR_ITER(arg=20, lineno=313)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$phi152.0', '$phi152.1']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=194, stack=('$phi152.0',), blockstack=(), npush=0), Edge(pc=154, stack=('$phi152.0', '$phi152.1', '$152for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=414 nstack_initial=0), State(pc_initial=230 nstack_initial=2), State(pc_initial=194 nstack_initial=1), State(pc_initial=154 nstack_initial=3)])
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=414 nstack_initial=0)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=414, inst=LOAD_FAST(arg=19, lineno=338)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=416, inst=RETURN_VALUE(arg=None, lineno=338)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:342 - stack ['$values414.0']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=230 nstack_initial=2), State(pc_initial=194 nstack_initial=1), State(pc_initial=154 nstack_initial=3)])
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:110 - stack: ['$phi230.0', '$phi230.1']
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=230 nstack_initial=2)
2025-06-18 10:06:36,952 - DEBUG - byteflow.py:341 - dispatch pc=230, inst=STORE_FAST(arg=17, lineno=319)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$phi230.1']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=232, inst=LOAD_GLOBAL(arg=0, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=234, inst=LOAD_ATTR(arg=3, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$232load_global.2']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=236, inst=LOAD_FAST(arg=13, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$234load_attr.3']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=238, inst=LOAD_GLOBAL(arg=6, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$234load_attr.3', '$ndim236.4']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=240, inst=LOAD_ATTR(arg=8, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$234load_attr.3', '$ndim236.4', '$238load_global.5']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=242, inst=LOAD_CONST(arg=7, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$234load_attr.3', '$ndim236.4', '$240load_attr.6']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=244, inst=CALL_FUNCTION_KW(arg=2, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$234load_attr.3', '$ndim236.4', '$240load_attr.6', '$const242.7.7']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=246, inst=STORE_FAST(arg=20, lineno=320)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$244call_function_kw.8']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=248, inst=LOAD_GLOBAL(arg=4, lineno=321)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=250, inst=LOAD_FAST(arg=13, lineno=321)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$248load_global.9']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=252, inst=CALL_FUNCTION(arg=1, lineno=321)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$248load_global.9', '$ndim250.10']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=254, inst=GET_ITER(arg=None, lineno=321)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi230.0', '$252call_function.11']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=256, stack=('$phi230.0', '$254get_iter.12'), blockstack=(), npush=0)]
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=194 nstack_initial=1), State(pc_initial=154 nstack_initial=3), State(pc_initial=256 nstack_initial=2)])
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:110 - stack: ['$phi194.0']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:341 - dispatch pc=194, inst=JUMP_ABSOLUTE(arg=71, lineno=313)
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:342 - stack ['$phi194.0']
2025-06-18 10:06:36,953 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=140, stack=('$phi194.0',), blockstack=(), npush=0)]
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=154 nstack_initial=3), State(pc_initial=256 nstack_initial=2), State(pc_initial=140 nstack_initial=1)])
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:110 - stack: ['$phi154.0', '$phi154.1', '$phi154.2']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=154 nstack_initial=3)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=154, inst=STORE_FAST(arg=17, lineno=313)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$phi154.2']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=156, inst=LOAD_FAST(arg=10, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$indices156.3']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$indices156.3', '$j158.4']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=162, inst=LOAD_FAST(arg=16, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=164, inst=LOAD_FAST(arg=13, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=166, inst=LOAD_CONST(arg=6, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6', '$ndim164.7']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=168, inst=BINARY_SUBTRACT(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6', '$ndim164.7', '$const166.8.6']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=170, inst=LOAD_FAST(arg=17, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6', '$168binary_subtract.9']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=172, inst=BINARY_SUBTRACT(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6', '$168binary_subtract.9', '$j170.10']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=174, inst=BINARY_RSHIFT(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$i162.6', '$172binary_subtract.11']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=176, inst=LOAD_CONST(arg=6, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$174binary_rshift.12']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=178, inst=BINARY_AND(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$174binary_rshift.12', '$const176.13.6']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=180, inst=BINARY_ADD(arg=None, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$160binary_subscr.5', '$178binary_and.14']
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:341 - dispatch pc=182, inst=LOAD_FAST(arg=15, lineno=314)
2025-06-18 10:06:36,954 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$180binary_add.15']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=184, inst=LOAD_FAST(arg=16, lineno=314)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$180binary_add.15', '$edges182.16']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=186, inst=LOAD_FAST(arg=17, lineno=314)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$180binary_add.15', '$edges182.16', '$i184.17']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=188, inst=BUILD_TUPLE(arg=2, lineno=314)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$180binary_add.15', '$edges182.16', '$i184.17', '$j186.18']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=190, inst=STORE_SUBSCR(arg=None, lineno=314)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1', '$180binary_add.15', '$edges182.16', '$188build_tuple.19']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=192, inst=JUMP_ABSOLUTE(arg=77, lineno=314)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi154.0', '$phi154.1']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=152, stack=('$phi154.0', '$phi154.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=256 nstack_initial=2), State(pc_initial=140 nstack_initial=1), State(pc_initial=152 nstack_initial=2)])
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:110 - stack: ['$phi256.0', '$phi256.1']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=256 nstack_initial=2)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=256, inst=FOR_ITER(arg=10, lineno=321)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi256.0', '$phi256.1']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=278, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=258, stack=('$phi256.0', '$phi256.1', '$256for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=140 nstack_initial=1), State(pc_initial=152 nstack_initial=2), State(pc_initial=278 nstack_initial=1), State(pc_initial=258 nstack_initial=3)])
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=152 nstack_initial=2), State(pc_initial=278 nstack_initial=1), State(pc_initial=258 nstack_initial=3)])
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=278 nstack_initial=1), State(pc_initial=258 nstack_initial=3)])
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:110 - stack: ['$phi278.0']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=278 nstack_initial=1)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=278, inst=LOAD_CONST(arg=8, lineno=324)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi278.0']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=280, inst=STORE_FAST(arg=22, lineno=324)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$const278.1.8']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=282, inst=LOAD_GLOBAL(arg=9, lineno=325)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi278.0']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=284, inst=LOAD_FAST(arg=20, lineno=325)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$282load_global.2']
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:341 - dispatch pc=286, inst=LOAD_FAST(arg=10, lineno=325)
2025-06-18 10:06:36,955 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$282load_global.2', '$edge_indices284.3']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=288, inst=LOAD_FAST(arg=11, lineno=325)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$282load_global.2', '$edge_indices284.3', '$indices286.4']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=290, inst=CALL_FUNCTION(arg=3, lineno=325)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$282load_global.2', '$edge_indices284.3', '$indices286.4', '$norm_distances288.5']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=292, inst=GET_ITER(arg=None, lineno=325)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi278.0', '$290call_function.6']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=294, stack=('$phi278.0', '$292get_iter.7'), blockstack=(), npush=0)]
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=258 nstack_initial=3), State(pc_initial=294 nstack_initial=2)])
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:110 - stack: ['$phi258.0', '$phi258.1', '$phi258.2']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=258 nstack_initial=3)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=258, inst=STORE_FAST(arg=21, lineno=321)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$phi258.2']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=262, inst=LOAD_FAST(arg=17, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$edges260.3']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=264, inst=LOAD_FAST(arg=21, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$edges260.3', '$j262.4']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=266, inst=BUILD_TUPLE(arg=2, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$edges260.3', '$j262.4', '$k264.5']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$edges260.3', '$266build_tuple.6']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=270, inst=LOAD_FAST(arg=20, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$268binary_subscr.7']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=272, inst=LOAD_FAST(arg=21, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$268binary_subscr.7', '$edge_indices270.8']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=274, inst=STORE_SUBSCR(arg=None, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1', '$268binary_subscr.7', '$edge_indices270.8', '$k272.9']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:341 - dispatch pc=276, inst=JUMP_ABSOLUTE(arg=129, lineno=322)
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:342 - stack ['$phi258.0', '$phi258.1']
2025-06-18 10:06:36,956 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=256, stack=('$phi258.0', '$phi258.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=294 nstack_initial=2), State(pc_initial=256 nstack_initial=2)])
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:110 - stack: ['$phi294.0', '$phi294.1']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=294 nstack_initial=2)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=294, inst=FOR_ITER(arg=20, lineno=325)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi294.0', '$phi294.1']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=336, stack=('$phi294.0',), blockstack=(), npush=0), Edge(pc=296, stack=('$phi294.0', '$phi294.1', '$294for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=256 nstack_initial=2), State(pc_initial=336 nstack_initial=1), State(pc_initial=296 nstack_initial=3)])
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=336 nstack_initial=1), State(pc_initial=296 nstack_initial=3)])
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:110 - stack: ['$phi336.0']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=336 nstack_initial=1)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=336, inst=LOAD_GLOBAL(arg=4, lineno=331)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi336.0']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=338, inst=LOAD_FAST(arg=18, lineno=331)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi336.0', '$336load_global.1']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=340, inst=CALL_FUNCTION(arg=1, lineno=331)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi336.0', '$336load_global.1', '$n_values338.2']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=342, inst=GET_ITER(arg=None, lineno=331)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi336.0', '$340call_function.3']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=344, stack=('$phi336.0', '$342get_iter.4'), blockstack=(), npush=0)]
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=296 nstack_initial=3), State(pc_initial=344 nstack_initial=2)])
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:110 - stack: ['$phi296.0', '$phi296.1', '$phi296.2']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=296 nstack_initial=3)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=296, inst=UNPACK_SEQUENCE(arg=3, lineno=325)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$phi296.2']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=298, inst=STORE_FAST(arg=23, lineno=325)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$296unpack_sequence.5', '$296unpack_sequence.4', '$296unpack_sequence.3']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=300, inst=STORE_FAST(arg=16, lineno=325)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$296unpack_sequence.5', '$296unpack_sequence.4']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=302, inst=STORE_FAST(arg=24, lineno=325)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$296unpack_sequence.5']
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:341 - dispatch pc=304, inst=LOAD_FAST(arg=23, lineno=326)
2025-06-18 10:06:36,957 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=306, inst=LOAD_FAST(arg=16, lineno=326)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$ei304.7']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=308, inst=COMPARE_OP(arg=2, lineno=326)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$ei304.7', '$i306.8']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=164, lineno=326)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi296.0', '$phi296.1', '$308compare_op.9']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=312, stack=('$phi296.0', '$phi296.1'), blockstack=(), npush=0), Edge(pc=326, stack=('$phi296.0', '$phi296.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=344 nstack_initial=2), State(pc_initial=312 nstack_initial=2), State(pc_initial=326 nstack_initial=2)])
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:110 - stack: ['$phi344.0', '$phi344.1']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=344 nstack_initial=2)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=344, inst=FOR_ITER(arg=33, lineno=331)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi344.0', '$phi344.1']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=412, stack=('$phi344.0',), blockstack=(), npush=0), Edge(pc=346, stack=('$phi344.0', '$phi344.1', '$344for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=312 nstack_initial=2), State(pc_initial=326 nstack_initial=2), State(pc_initial=412 nstack_initial=1), State(pc_initial=346 nstack_initial=3)])
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:110 - stack: ['$phi312.0', '$phi312.1']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=312 nstack_initial=2)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=312, inst=LOAD_FAST(arg=22, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=314, inst=LOAD_CONST(arg=6, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1', '$weight312.2']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=316, inst=LOAD_FAST(arg=24, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1', '$weight312.2', '$const314.3.6']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=318, inst=BINARY_SUBTRACT(arg=None, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1', '$weight312.2', '$const314.3.6', '$yi316.4']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=320, inst=INPLACE_MULTIPLY(arg=None, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1', '$weight312.2', '$318binary_subtract.5']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=322, inst=STORE_FAST(arg=22, lineno=327)
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1', '$320inplace_multiply.6']
2025-06-18 10:06:36,958 - DEBUG - byteflow.py:341 - dispatch pc=324, inst=JUMP_ABSOLUTE(arg=148, lineno=327)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi312.0', '$phi312.1']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=294, stack=('$phi312.0', '$phi312.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=326 nstack_initial=2), State(pc_initial=412 nstack_initial=1), State(pc_initial=346 nstack_initial=3), State(pc_initial=294 nstack_initial=2)])
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:110 - stack: ['$phi326.0', '$phi326.1']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=326 nstack_initial=2)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=326, inst=LOAD_FAST(arg=22, lineno=329)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi326.0', '$phi326.1']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=328, inst=LOAD_FAST(arg=24, lineno=329)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi326.0', '$phi326.1', '$weight326.2']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=330, inst=INPLACE_MULTIPLY(arg=None, lineno=329)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi326.0', '$phi326.1', '$weight326.2', '$yi328.3']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=332, inst=STORE_FAST(arg=22, lineno=329)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi326.0', '$phi326.1', '$330inplace_multiply.4']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=334, inst=JUMP_ABSOLUTE(arg=148, lineno=329)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi326.0', '$phi326.1']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=294, stack=('$phi326.0', '$phi326.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=412 nstack_initial=1), State(pc_initial=346 nstack_initial=3), State(pc_initial=294 nstack_initial=2), State(pc_initial=294 nstack_initial=2)])
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:110 - stack: ['$phi412.0']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=412 nstack_initial=1)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=412, inst=JUMP_ABSOLUTE(arg=115, lineno=331)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi412.0']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=228, stack=('$phi412.0',), blockstack=(), npush=0)]
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=346 nstack_initial=3), State(pc_initial=294 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=228 nstack_initial=1)])
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:110 - stack: ['$phi346.0', '$phi346.1', '$phi346.2']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=346 nstack_initial=3)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=346, inst=STORE_FAST(arg=25, lineno=331)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$phi346.2']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=348, inst=LOAD_FAST(arg=5, lineno=332)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=350, inst=LOAD_FAST(arg=25, lineno=332)
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$icols348.3']
2025-06-18 10:06:36,959 - DEBUG - byteflow.py:341 - dispatch pc=352, inst=BINARY_SUBSCR(arg=None, lineno=332)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$icols348.3', '$i_icol350.4']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=354, inst=STORE_FAST(arg=26, lineno=332)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$352binary_subscr.5']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=356, inst=LOAD_FAST(arg=20, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=358, inst=LOAD_CONST(arg=9, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$edge_indices356.6']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=360, inst=BINARY_SUBSCR(arg=None, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$edge_indices356.6', '$const358.7.9']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=362, inst=LOAD_FAST(arg=20, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=364, inst=LOAD_CONST(arg=6, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$edge_indices362.9']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=366, inst=BINARY_SUBSCR(arg=None, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$edge_indices362.9', '$const364.10.6']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=368, inst=LOAD_FAST(arg=20, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=370, inst=LOAD_CONST(arg=5, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$edge_indices368.12']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$edge_indices368.12', '$const370.13.5']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=374, inst=LOAD_FAST(arg=20, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=376, inst=LOAD_CONST(arg=10, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$edge_indices374.15']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=378, inst=BINARY_SUBSCR(arg=None, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$edge_indices374.15', '$const376.16.10']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=380, inst=LOAD_FAST(arg=26, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$378binary_subscr.17']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=382, inst=BUILD_TUPLE(arg=5, lineno=335)
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$378binary_subscr.17', '$icol380.18']
2025-06-18 10:06:36,960 - DEBUG - byteflow.py:341 - dispatch pc=384, inst=STORE_FAST(arg=27, lineno=335)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$382build_tuple.19']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=386, inst=LOAD_FAST(arg=19, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=388, inst=LOAD_FAST(arg=25, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=390, inst=DUP_TOP_TWO(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$390dup_top_two.22', '$390dup_top_two.23']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=394, inst=LOAD_FAST(arg=4, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=396, inst=LOAD_FAST(arg=27, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24', '$grid394.25']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24', '$grid394.25', '$grid_indices396.26']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=400, inst=LOAD_FAST(arg=22, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24', '$398binary_subscr.27']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=402, inst=BINARY_MULTIPLY(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24', '$398binary_subscr.27', '$weight400.28']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=404, inst=INPLACE_ADD(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$392binary_subscr.24', '$402binary_multiply.29']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=406, inst=ROT_THREE(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$values386.20', '$i_icol388.21', '$404inplace_add.30']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=408, inst=STORE_SUBSCR(arg=None, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1', '$404inplace_add.30', '$values386.20', '$i_icol388.21']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:341 - dispatch pc=410, inst=JUMP_ABSOLUTE(arg=173, lineno=336)
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:342 - stack ['$phi346.0', '$phi346.1']
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=344, stack=('$phi346.0', '$phi346.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=294 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=228 nstack_initial=1), State(pc_initial=344 nstack_initial=2)])
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=294 nstack_initial=2), State(pc_initial=228 nstack_initial=1), State(pc_initial=344 nstack_initial=2)])
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=228 nstack_initial=1), State(pc_initial=344 nstack_initial=2)])
2025-06-18 10:06:36,961 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=344 nstack_initial=2)])
2025-06-18 10:06:36,962 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:36,962 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=1): {'$phi140.0'},
             State(pc_initial=142 nstack_initial=2): {'$phi142.1'},
             State(pc_initial=152 nstack_initial=2): {'$phi152.1'},
             State(pc_initial=154 nstack_initial=3): {'$phi154.2'},
             State(pc_initial=194 nstack_initial=1): set(),
             State(pc_initial=196 nstack_initial=0): set(),
             State(pc_initial=228 nstack_initial=1): {'$phi228.0'},
             State(pc_initial=230 nstack_initial=2): {'$phi230.1'},
             State(pc_initial=256 nstack_initial=2): {'$phi256.1'},
             State(pc_initial=258 nstack_initial=3): {'$phi258.2'},
             State(pc_initial=278 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=2): {'$phi294.1'},
             State(pc_initial=296 nstack_initial=3): {'$phi296.2'},
             State(pc_initial=312 nstack_initial=2): set(),
             State(pc_initial=326 nstack_initial=2): set(),
             State(pc_initial=336 nstack_initial=1): set(),
             State(pc_initial=344 nstack_initial=2): {'$phi344.1'},
             State(pc_initial=346 nstack_initial=3): {'$phi346.2'},
             State(pc_initial=412 nstack_initial=1): set(),
             State(pc_initial=414 nstack_initial=0): set()})
2025-06-18 10:06:36,962 - DEBUG - byteflow.py:236 - defmap: {'$phi140.0': State(pc_initial=106 nstack_initial=0),
 '$phi142.1': State(pc_initial=140 nstack_initial=1),
 '$phi152.1': State(pc_initial=142 nstack_initial=2),
 '$phi154.2': State(pc_initial=152 nstack_initial=2),
 '$phi228.0': State(pc_initial=196 nstack_initial=0),
 '$phi230.1': State(pc_initial=228 nstack_initial=1),
 '$phi256.1': State(pc_initial=230 nstack_initial=2),
 '$phi258.2': State(pc_initial=256 nstack_initial=2),
 '$phi294.1': State(pc_initial=278 nstack_initial=1),
 '$phi296.2': State(pc_initial=294 nstack_initial=2),
 '$phi344.1': State(pc_initial=336 nstack_initial=1),
 '$phi346.2': State(pc_initial=344 nstack_initial=2)}
2025-06-18 10:06:36,963 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>,
            {'$phi140.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi142.0': {('$phi140.0',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi142.1': {('$140for_iter.2',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi152.0': {('$phi142.0',
                            State(pc_initial=142 nstack_initial=2)),
                           ('$phi154.0',
                            State(pc_initial=154 nstack_initial=3))},
             '$phi152.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2)),
                           ('$phi154.1',
                            State(pc_initial=154 nstack_initial=3))},
             '$phi154.0': {('$phi152.0',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi154.1': {('$phi152.1',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi154.2': {('$152for_iter.3',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi194.0': {('$phi152.0',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi228.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi230.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi256.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=2)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=3))},
             '$phi256.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2)),
                           ('$phi258.1',
                            State(pc_initial=258 nstack_initial=3))},
             '$phi258.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi258.1': {('$phi256.1',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi258.2': {('$256for_iter.3',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi278.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi294.0': {('$phi278.0',
                            State(pc_initial=278 nstack_initial=1)),
                           ('$phi312.0',
                            State(pc_initial=312 nstack_initial=2)),
                           ('$phi326.0',
                            State(pc_initial=326 nstack_initial=2))},
             '$phi294.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1)),
                           ('$phi312.1',
                            State(pc_initial=312 nstack_initial=2)),
                           ('$phi326.1',
                            State(pc_initial=326 nstack_initial=2))},
             '$phi296.0': {('$phi294.0',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi296.1': {('$phi294.1',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi296.2': {('$294for_iter.3',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi312.0': {('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi312.1': {('$phi296.1',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi326.0': {('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi326.1': {('$phi296.1',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi336.0': {('$phi294.0',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi344.0': {('$phi336.0',
                            State(pc_initial=336 nstack_initial=1)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi344.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1)),
                           ('$phi346.1',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi346.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi346.1': {('$phi344.1',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi412.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))}})
2025-06-18 10:06:36,964 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi140.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi142.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi142.1': {('$140for_iter.2',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi152.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0)),
                           ('$phi152.0',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi152.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2)),
                           ('$phi152.1',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi154.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi154.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.2': {('$152for_iter.3',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi194.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi228.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi230.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi256.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=2)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi256.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2)),
                           ('$phi256.1',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi258.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi258.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.2': {('$256for_iter.3',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi278.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi294.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi294.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1)),
                           ('$phi296.1',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi296.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi296.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1)),
                           ('$phi296.1',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi296.2': {('$294for_iter.3',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi312.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi312.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi326.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi326.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi336.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi344.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi344.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1)),
                           ('$phi344.1',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi346.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi346.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi412.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))}})
2025-06-18 10:06:36,967 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi140.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.1': {('$140for_iter.2',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi152.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi152.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi154.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.2': {('$152for_iter.3',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi194.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi228.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi230.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi256.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi256.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi258.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.2': {('$256for_iter.3',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi278.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0)),
                           ('$phi296.0',
                            State(pc_initial=296 nstack_initial=3))},
             '$phi294.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi294.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi296.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.2': {('$294for_iter.3',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi312.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi312.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi326.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi326.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi336.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi346.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi412.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))}})
2025-06-18 10:06:36,968 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi140.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.1': {('$140for_iter.2',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi152.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi152.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi154.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.2': {('$152for_iter.3',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi194.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi228.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi230.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi256.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi256.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi258.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.2': {('$256for_iter.3',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi278.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi294.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi294.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi296.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.2': {('$294for_iter.3',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi312.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi312.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi326.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi326.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi336.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi346.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi412.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))}})
2025-06-18 10:06:36,969 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi140.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi142.1': {('$140for_iter.2',
                            State(pc_initial=140 nstack_initial=1))},
             '$phi152.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi152.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi154.1': {('$150get_iter.5',
                            State(pc_initial=142 nstack_initial=2))},
             '$phi154.2': {('$152for_iter.3',
                            State(pc_initial=152 nstack_initial=2))},
             '$phi194.0': {('$138get_iter.13',
                            State(pc_initial=106 nstack_initial=0))},
             '$phi228.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi230.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi256.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi256.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi258.1': {('$254get_iter.12',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi258.2': {('$256for_iter.3',
                            State(pc_initial=256 nstack_initial=2))},
             '$phi278.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi294.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi294.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi296.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi296.2': {('$294for_iter.3',
                            State(pc_initial=294 nstack_initial=2))},
             '$phi312.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi312.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi326.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi326.1': {('$292get_iter.7',
                            State(pc_initial=278 nstack_initial=1))},
             '$phi336.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi344.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))},
             '$phi346.1': {('$342get_iter.4',
                            State(pc_initial=336 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi412.0': {('$226get_iter.13',
                            State(pc_initial=196 nstack_initial=0))}})
2025-06-18 10:06:36,970 - DEBUG - byteflow.py:267 - keep phismap: {'$phi140.0': {('$138get_iter.13', State(pc_initial=106 nstack_initial=0))},
 '$phi142.1': {('$140for_iter.2', State(pc_initial=140 nstack_initial=1))},
 '$phi152.1': {('$150get_iter.5', State(pc_initial=142 nstack_initial=2))},
 '$phi154.2': {('$152for_iter.3', State(pc_initial=152 nstack_initial=2))},
 '$phi228.0': {('$226get_iter.13', State(pc_initial=196 nstack_initial=0))},
 '$phi230.1': {('$228for_iter.2', State(pc_initial=228 nstack_initial=1))},
 '$phi256.1': {('$254get_iter.12', State(pc_initial=230 nstack_initial=2))},
 '$phi258.2': {('$256for_iter.3', State(pc_initial=256 nstack_initial=2))},
 '$phi294.1': {('$292get_iter.7', State(pc_initial=278 nstack_initial=1))},
 '$phi296.2': {('$294for_iter.3', State(pc_initial=294 nstack_initial=2))},
 '$phi344.1': {('$342get_iter.4', State(pc_initial=336 nstack_initial=1))},
 '$phi346.2': {('$344for_iter.3', State(pc_initial=344 nstack_initial=2))}}
2025-06-18 10:06:36,971 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=106 nstack_initial=0): {'$phi140.0': '$138get_iter.13'},
             State(pc_initial=140 nstack_initial=1): {'$phi142.1': '$140for_iter.2'},
             State(pc_initial=142 nstack_initial=2): {'$phi152.1': '$150get_iter.5'},
             State(pc_initial=152 nstack_initial=2): {'$phi154.2': '$152for_iter.3'},
             State(pc_initial=196 nstack_initial=0): {'$phi228.0': '$226get_iter.13'},
             State(pc_initial=228 nstack_initial=1): {'$phi230.1': '$228for_iter.2'},
             State(pc_initial=230 nstack_initial=2): {'$phi256.1': '$254get_iter.12'},
             State(pc_initial=256 nstack_initial=2): {'$phi258.2': '$256for_iter.3'},
             State(pc_initial=278 nstack_initial=1): {'$phi294.1': '$292get_iter.7'},
             State(pc_initial=294 nstack_initial=2): {'$phi296.2': '$294for_iter.3'},
             State(pc_initial=336 nstack_initial=1): {'$phi344.1': '$342get_iter.4'},
             State(pc_initial=344 nstack_initial=2): {'$phi346.2': '$344for_iter.3'}})
2025-06-18 10:06:36,971 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:36,971 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x02.0'}), (4, {'res': '$x04.1'}), (6, {'lhs': '$x02.0', 'rhs': '$x04.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 34: ()})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$x110.0'}), (12, {'res': '$x112.1'}), (14, {'lhs': '$x110.0', 'rhs': '$x112.1', 'res': '$14compare_op.2'}), (16, {'pred': '$14compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: (), 34: ()})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=((18, {'res': '$x218.0'}), (20, {'res': '$x220.1'}), (22, {'lhs': '$x218.0', 'rhs': '$x220.1', 'res': '$22compare_op.2'}), (24, {'pred': '$22compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 34: ()})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$x326.0'}), (28, {'res': '$x328.1'}), (30, {'lhs': '$x326.0', 'rhs': '$x328.1', 'res': '$30compare_op.2'}), (32, {'pred': '$30compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 54: ()})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$34load_global.0'}), (36, {'item': '$34load_global.0', 'res': '$36load_method.1'}), (38, {'res': '$const38.2.1'}), (40, {'res': '$const40.3.2'}), (42, {'name': '$const40.3.2', 'code': '$const38.2.1', 'closure': None, 'annotations': None, 'kwdefaults': None, 'defaults': None, 'res': '$42make_function.4'}), (44, {'res': '$icols44.5'}), (46, {'value': '$icols44.5', 'res': '$46get_iter.6'}), (48, {'func': '$42make_function.4', 'args': ['$46get_iter.6'], 'res': '$48call_function.7'}), (50, {'func': '$36load_method.1', 'args': ['$48call_function.7'], 'res': '$50call_method.8'}), (52, {'retval': '$50call_method.8', 'castval': '$52return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$54load_global.0'}), (56, {'res': '$x056.1'}), (58, {'res': '$x158.2'}), (60, {'res': '$x260.3'}), (62, {'res': '$x362.4'}), (64, {'res': '$ii064.5'}), (66, {'res': '$ii166.6'}), (68, {'res': '$ii268.7'}), (70, {'res': '$ii370.8'}), (72, {'func': '$54load_global.0', 'args': ['$x056.1', '$x158.2', '$x260.3', '$x362.4', '$ii064.5', '$ii166.6', '$ii268.7', '$ii370.8'], 'res': '$72call_function.9'}), (74, {'iterable': '$72call_function.9', 'stores': ['$74unpack_sequence.10', '$74unpack_sequence.11', '$74unpack_sequence.12'], 'tupleobj': '$74unpack_sequence.13'}), (76, {'value': '$74unpack_sequence.10'}), (78, {'value': '$74unpack_sequence.11'}), (80, {'value': '$74unpack_sequence.12'}), (82, {'res': '$out_of_bounds82.14'}), (84, {'pred': '$out_of_bounds82.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: (), 106: ()})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$86load_global.0'}), (88, {'item': '$86load_global.0', 'res': '$88load_method.1'}), (90, {'res': '$const90.2.3'}), (92, {'res': '$const92.3.2'}), (94, {'name': '$const92.3.2', 'code': '$const90.2.3', 'closure': None, 'annotations': None, 'kwdefaults': None, 'defaults': None, 'res': '$94make_function.4'}), (96, {'res': '$icols96.5'}), (98, {'value': '$icols96.5', 'res': '$98get_iter.6'}), (100, {'func': '$94make_function.4', 'args': ['$98get_iter.6'], 'res': '$100call_function.7'}), (102, {'func': '$88load_method.1', 'args': ['$100call_function.7'], 'res': '$102call_method.8'}), (104, {'retval': '$102call_method.8', 'castval': '$104return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$const106.0.4'}), (108, {'value': '$const106.0.4'}), (110, {'res': '$const110.1.5'}), (112, {'res': '$ndim112.2'}), (114, {'lhs': '$const110.1.5', 'rhs': '$ndim112.2', 'res': '$114binary_power.3'}), (116, {'value': '$114binary_power.3'}), (118, {'res': '$118load_global.4'}), (120, {'item': '$118load_global.4', 'res': '$120load_method.5'}), (122, {'res': '$n_edges122.6'}), (124, {'res': '$ndim124.7'}), (126, {'items': ['$n_edges122.6', '$ndim124.7'], 'res': '$126build_tuple.8'}), (128, {'func': '$120load_method.5', 'args': ['$126build_tuple.8'], 'res': '$128call_method.9'}), (130, {'value': '$128call_method.9'}), (132, {'res': '$132load_global.10'}), (134, {'res': '$n_edges134.11'}), (136, {'func': '$132load_global.10', 'args': ['$n_edges134.11'], 'res': '$136call_function.12'}), (138, {'value': '$136call_function.12', 'res': '$138get_iter.13'})), outgoing_phis={'$phi140.0': '$138get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ('$138get_iter.13',)})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=140 nstack_initial=1):
AdaptBlockInfo(insts=((140, {'iterator': '$phi140.0', 'pair': '$140for_iter.1', 'indval': '$140for_iter.2', 'pred': '$140for_iter.3'}),), outgoing_phis={'$phi142.1': '$140for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: (), 142: ('$phi140.0', '$140for_iter.2')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=142 nstack_initial=2):
AdaptBlockInfo(insts=((142, {'value': '$phi142.1'}), (144, {'res': '$144load_global.2'}), (146, {'res': '$ndim146.3'}), (148, {'func': '$144load_global.2', 'args': ['$ndim146.3'], 'res': '$148call_function.4'}), (150, {'value': '$148call_function.4', 'res': '$150get_iter.5'})), outgoing_phis={'$phi152.1': '$150get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi142.0', '$150get_iter.5')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=152 nstack_initial=2):
AdaptBlockInfo(insts=((152, {'iterator': '$phi152.1', 'pair': '$152for_iter.2', 'indval': '$152for_iter.3', 'pred': '$152for_iter.4'}),), outgoing_phis={'$phi154.2': '$152for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi152.0',), 154: ('$phi152.0', '$phi152.1', '$152for_iter.3')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=154 nstack_initial=3):
AdaptBlockInfo(insts=((154, {'value': '$phi154.2'}), (156, {'res': '$indices156.3'}), (158, {'res': '$j158.4'}), (160, {'index': '$j158.4', 'target': '$indices156.3', 'res': '$160binary_subscr.5'}), (162, {'res': '$i162.6'}), (164, {'res': '$ndim164.7'}), (166, {'res': '$const166.8.6'}), (168, {'lhs': '$ndim164.7', 'rhs': '$const166.8.6', 'res': '$168binary_subtract.9'}), (170, {'res': '$j170.10'}), (172, {'lhs': '$168binary_subtract.9', 'rhs': '$j170.10', 'res': '$172binary_subtract.11'}), (174, {'lhs': '$i162.6', 'rhs': '$172binary_subtract.11', 'res': '$174binary_rshift.12'}), (176, {'res': '$const176.13.6'}), (178, {'lhs': '$174binary_rshift.12', 'rhs': '$const176.13.6', 'res': '$178binary_and.14'}), (180, {'lhs': '$160binary_subscr.5', 'rhs': '$178binary_and.14', 'res': '$180binary_add.15'}), (182, {'res': '$edges182.16'}), (184, {'res': '$i184.17'}), (186, {'res': '$j186.18'}), (188, {'items': ['$i184.17', '$j186.18'], 'res': '$188build_tuple.19'}), (190, {'target': '$edges182.16', 'index': '$188build_tuple.19', 'value': '$180binary_add.15'}), (192, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi154.0', '$phi154.1')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ('$phi194.0',)})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=196 nstack_initial=0):
AdaptBlockInfo(insts=((196, {'res': '$196load_global.0'}), (198, {'res': '$icols198.1'}), (200, {'func': '$196load_global.0', 'args': ['$icols198.1'], 'res': '$200call_function.2'}), (202, {'value': '$200call_function.2'}), (204, {'res': '$204load_global.3'}), (206, {'item': '$204load_global.3', 'res': '$206load_attr.4'}), (208, {'res': '$n_values208.5'}), (210, {'res': '$210load_global.6'}), (212, {'item': '$210load_global.6', 'res': '$212load_attr.7'}), (214, {'res': '$const214.8.7'}), (216, {'func': '$206load_attr.4', 'args': ['$n_values208.5', '$212load_attr.7'], 'names': '$const214.8.7', 'res': '$216call_function_kw.9'}), (218, {'value': '$216call_function_kw.9'}), (220, {'res': '$220load_global.10'}), (222, {'res': '$n_edges222.11'}), (224, {'func': '$220load_global.10', 'args': ['$n_edges222.11'], 'res': '$224call_function.12'}), (226, {'value': '$224call_function.12', 'res': '$226get_iter.13'})), outgoing_phis={'$phi228.0': '$226get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ('$226get_iter.13',)})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=228 nstack_initial=1):
AdaptBlockInfo(insts=((228, {'iterator': '$phi228.0', 'pair': '$228for_iter.1', 'indval': '$228for_iter.2', 'pred': '$228for_iter.3'}),), outgoing_phis={'$phi230.1': '$228for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={414: (), 230: ('$phi228.0', '$228for_iter.2')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=230 nstack_initial=2):
AdaptBlockInfo(insts=((230, {'value': '$phi230.1'}), (232, {'res': '$232load_global.2'}), (234, {'item': '$232load_global.2', 'res': '$234load_attr.3'}), (236, {'res': '$ndim236.4'}), (238, {'res': '$238load_global.5'}), (240, {'item': '$238load_global.5', 'res': '$240load_attr.6'}), (242, {'res': '$const242.7.7'}), (244, {'func': '$234load_attr.3', 'args': ['$ndim236.4', '$240load_attr.6'], 'names': '$const242.7.7', 'res': '$244call_function_kw.8'}), (246, {'value': '$244call_function_kw.8'}), (248, {'res': '$248load_global.9'}), (250, {'res': '$ndim250.10'}), (252, {'func': '$248load_global.9', 'args': ['$ndim250.10'], 'res': '$252call_function.11'}), (254, {'value': '$252call_function.11', 'res': '$254get_iter.12'})), outgoing_phis={'$phi256.1': '$254get_iter.12'}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi230.0', '$254get_iter.12')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=256 nstack_initial=2):
AdaptBlockInfo(insts=((256, {'iterator': '$phi256.1', 'pair': '$256for_iter.2', 'indval': '$256for_iter.3', 'pred': '$256for_iter.4'}),), outgoing_phis={'$phi258.2': '$256for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={278: ('$phi256.0',), 258: ('$phi256.0', '$phi256.1', '$256for_iter.3')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=258 nstack_initial=3):
AdaptBlockInfo(insts=((258, {'value': '$phi258.2'}), (260, {'res': '$edges260.3'}), (262, {'res': '$j262.4'}), (264, {'res': '$k264.5'}), (266, {'items': ['$j262.4', '$k264.5'], 'res': '$266build_tuple.6'}), (268, {'index': '$266build_tuple.6', 'target': '$edges260.3', 'res': '$268binary_subscr.7'}), (270, {'res': '$edge_indices270.8'}), (272, {'res': '$k272.9'}), (274, {'target': '$edge_indices270.8', 'index': '$k272.9', 'value': '$268binary_subscr.7'}), (276, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi258.0', '$phi258.1')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=278 nstack_initial=1):
AdaptBlockInfo(insts=((278, {'res': '$const278.1.8'}), (280, {'value': '$const278.1.8'}), (282, {'res': '$282load_global.2'}), (284, {'res': '$edge_indices284.3'}), (286, {'res': '$indices286.4'}), (288, {'res': '$norm_distances288.5'}), (290, {'func': '$282load_global.2', 'args': ['$edge_indices284.3', '$indices286.4', '$norm_distances288.5'], 'res': '$290call_function.6'}), (292, {'value': '$290call_function.6', 'res': '$292get_iter.7'})), outgoing_phis={'$phi294.1': '$292get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi278.0', '$292get_iter.7')})
2025-06-18 10:06:36,972 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=294 nstack_initial=2):
AdaptBlockInfo(insts=((294, {'iterator': '$phi294.1', 'pair': '$294for_iter.2', 'indval': '$294for_iter.3', 'pred': '$294for_iter.4'}),), outgoing_phis={'$phi296.2': '$294for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={336: ('$phi294.0',), 296: ('$phi294.0', '$phi294.1', '$294for_iter.3')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=296 nstack_initial=3):
AdaptBlockInfo(insts=((296, {'iterable': '$phi296.2', 'stores': ['$296unpack_sequence.3', '$296unpack_sequence.4', '$296unpack_sequence.5'], 'tupleobj': '$296unpack_sequence.6'}), (298, {'value': '$296unpack_sequence.3'}), (300, {'value': '$296unpack_sequence.4'}), (302, {'value': '$296unpack_sequence.5'}), (304, {'res': '$ei304.7'}), (306, {'res': '$i306.8'}), (308, {'lhs': '$ei304.7', 'rhs': '$i306.8', 'res': '$308compare_op.9'}), (310, {'pred': '$308compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: ('$phi296.0', '$phi296.1'), 326: ('$phi296.0', '$phi296.1')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=312 nstack_initial=2):
AdaptBlockInfo(insts=((312, {'res': '$weight312.2'}), (314, {'res': '$const314.3.6'}), (316, {'res': '$yi316.4'}), (318, {'lhs': '$const314.3.6', 'rhs': '$yi316.4', 'res': '$318binary_subtract.5'}), (320, {'lhs': '$weight312.2', 'rhs': '$318binary_subtract.5', 'res': '$320inplace_multiply.6'}), (322, {'value': '$320inplace_multiply.6'}), (324, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi312.0', '$phi312.1')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=326 nstack_initial=2):
AdaptBlockInfo(insts=((326, {'res': '$weight326.2'}), (328, {'res': '$yi328.3'}), (330, {'lhs': '$weight326.2', 'rhs': '$yi328.3', 'res': '$330inplace_multiply.4'}), (332, {'value': '$330inplace_multiply.4'}), (334, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi326.0', '$phi326.1')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=336 nstack_initial=1):
AdaptBlockInfo(insts=((336, {'res': '$336load_global.1'}), (338, {'res': '$n_values338.2'}), (340, {'func': '$336load_global.1', 'args': ['$n_values338.2'], 'res': '$340call_function.3'}), (342, {'value': '$340call_function.3', 'res': '$342get_iter.4'})), outgoing_phis={'$phi344.1': '$342get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={344: ('$phi336.0', '$342get_iter.4')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=344 nstack_initial=2):
AdaptBlockInfo(insts=((344, {'iterator': '$phi344.1', 'pair': '$344for_iter.2', 'indval': '$344for_iter.3', 'pred': '$344for_iter.4'}),), outgoing_phis={'$phi346.2': '$344for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={412: ('$phi344.0',), 346: ('$phi344.0', '$phi344.1', '$344for_iter.3')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=346 nstack_initial=3):
AdaptBlockInfo(insts=((346, {'value': '$phi346.2'}), (348, {'res': '$icols348.3'}), (350, {'res': '$i_icol350.4'}), (352, {'index': '$i_icol350.4', 'target': '$icols348.3', 'res': '$352binary_subscr.5'}), (354, {'value': '$352binary_subscr.5'}), (356, {'res': '$edge_indices356.6'}), (358, {'res': '$const358.7.9'}), (360, {'index': '$const358.7.9', 'target': '$edge_indices356.6', 'res': '$360binary_subscr.8'}), (362, {'res': '$edge_indices362.9'}), (364, {'res': '$const364.10.6'}), (366, {'index': '$const364.10.6', 'target': '$edge_indices362.9', 'res': '$366binary_subscr.11'}), (368, {'res': '$edge_indices368.12'}), (370, {'res': '$const370.13.5'}), (372, {'index': '$const370.13.5', 'target': '$edge_indices368.12', 'res': '$372binary_subscr.14'}), (374, {'res': '$edge_indices374.15'}), (376, {'res': '$const376.16.10'}), (378, {'index': '$const376.16.10', 'target': '$edge_indices374.15', 'res': '$378binary_subscr.17'}), (380, {'res': '$icol380.18'}), (382, {'items': ['$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$378binary_subscr.17', '$icol380.18'], 'res': '$382build_tuple.19'}), (384, {'value': '$382build_tuple.19'}), (386, {'res': '$values386.20'}), (388, {'res': '$i_icol388.21'}), (390, {'orig': ['$values386.20', '$i_icol388.21'], 'duped': ['$390dup_top_two.22', '$390dup_top_two.23']}), (392, {'index': '$390dup_top_two.23', 'target': '$390dup_top_two.22', 'res': '$392binary_subscr.24'}), (394, {'res': '$grid394.25'}), (396, {'res': '$grid_indices396.26'}), (398, {'index': '$grid_indices396.26', 'target': '$grid394.25', 'res': '$398binary_subscr.27'}), (400, {'res': '$weight400.28'}), (402, {'lhs': '$398binary_subscr.27', 'rhs': '$weight400.28', 'res': '$402binary_multiply.29'}), (404, {'lhs': '$392binary_subscr.24', 'rhs': '$402binary_multiply.29', 'res': '$404inplace_add.30'}), (408, {'target': '$values386.20', 'index': '$i_icol388.21', 'value': '$404inplace_add.30'}), (410, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={344: ('$phi346.0', '$phi346.1')})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=412 nstack_initial=1):
AdaptBlockInfo(insts=((412, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ('$phi412.0',)})
2025-06-18 10:06:36,973 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=414 nstack_initial=0):
AdaptBlockInfo(insts=((414, {'res': '$values414.0'}), (416, {'retval': '$values414.0', 'castval': '$416return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:36,977 - DEBUG - interpreter.py:1420 - label 0:
    x0 = arg(0, name=x0)                     ['x0']
    x1 = arg(1, name=x1)                     ['x1']
    x2 = arg(2, name=x2)                     ['x2']
    x3 = arg(3, name=x3)                     ['x3']
    grid = arg(4, name=grid)                 ['grid']
    icols = arg(5, name=icols)               ['icols']
    ii0 = arg(6, name=ii0)                   ['ii0']
    ii1 = arg(7, name=ii1)                   ['ii1']
    ii2 = arg(8, name=ii2)                   ['ii2']
    ii3 = arg(9, name=ii3)                   ['ii3']
    $6compare_op.2 = x0 != x0                ['$6compare_op.2', 'x0', 'x0']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 34, 10                    ['$8pred']
label 10:
    $14compare_op.2 = x1 != x1               ['$14compare_op.2', 'x1', 'x1']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.2', '$16pred', 'bool16']
    branch $16pred, 34, 18                   ['$16pred']
label 18:
    $22compare_op.2 = x2 != x2               ['$22compare_op.2', 'x2', 'x2']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.2', '$24pred', 'bool24']
    branch $24pred, 34, 26                   ['$24pred']
label 26:
    $30compare_op.2 = x3 != x3               ['$30compare_op.2', 'x3', 'x3']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 54                   ['$32pred']
label 34:
    $34load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$34load_global.0']
    $36load_method.1 = getattr(value=$34load_global.0, attr=array) ['$34load_global.0', '$36load_method.1']
    $const38.2.1 = const(code, <code object <listcomp> at 0x7db9bf88c5b0, file "/home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py", line 299>) ['$const38.2.1']
    $const40.3.2 = const(str, interp_value_4d.<locals>.<listcomp>) ['$const40.3.2']
    $42make_function.4 = make_function(name=$const40.3.2, code=<code object <listcomp> at 0x7db9bf88c5b0, file "/home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py", line 299>, closure=None, defaults=None) ['$42make_function.4', '$const40.3.2']
    $46get_iter.6 = getiter(value=icols)     ['$46get_iter.6', 'icols']
    $48call_function.7 = call $42make_function.4($46get_iter.6, func=$42make_function.4, args=[Var($46get_iter.6, interp.py:299)], kws=(), vararg=None, varkwarg=None, target=None) ['$42make_function.4', '$46get_iter.6', '$48call_function.7']
    $50call_method.8 = call $36load_method.1($48call_function.7, func=$36load_method.1, args=[Var($48call_function.7, interp.py:299)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.1', '$48call_function.7', '$50call_method.8']
    $52return_value.9 = cast(value=$50call_method.8) ['$50call_method.8', '$52return_value.9']
    return $52return_value.9                 ['$52return_value.9']
label 54:
    $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>)) ['$54load_global.0']
    $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$72call_function.9', 'ii0', 'ii1', 'ii2', 'ii3', 'x0', 'x1', 'x2', 'x3']
    $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3) ['$72call_function.9', '$74unpack_sequence.13']
    $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>) ['$74unpack_sequence.10', '$74unpack_sequence.13']
    $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>) ['$74unpack_sequence.11', '$74unpack_sequence.13']
    $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>) ['$74unpack_sequence.12', '$74unpack_sequence.13']
    indices = $74unpack_sequence.10          ['$74unpack_sequence.10', 'indices']
    norm_distances = $74unpack_sequence.11   ['$74unpack_sequence.11', 'norm_distances']
    out_of_bounds = $74unpack_sequence.12    ['$74unpack_sequence.12', 'out_of_bounds']
    bool84 = global(bool: <class 'bool'>)    ['bool84']
    $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None) ['$84pred', 'bool84', 'out_of_bounds']
    branch $84pred, 86, 106                  ['$84pred']
label 86:
    $86load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$86load_global.0']
    $88load_method.1 = getattr(value=$86load_global.0, attr=array) ['$86load_global.0', '$88load_method.1']
    $const90.2.3 = const(code, <code object <listcomp> at 0x7db9bf88c660, file "/home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py", line 304>) ['$const90.2.3']
    $const92.3.2 = const(str, interp_value_4d.<locals>.<listcomp>) ['$const92.3.2']
    $94make_function.4 = make_function(name=$const92.3.2, code=<code object <listcomp> at 0x7db9bf88c660, file "/home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py", line 304>, closure=None, defaults=None) ['$94make_function.4', '$const92.3.2']
    $98get_iter.6 = getiter(value=icols)     ['$98get_iter.6', 'icols']
    $100call_function.7 = call $94make_function.4($98get_iter.6, func=$94make_function.4, args=[Var($98get_iter.6, interp.py:304)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call_function.7', '$94make_function.4', '$98get_iter.6']
    $102call_method.8 = call $88load_method.1($100call_function.7, func=$88load_method.1, args=[Var($100call_function.7, interp.py:304)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call_function.7', '$102call_method.8', '$88load_method.1']
    $104return_value.9 = cast(value=$102call_method.8) ['$102call_method.8', '$104return_value.9']
    return $104return_value.9                ['$104return_value.9']
label 106:
    ndim = const(int, 4)                     ['ndim']
    $const110.1.5 = const(int, 2)            ['$const110.1.5']
    n_edges = $const110.1.5 ** ndim          ['$const110.1.5', 'n_edges', 'ndim']
    $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$118load_global.4']
    $120load_method.5 = getattr(value=$118load_global.4, attr=zeros) ['$118load_global.4', '$120load_method.5']
    $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)]) ['$126build_tuple.8', 'n_edges', 'ndim']
    edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_method.5', '$126build_tuple.8', 'edges']
    $132load_global.10 = global(range: <class 'range'>) ['$132load_global.10']
    $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.10', '$136call_function.12', 'n_edges']
    $138get_iter.13 = getiter(value=$136call_function.12) ['$136call_function.12', '$138get_iter.13']
    $phi140.0 = $138get_iter.13              ['$138get_iter.13', '$phi140.0']
    jump 140                                 []
label 140:
    $140for_iter.1 = iternext(value=$phi140.0) ['$140for_iter.1', '$phi140.0']
    $140for_iter.2 = pair_first(value=$140for_iter.1) ['$140for_iter.1', '$140for_iter.2']
    $140for_iter.3 = pair_second(value=$140for_iter.1) ['$140for_iter.1', '$140for_iter.3']
    $phi142.1 = $140for_iter.2               ['$140for_iter.2', '$phi142.1']
    branch $140for_iter.3, 142, 196          ['$140for_iter.3']
label 142:
    i = $phi142.1                            ['$phi142.1', 'i']
    $144load_global.2 = global(range: <class 'range'>) ['$144load_global.2']
    $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None) ['$144load_global.2', '$148call_function.4', 'ndim']
    $150get_iter.5 = getiter(value=$148call_function.4) ['$148call_function.4', '$150get_iter.5']
    $phi152.1 = $150get_iter.5               ['$150get_iter.5', '$phi152.1']
    jump 152                                 []
label 152:
    $152for_iter.2 = iternext(value=$phi152.1) ['$152for_iter.2', '$phi152.1']
    $152for_iter.3 = pair_first(value=$152for_iter.2) ['$152for_iter.2', '$152for_iter.3']
    $152for_iter.4 = pair_second(value=$152for_iter.2) ['$152for_iter.2', '$152for_iter.4']
    $phi154.2 = $152for_iter.3               ['$152for_iter.3', '$phi154.2']
    branch $152for_iter.4, 154, 194          ['$152for_iter.4']
label 154:
    j = $phi154.2                            ['$phi154.2', 'j']
    $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>) ['$160binary_subscr.5', 'indices', 'j']
    $const166.8.6 = const(int, 1)            ['$const166.8.6']
    $168binary_subtract.9 = ndim - $const166.8.6 ['$168binary_subtract.9', '$const166.8.6', 'ndim']
    $172binary_subtract.11 = $168binary_subtract.9 - j ['$168binary_subtract.9', '$172binary_subtract.11', 'j']
    $174binary_rshift.12 = i >> $172binary_subtract.11 ['$172binary_subtract.11', '$174binary_rshift.12', 'i']
    $const176.13.6 = const(int, 1)           ['$const176.13.6']
    $178binary_and.14 = $174binary_rshift.12 & $const176.13.6 ['$174binary_rshift.12', '$178binary_and.14', '$const176.13.6']
    $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14 ['$160binary_subscr.5', '$178binary_and.14', '$180binary_add.15']
    $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)]) ['$188build_tuple.19', 'i', 'j']
    edges[$188build_tuple.19] = $180binary_add.15 ['$180binary_add.15', '$188build_tuple.19', 'edges']
    jump 152                                 []
label 194:
    jump 140                                 []
label 196:
    $196load_global.0 = global(len: <built-in function len>) ['$196load_global.0']
    n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.0', 'icols', 'n_values']
    $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$204load_global.3']
    $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros) ['$204load_global.3', '$206load_attr.4']
    $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>) ['$210load_global.6']
    $212load_attr.7 = getattr(value=$210load_global.6, attr=float64) ['$210load_global.6', '$212load_attr.7']
    values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None) ['$206load_attr.4', '$212load_attr.7', 'n_values', 'values']
    $220load_global.10 = global(range: <class 'range'>) ['$220load_global.10']
    $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None) ['$220load_global.10', '$224call_function.12', 'n_edges']
    $226get_iter.13 = getiter(value=$224call_function.12) ['$224call_function.12', '$226get_iter.13']
    $phi228.0 = $226get_iter.13              ['$226get_iter.13', '$phi228.0']
    jump 228                                 []
label 228:
    $228for_iter.1 = iternext(value=$phi228.0) ['$228for_iter.1', '$phi228.0']
    $228for_iter.2 = pair_first(value=$228for_iter.1) ['$228for_iter.1', '$228for_iter.2']
    $228for_iter.3 = pair_second(value=$228for_iter.1) ['$228for_iter.1', '$228for_iter.3']
    $phi230.1 = $228for_iter.2               ['$228for_iter.2', '$phi230.1']
    branch $228for_iter.3, 230, 414          ['$228for_iter.3']
label 230:
    j = $phi230.1                            ['$phi230.1', 'j']
    $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$232load_global.2']
    $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros) ['$232load_global.2', '$234load_attr.3']
    $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>) ['$238load_global.5']
    $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32) ['$238load_global.5', '$240load_attr.6']
    edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None) ['$234load_attr.3', '$240load_attr.6', 'edge_indices', 'ndim']
    $248load_global.9 = global(range: <class 'range'>) ['$248load_global.9']
    $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None) ['$248load_global.9', '$252call_function.11', 'ndim']
    $254get_iter.12 = getiter(value=$252call_function.11) ['$252call_function.11', '$254get_iter.12']
    $phi256.1 = $254get_iter.12              ['$254get_iter.12', '$phi256.1']
    jump 256                                 []
label 256:
    $256for_iter.2 = iternext(value=$phi256.1) ['$256for_iter.2', '$phi256.1']
    $256for_iter.3 = pair_first(value=$256for_iter.2) ['$256for_iter.2', '$256for_iter.3']
    $256for_iter.4 = pair_second(value=$256for_iter.2) ['$256for_iter.2', '$256for_iter.4']
    $phi258.2 = $256for_iter.3               ['$256for_iter.3', '$phi258.2']
    branch $256for_iter.4, 258, 278          ['$256for_iter.4']
label 258:
    k = $phi258.2                            ['$phi258.2', 'k']
    $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)]) ['$266build_tuple.6', 'j', 'k']
    $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>) ['$266build_tuple.6', '$268binary_subscr.7', 'edges']
    edge_indices[k] = $268binary_subscr.7    ['$268binary_subscr.7', 'edge_indices', 'k']
    jump 256                                 []
label 278:
    weight = const(float, 1.0)               ['weight']
    $282load_global.2 = global(zip: <class 'zip'>) ['$282load_global.2']
    $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None) ['$282load_global.2', '$290call_function.6', 'edge_indices', 'indices', 'norm_distances']
    $292get_iter.7 = getiter(value=$290call_function.6) ['$290call_function.6', '$292get_iter.7']
    $phi294.1 = $292get_iter.7               ['$292get_iter.7', '$phi294.1']
    jump 294                                 []
label 294:
    $294for_iter.2 = iternext(value=$phi294.1) ['$294for_iter.2', '$phi294.1']
    $294for_iter.3 = pair_first(value=$294for_iter.2) ['$294for_iter.2', '$294for_iter.3']
    $294for_iter.4 = pair_second(value=$294for_iter.2) ['$294for_iter.2', '$294for_iter.4']
    $phi296.2 = $294for_iter.3               ['$294for_iter.3', '$phi296.2']
    branch $294for_iter.4, 296, 336          ['$294for_iter.4']
label 296:
    $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3) ['$296unpack_sequence.6', '$phi296.2']
    $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$296unpack_sequence.3', '$296unpack_sequence.6']
    $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$296unpack_sequence.4', '$296unpack_sequence.6']
    $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>) ['$296unpack_sequence.5', '$296unpack_sequence.6']
    ei = $296unpack_sequence.3               ['$296unpack_sequence.3', 'ei']
    i = $296unpack_sequence.4                ['$296unpack_sequence.4', 'i']
    yi = $296unpack_sequence.5               ['$296unpack_sequence.5', 'yi']
    $308compare_op.9 = ei == i               ['$308compare_op.9', 'ei', 'i']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None) ['$308compare_op.9', '$310pred', 'bool310']
    branch $310pred, 312, 326                ['$310pred']
label 312:
    $const314.3.6 = const(int, 1)            ['$const314.3.6']
    $318binary_subtract.5 = $const314.3.6 - yi ['$318binary_subtract.5', '$const314.3.6', 'yi']
    $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined) ['$318binary_subtract.5', '$320inplace_multiply.6', 'weight']
    weight = $320inplace_multiply.6          ['$320inplace_multiply.6', 'weight']
    jump 294                                 []
label 326:
    $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined) ['$330inplace_multiply.4', 'weight', 'yi']
    weight = $330inplace_multiply.4          ['$330inplace_multiply.4', 'weight']
    jump 294                                 []
label 336:
    $336load_global.1 = global(range: <class 'range'>) ['$336load_global.1']
    $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None) ['$336load_global.1', '$340call_function.3', 'n_values']
    $342get_iter.4 = getiter(value=$340call_function.3) ['$340call_function.3', '$342get_iter.4']
    $phi344.1 = $342get_iter.4               ['$342get_iter.4', '$phi344.1']
    jump 344                                 []
label 344:
    $344for_iter.2 = iternext(value=$phi344.1) ['$344for_iter.2', '$phi344.1']
    $344for_iter.3 = pair_first(value=$344for_iter.2) ['$344for_iter.2', '$344for_iter.3']
    $344for_iter.4 = pair_second(value=$344for_iter.2) ['$344for_iter.2', '$344for_iter.4']
    $phi346.2 = $344for_iter.3               ['$344for_iter.3', '$phi346.2']
    branch $344for_iter.4, 346, 412          ['$344for_iter.4']
label 346:
    i_icol = $phi346.2                       ['$phi346.2', 'i_icol']
    icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>) ['i_icol', 'icol', 'icols']
    $const358.7.9 = const(int, 0)            ['$const358.7.9']
    $360binary_subscr.8 = getitem(value=edge_indices, index=$const358.7.9, fn=<built-in function getitem>) ['$360binary_subscr.8', '$const358.7.9', 'edge_indices']
    $const364.10.6 = const(int, 1)           ['$const364.10.6']
    $366binary_subscr.11 = getitem(value=edge_indices, index=$const364.10.6, fn=<built-in function getitem>) ['$366binary_subscr.11', '$const364.10.6', 'edge_indices']
    $const370.13.5 = const(int, 2)           ['$const370.13.5']
    $372binary_subscr.14 = getitem(value=edge_indices, index=$const370.13.5, fn=<built-in function getitem>) ['$372binary_subscr.14', '$const370.13.5', 'edge_indices']
    $const376.16.10 = const(int, 3)          ['$const376.16.10']
    $378binary_subscr.17 = getitem(value=edge_indices, index=$const376.16.10, fn=<built-in function getitem>) ['$378binary_subscr.17', '$const376.16.10', 'edge_indices']
    grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)]) ['$360binary_subscr.8', '$366binary_subscr.11', '$372binary_subscr.14', '$378binary_subscr.17', 'grid_indices', 'icol']
    $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>) ['$392binary_subscr.24', 'i_icol', 'values']
    $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>) ['$398binary_subscr.27', 'grid', 'grid_indices']
    $402binary_multiply.29 = $398binary_subscr.27 * weight ['$398binary_subscr.27', '$402binary_multiply.29', 'weight']
    $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined) ['$392binary_subscr.24', '$402binary_multiply.29', '$404inplace_add.30']
    values[i_icol] = $404inplace_add.30      ['$404inplace_add.30', 'i_icol', 'values']
    jump 344                                 []
label 412:
    jump 228                                 []
label 414:
    $416return_value.1 = cast(value=values)  ['$416return_value.1', 'values']
    return $416return_value.1                ['$416return_value.1']

2025-06-18 10:06:36,987 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=304)
           2	BUILD_LIST(arg=0, lineno=304)
           4	LOAD_FAST(arg=0, lineno=304)
>          6	FOR_ITER(arg=5, lineno=304)
           8	STORE_FAST(arg=1, lineno=304)
          10	LOAD_GLOBAL(arg=0, lineno=304)
          12	LOAD_ATTR(arg=1, lineno=304)
          14	LIST_APPEND(arg=2, lineno=304)
          16	JUMP_ABSOLUTE(arg=4, lineno=304)
>         18	RETURN_VALUE(arg=None, lineno=304)
2025-06-18 10:06:36,987 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:36,987 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,987 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:36,987 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=BUILD_LIST(arg=0, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$2build_list.0']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=6, stack=('$2build_list.0', '$.04.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=6 nstack_initial=2)])
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:110 - stack: ['$phi6.0', '$phi6.1']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=6 nstack_initial=2)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=FOR_ITER(arg=5, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi6.0', '$phi6.1']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=18, stack=('$phi6.0',), blockstack=(), npush=0), Edge(pc=8, stack=('$phi6.0', '$phi6.1', '$6for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=8 nstack_initial=3)])
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:110 - stack: ['$phi18.0']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=18 nstack_initial=1)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi18.0']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=8 nstack_initial=3)])
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:110 - stack: ['$phi8.0', '$phi8.1', '$phi8.2']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=8 nstack_initial=3)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$phi8.2']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$10load_global.3']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=LIST_APPEND(arg=2, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$12load_attr.4']
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=JUMP_ABSOLUTE(arg=4, lineno=304)
2025-06-18 10:06:36,988 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1']
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=6, stack=('$phi8.0', '$phi8.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=6 nstack_initial=2)])
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=6 nstack_initial=2): {'$phi6.1'},
             State(pc_initial=8 nstack_initial=3): {'$phi8.0', '$phi8.2'},
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'}})
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:236 - defmap: {'$phi6.0': State(pc_initial=0 nstack_initial=0),
 '$phi6.1': State(pc_initial=0 nstack_initial=0),
 '$phi8.2': State(pc_initial=6 nstack_initial=2)}
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi8.0', State(pc_initial=8 nstack_initial=3))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi8.1', State(pc_initial=8 nstack_initial=3))},
             '$phi8.0': {('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi8.1': {('$phi6.1', State(pc_initial=6 nstack_initial=2))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi8.0', State(pc_initial=8 nstack_initial=3))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi6.1', State(pc_initial=6 nstack_initial=2))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,989 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:267 - keep phismap: {'$phi18.0': {('$2build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
 '$phi8.0': {('$2build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi8.2': {('$6for_iter.3', State(pc_initial=6 nstack_initial=2))}}
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$2build_list.0',
                                                    '$phi6.1': '$.04.1',
                                                    '$phi8.0': '$2build_list.0'},
             State(pc_initial=6 nstack_initial=2): {'$phi8.2': '$6for_iter.3'}})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'items': [], 'res': '$2build_list.0'}), (4, {'res': '$.04.1'})), outgoing_phis={'$phi8.0': '$2build_list.0', '$phi6.1': '$.04.1', '$phi18.0': '$2build_list.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ('$2build_list.0', '$.04.1')})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=6 nstack_initial=2):
AdaptBlockInfo(insts=((6, {'iterator': '$phi6.1', 'pair': '$6for_iter.2', 'indval': '$6for_iter.3', 'pred': '$6for_iter.4'}),), outgoing_phis={'$phi8.2': '$6for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi6.0',), 8: ('$phi6.0', '$phi6.1', '$6for_iter.3')})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=8 nstack_initial=3):
AdaptBlockInfo(insts=((8, {'value': '$phi8.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_attr.4'}), (14, {'target': '$phi8.0', 'value': '$12load_attr.4', 'appendvar': '$14list_append.5', 'res': '$14list_append.6'}), (16, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ('$phi8.0', '$phi8.1')})
2025-06-18 10:06:36,990 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'retval': '$phi18.0', 'castval': '$18return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:36,991 - DEBUG - interpreter.py:1420 - label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi18.0 = $2build_list.0                ['$2build_list.0', '$phi18.0']
    jump 6                                   []
label 6:
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    branch $6for_iter.4, 8, 18               ['$6for_iter.4']
label 8:
    i = $phi8.2                              ['$phi8.2', 'i']
    $10load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_attr.4 = getattr(value=$10load_global.3, attr=nan) ['$10load_global.3', '$12load_attr.4']
    $14list_append.5 = getattr(value=$phi8.0, attr=append) ['$14list_append.5', '$phi8.0']
    $14list_append.6 = call $14list_append.5($12load_attr.4, func=$14list_append.5, args=(Var($12load_attr.4, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None) ['$12load_attr.4', '$14list_append.5', '$14list_append.6']
    jump 6                                   []
label 18:
    $18return_value.1 = cast(value=$phi18.0) ['$18return_value.1', '$phi18.0']
    return $18return_value.1                 ['$18return_value.1']

2025-06-18 10:06:36,993 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:36,993 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8f9000>
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: implicit0 = arg(0, name=implicit0)
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $2build_list.0 = build_list(items=[])
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $phi8.0 = $2build_list.0
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $phi6.1 = implicit0
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $phi18.0 = $2build_list.0
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: jump 6
2025-06-18 10:06:36,993 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 6
2025-06-18 10:06:36,993 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8f9000>
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $6for_iter.2 = iternext(value=$phi6.1)
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $6for_iter.3 = pair_first(value=$6for_iter.2)
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $6for_iter.4 = pair_second(value=$6for_iter.2)
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: $phi8.2 = $6for_iter.3
2025-06-18 10:06:36,993 - DEBUG - ssa.py:209 - on stmt: branch $6for_iter.4, 8, 18
2025-06-18 10:06:36,994 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 8
2025-06-18 10:06:36,994 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8f9000>
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: i = $phi8.2
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: $12load_attr.4 = getattr(value=$10load_global.3, attr=nan)
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: $14list_append.5 = getattr(value=$phi8.0, attr=append)
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: $14list_append.6 = call $14list_append.5($12load_attr.4, func=$14list_append.5, args=(Var($12load_attr.4, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: jump 6
2025-06-18 10:06:36,994 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 18
2025-06-18 10:06:36,994 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8f9000>
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: $18return_value.1 = cast(value=$phi18.0)
2025-06-18 10:06:36,994 - DEBUG - ssa.py:209 - on stmt: return $18return_value.1
2025-06-18 10:06:36,994 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x7db9bc8fa0e0>,
                                   8)],
             '$12load_attr.4': [(<numba.core.ir.Assign object at 0x7db9bc8fb520>,
                                 8)],
             '$14list_append.5': [(<numba.core.ir.Assign object at 0x7db9bc8fbdf0>,
                                   8)],
             '$14list_append.6': [(<numba.core.ir.Assign object at 0x7db9bc8f9b40>,
                                   8)],
             '$18return_value.1': [(<numba.core.ir.Assign object at 0x7db9bc8f93f0>,
                                    18)],
             '$2build_list.0': [(<numba.core.ir.Assign object at 0x7db9bc8f8eb0>,
                                 0)],
             '$6for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bc8f9d50>,
                               6)],
             '$6for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bc8fbb50>,
                               6)],
             '$6for_iter.4': [(<numba.core.ir.Assign object at 0x7db9bc8f9960>,
                               6)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x7db9bc8f8370>, 0)],
             '$phi6.1': [(<numba.core.ir.Assign object at 0x7db9bc8fbd00>, 0)],
             '$phi8.0': [(<numba.core.ir.Assign object at 0x7db9bc8f8340>, 0)],
             '$phi8.2': [(<numba.core.ir.Assign object at 0x7db9bc8f9d80>, 6)],
             'i': [(<numba.core.ir.Assign object at 0x7db9bc8fa8f0>, 8)],
             'implicit0': [(<numba.core.ir.Assign object at 0x7db9bc8fa470>,
                            0)]})
2025-06-18 10:06:36,995 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc8f9000>
2025-06-18 10:06:36,996 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=299)
           2	BUILD_LIST(arg=0, lineno=299)
           4	LOAD_FAST(arg=0, lineno=299)
>          6	FOR_ITER(arg=5, lineno=299)
           8	STORE_FAST(arg=1, lineno=299)
          10	LOAD_GLOBAL(arg=0, lineno=299)
          12	LOAD_ATTR(arg=1, lineno=299)
          14	LIST_APPEND(arg=2, lineno=299)
          16	JUMP_ABSOLUTE(arg=4, lineno=299)
>         18	RETURN_VALUE(arg=None, lineno=299)
2025-06-18 10:06:36,996 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:36,996 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:36,996 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:36,996 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=BUILD_LIST(arg=0, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$2build_list.0']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=6, stack=('$2build_list.0', '$.04.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=6 nstack_initial=2)])
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:110 - stack: ['$phi6.0', '$phi6.1']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=6 nstack_initial=2)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=FOR_ITER(arg=5, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi6.0', '$phi6.1']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=18, stack=('$phi6.0',), blockstack=(), npush=0), Edge(pc=8, stack=('$phi6.0', '$phi6.1', '$6for_iter.3'), blockstack=(), npush=0)]
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=8 nstack_initial=3)])
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:110 - stack: ['$phi18.0']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=18 nstack_initial=1)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi18.0']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=8 nstack_initial=3)])
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:110 - stack: ['$phi8.0', '$phi8.1', '$phi8.2']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=8 nstack_initial=3)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$phi8.2']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$10load_global.3']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=LIST_APPEND(arg=2, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1', '$12load_attr.4']
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=JUMP_ABSOLUTE(arg=4, lineno=299)
2025-06-18 10:06:36,997 - DEBUG - byteflow.py:342 - stack ['$phi8.0', '$phi8.1']
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=6, stack=('$phi8.0', '$phi8.1'), blockstack=(), npush=0)]
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=6 nstack_initial=2)])
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=6 nstack_initial=2): {'$phi6.1'},
             State(pc_initial=8 nstack_initial=3): {'$phi8.0', '$phi8.2'},
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'}})
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:236 - defmap: {'$phi6.0': State(pc_initial=0 nstack_initial=0),
 '$phi6.1': State(pc_initial=0 nstack_initial=0),
 '$phi8.2': State(pc_initial=6 nstack_initial=2)}
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi8.0', State(pc_initial=8 nstack_initial=3))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi8.1', State(pc_initial=8 nstack_initial=3))},
             '$phi8.0': {('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi8.1': {('$phi6.1', State(pc_initial=6 nstack_initial=2))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi8.0', State(pc_initial=8 nstack_initial=3))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi6.0', State(pc_initial=6 nstack_initial=2))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi6.1', State(pc_initial=6 nstack_initial=2))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,998 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$2build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi6.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$2build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
             '$phi8.2': {('$6for_iter.3',
                          State(pc_initial=6 nstack_initial=2))}})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:267 - keep phismap: {'$phi18.0': {('$2build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi6.1': {('$.04.1', State(pc_initial=0 nstack_initial=0))},
 '$phi8.0': {('$2build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi8.2': {('$6for_iter.3', State(pc_initial=6 nstack_initial=2))}}
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$2build_list.0',
                                                    '$phi6.1': '$.04.1',
                                                    '$phi8.0': '$2build_list.0'},
             State(pc_initial=6 nstack_initial=2): {'$phi8.2': '$6for_iter.3'}})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'items': [], 'res': '$2build_list.0'}), (4, {'res': '$.04.1'})), outgoing_phis={'$phi8.0': '$2build_list.0', '$phi6.1': '$.04.1', '$phi18.0': '$2build_list.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ('$2build_list.0', '$.04.1')})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=6 nstack_initial=2):
AdaptBlockInfo(insts=((6, {'iterator': '$phi6.1', 'pair': '$6for_iter.2', 'indval': '$6for_iter.3', 'pred': '$6for_iter.4'}),), outgoing_phis={'$phi8.2': '$6for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi6.0',), 8: ('$phi6.0', '$phi6.1', '$6for_iter.3')})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=8 nstack_initial=3):
AdaptBlockInfo(insts=((8, {'value': '$phi8.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_attr.4'}), (14, {'target': '$phi8.0', 'value': '$12load_attr.4', 'appendvar': '$14list_append.5', 'res': '$14list_append.6'}), (16, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ('$phi8.0', '$phi8.1')})
2025-06-18 10:06:36,999 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'retval': '$phi18.0', 'castval': '$18return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,000 - DEBUG - interpreter.py:1420 - label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    $2build_list.0 = build_list(items=[])    ['$2build_list.0']
    $phi8.0 = $2build_list.0                 ['$2build_list.0', '$phi8.0']
    $phi6.1 = implicit0                      ['$phi6.1', 'implicit0']
    $phi18.0 = $2build_list.0                ['$2build_list.0', '$phi18.0']
    jump 6                                   []
label 6:
    $6for_iter.2 = iternext(value=$phi6.1)   ['$6for_iter.2', '$phi6.1']
    $6for_iter.3 = pair_first(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.3']
    $6for_iter.4 = pair_second(value=$6for_iter.2) ['$6for_iter.2', '$6for_iter.4']
    $phi8.2 = $6for_iter.3                   ['$6for_iter.3', '$phi8.2']
    branch $6for_iter.4, 8, 18               ['$6for_iter.4']
label 8:
    i = $phi8.2                              ['$phi8.2', 'i']
    $10load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_attr.4 = getattr(value=$10load_global.3, attr=nan) ['$10load_global.3', '$12load_attr.4']
    $14list_append.5 = getattr(value=$phi8.0, attr=append) ['$14list_append.5', '$phi8.0']
    $14list_append.6 = call $14list_append.5($12load_attr.4, func=$14list_append.5, args=(Var($12load_attr.4, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None) ['$12load_attr.4', '$14list_append.5', '$14list_append.6']
    jump 6                                   []
label 18:
    $18return_value.1 = cast(value=$phi18.0) ['$18return_value.1', '$phi18.0']
    return $18return_value.1                 ['$18return_value.1']

2025-06-18 10:06:37,001 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,001 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8fafb0>
2025-06-18 10:06:37,001 - DEBUG - ssa.py:209 - on stmt: implicit0 = arg(0, name=implicit0)
2025-06-18 10:06:37,001 - DEBUG - ssa.py:209 - on stmt: $2build_list.0 = build_list(items=[])
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $phi8.0 = $2build_list.0
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $phi6.1 = implicit0
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $phi18.0 = $2build_list.0
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: jump 6
2025-06-18 10:06:37,002 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 6
2025-06-18 10:06:37,002 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8fafb0>
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $6for_iter.2 = iternext(value=$phi6.1)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $6for_iter.3 = pair_first(value=$6for_iter.2)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $6for_iter.4 = pair_second(value=$6for_iter.2)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $phi8.2 = $6for_iter.3
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: branch $6for_iter.4, 8, 18
2025-06-18 10:06:37,002 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 8
2025-06-18 10:06:37,002 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8fafb0>
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: i = $phi8.2
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $12load_attr.4 = getattr(value=$10load_global.3, attr=nan)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $14list_append.5 = getattr(value=$phi8.0, attr=append)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $14list_append.6 = call $14list_append.5($12load_attr.4, func=$14list_append.5, args=(Var($12load_attr.4, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: jump 6
2025-06-18 10:06:37,002 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 18
2025-06-18 10:06:37,002 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc8fafb0>
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: $18return_value.1 = cast(value=$phi18.0)
2025-06-18 10:06:37,002 - DEBUG - ssa.py:209 - on stmt: return $18return_value.1
2025-06-18 10:06:37,002 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x7db9bcec1e70>,
                                   8)],
             '$12load_attr.4': [(<numba.core.ir.Assign object at 0x7db9bcec34c0>,
                                 8)],
             '$14list_append.5': [(<numba.core.ir.Assign object at 0x7db9bcec2f80>,
                                   8)],
             '$14list_append.6': [(<numba.core.ir.Assign object at 0x7db9bcec22f0>,
                                   8)],
             '$18return_value.1': [(<numba.core.ir.Assign object at 0x7db9bcec3040>,
                                    18)],
             '$2build_list.0': [(<numba.core.ir.Assign object at 0x7db9bcec0d90>,
                                 0)],
             '$6for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bcec37c0>,
                               6)],
             '$6for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bcec1cf0>,
                               6)],
             '$6for_iter.4': [(<numba.core.ir.Assign object at 0x7db9bcec1690>,
                               6)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x7db9bcec0a30>, 0)],
             '$phi6.1': [(<numba.core.ir.Assign object at 0x7db9bcec1180>, 0)],
             '$phi8.0': [(<numba.core.ir.Assign object at 0x7db9bcec3dc0>, 0)],
             '$phi8.2': [(<numba.core.ir.Assign object at 0x7db9bcec2350>, 6)],
             'i': [(<numba.core.ir.Assign object at 0x7db9bcec3a30>, 8)],
             'implicit0': [(<numba.core.ir.Assign object at 0x7db9bcec32b0>,
                            0)]})
2025-06-18 10:06:37,003 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc8fafb0>
2025-06-18 10:06:37,039 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,039 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,039 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,040 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 10
2025-06-18 10:06:37,040 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,040 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 18
2025-06-18 10:06:37,040 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,040 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 26
2025-06-18 10:06:37,040 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,040 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 34
2025-06-18 10:06:37,040 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,040 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,041 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 106
2025-06-18 10:06:37,041 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,041 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 140
2025-06-18 10:06:37,041 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,041 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,042 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 194
2025-06-18 10:06:37,042 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,042 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,043 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 196
2025-06-18 10:06:37,043 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,043 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 228
2025-06-18 10:06:37,043 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,043 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 230
2025-06-18 10:06:37,043 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,043 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 256
2025-06-18 10:06:37,043 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,043 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,044 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 258
2025-06-18 10:06:37,044 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,044 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 278
2025-06-18 10:06:37,044 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,044 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,045 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 294
2025-06-18 10:06:37,045 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,045 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 296
2025-06-18 10:06:37,045 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,045 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 312
2025-06-18 10:06:37,045 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,045 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,045 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 326
2025-06-18 10:06:37,045 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,046 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 336
2025-06-18 10:06:37,046 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,046 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 344
2025-06-18 10:06:37,046 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,046 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 346
2025-06-18 10:06:37,046 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,046 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,047 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 412
2025-06-18 10:06:37,047 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,047 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 414
2025-06-18 10:06:37,047 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,047 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 422
2025-06-18 10:06:37,047 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,047 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 424
2025-06-18 10:06:37,047 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,047 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,047 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 434
2025-06-18 10:06:37,048 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,048 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 443
2025-06-18 10:06:37,048 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,048 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 445
2025-06-18 10:06:37,048 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,048 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 415
2025-06-18 10:06:37,048 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,048 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 142
2025-06-18 10:06:37,048 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,048 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: next_index = index + one
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: index = next_index
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,049 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 152
2025-06-18 10:06:37,049 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,049 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 154
2025-06-18 10:06:37,049 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,049 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 54
2025-06-18 10:06:37,049 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1 + one.1
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: index.1 = next_index.1
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,049 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 86
2025-06-18 10:06:37,049 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,049 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,050 - DEBUG - ssa.py:209 - on stmt: array.1[index.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,050 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,050 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 455
2025-06-18 10:06:37,050 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,050 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,050 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,050 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,050 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$102call_method.8': [(<numba.core.ir.Assign object at 0x7db9b7d29390>,
                                    154)],
             '$104return_value.9': [(<numba.core.ir.Assign object at 0x7db9b7d2a680>,
                                     154)],
             '$118load_global.4': [(<numba.core.ir.Assign object at 0x7db9b7d28d30>,
                                    194)],
             '$120load_method.5': [(<numba.core.ir.Assign object at 0x7db9b7d29de0>,
                                    194)],
             '$126build_tuple.8': [(<numba.core.ir.Assign object at 0x7db9b7d281c0>,
                                    194)],
             '$132load_global.10': [(<numba.core.ir.Assign object at 0x7db9b7d285b0>,
                                     194)],
             '$136call_function.12': [(<numba.core.ir.Assign object at 0x7db9b7d2b220>,
                                       194)],
             '$138get_iter.13': [(<numba.core.ir.Assign object at 0x7db9b7d2ad40>,
                                  194)],
             '$140for_iter.1': [(<numba.core.ir.Assign object at 0x7db9b7d2bee0>,
                                 196)],
             '$140for_iter.2': [(<numba.core.ir.Assign object at 0x7db9b7d2baf0>,
                                 196)],
             '$140for_iter.3': [(<numba.core.ir.Assign object at 0x7db9b7d28730>,
                                 196)],
             '$144load_global.2': [(<numba.core.ir.Assign object at 0x7db9b7d2b910>,
                                    228)],
             '$148call_function.4': [(<numba.core.ir.Assign object at 0x7db9b7d2a7d0>,
                                      228)],
             '$14compare_op.2': [(<numba.core.ir.Assign object at 0x7db9bce76530>,
                                  10)],
             '$150get_iter.5': [(<numba.core.ir.Assign object at 0x7db9b7d2a3e0>,
                                 228)],
             '$152for_iter.2': [(<numba.core.ir.Assign object at 0x7db9b7d2b7f0>,
                                 230)],
             '$152for_iter.3': [(<numba.core.ir.Assign object at 0x7db9b7d28340>,
                                 230)],
             '$152for_iter.4': [(<numba.core.ir.Assign object at 0x7db9b7d2b160>,
                                 230)],
             '$160binary_subscr.5': [(<numba.core.ir.Assign object at 0x7db9b7d291e0>,
                                      256)],
             '$168binary_subtract.9': [(<numba.core.ir.Assign object at 0x7db9b7d29cf0>,
                                        256)],
             '$16pred': [(<numba.core.ir.Assign object at 0x7db9bce74400>, 10)],
             '$172binary_subtract.11': [(<numba.core.ir.Assign object at 0x7db9b7d2a860>,
                                         256)],
             '$174binary_rshift.12': [(<numba.core.ir.Assign object at 0x7db9b7d296f0>,
                                       256)],
             '$178binary_and.14': [(<numba.core.ir.Assign object at 0x7db9bcf36590>,
                                    256)],
             '$180binary_add.15': [(<numba.core.ir.Assign object at 0x7db9bcf354b0>,
                                    256)],
             '$188build_tuple.19': [(<numba.core.ir.Assign object at 0x7db9bcf37610>,
                                     256)],
             '$196load_global.0': [(<numba.core.ir.Assign object at 0x7db9bcf370a0>,
                                    278)],
             '$204load_global.3': [(<numba.core.ir.Assign object at 0x7db9bcf347c0>,
                                    278)],
             '$206load_attr.4': [(<numba.core.ir.Assign object at 0x7db9bcf34ca0>,
                                  278)],
             '$210load_global.6': [(<numba.core.ir.Assign object at 0x7db9bcf377c0>,
                                    278)],
             '$212load_attr.7': [(<numba.core.ir.Assign object at 0x7db9bcf35a80>,
                                  278)],
             '$220load_global.10': [(<numba.core.ir.Assign object at 0x7db9bcf36f20>,
                                     278)],
             '$224call_function.12': [(<numba.core.ir.Assign object at 0x7db9bcf34bb0>,
                                       278)],
             '$226get_iter.13': [(<numba.core.ir.Assign object at 0x7db9bcf37b20>,
                                  278)],
             '$228for_iter.1': [(<numba.core.ir.Assign object at 0x7db9bcf35360>,
                                 294)],
             '$228for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bcf368c0>,
                                 294)],
             '$228for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bcf37640>,
                                 294)],
             '$22compare_op.2': [(<numba.core.ir.Assign object at 0x7db9bcf2a080>,
                                  18)],
             '$232load_global.2': [(<numba.core.ir.Assign object at 0x7db9bcf37490>,
                                    296)],
             '$234load_attr.3': [(<numba.core.ir.Assign object at 0x7db9bcf35420>,
                                  296)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x7db9bcf36410>,
                                    296)],
             '$240load_attr.6': [(<numba.core.ir.Assign object at 0x7db9bcf36830>,
                                  296)],
             '$248load_global.9': [(<numba.core.ir.Assign object at 0x7db9bcf35000>,
                                    296)],
             '$24pred': [(<numba.core.ir.Assign object at 0x7db9bcf2a0e0>, 18)],
             '$252call_function.11': [(<numba.core.ir.Assign object at 0x7db9bcf377f0>,
                                       296)],
             '$254get_iter.12': [(<numba.core.ir.Assign object at 0x7db9bcf37be0>,
                                  296)],
             '$256for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bcf379a0>,
                                 312)],
             '$256for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bcf37760>,
                                 312)],
             '$256for_iter.4': [(<numba.core.ir.Assign object at 0x7db9bcf367d0>,
                                 312)],
             '$266build_tuple.6': [(<numba.core.ir.Assign object at 0x7db9bc979240>,
                                    326)],
             '$268binary_subscr.7': [(<numba.core.ir.Assign object at 0x7db9bc97a3e0>,
                                      326)],
             '$282load_global.2': [(<numba.core.ir.Assign object at 0x7db9bc97b040>,
                                    336)],
             '$290call_function.6': [(<numba.core.ir.Assign object at 0x7db9bc97b8e0>,
                                      336)],
             '$292get_iter.7': [(<numba.core.ir.Assign object at 0x7db9bc97a5c0>,
                                 336)],
             '$294for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bc97a230>,
                                 344)],
             '$294for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bc97b7f0>,
                                 344)],
             '$294for_iter.4': [(<numba.core.ir.Assign object at 0x7db9bc97af80>,
                                 344)],
             '$296unpack_sequence.3': [(<numba.core.ir.Assign object at 0x7db9bc978100>,
                                        346)],
             '$296unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7db9bc979a80>,
                                        346)],
             '$296unpack_sequence.5': [(<numba.core.ir.Assign object at 0x7db9bc978940>,
                                        346)],
             '$296unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7db9bc97a9b0>,
                                        346)],
             '$308compare_op.9': [(<numba.core.ir.Assign object at 0x7db9bc979060>,
                                   346)],
             '$30compare_op.2': [(<numba.core.ir.Assign object at 0x7db9bcf28b80>,
                                  26)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7db9bc9782b0>,
                           346)],
             '$318binary_subtract.5': [(<numba.core.ir.Assign object at 0x7db9bc97a3b0>,
                                        412)],
             '$320inplace_multiply.6': [(<numba.core.ir.Assign object at 0x7db9bcda2f20>,
                                         412)],
             '$32pred': [(<numba.core.ir.Assign object at 0x7db9bcf2aa40>, 26)],
             '$330inplace_multiply.4': [(<numba.core.ir.Assign object at 0x7db9bcda2cb0>,
                                         414)],
             '$336load_global.1': [(<numba.core.ir.Assign object at 0x7db9bcda3130>,
                                    422)],
             '$340call_function.3': [(<numba.core.ir.Assign object at 0x7db9bcda2ad0>,
                                      422)],
             '$342get_iter.4': [(<numba.core.ir.Assign object at 0x7db9bcda1ae0>,
                                 422)],
             '$344for_iter.2': [(<numba.core.ir.Assign object at 0x7db9bcda3d90>,
                                 424)],
             '$344for_iter.3': [(<numba.core.ir.Assign object at 0x7db9bcda1150>,
                                 424)],
             '$344for_iter.4': [(<numba.core.ir.Assign object at 0x7db9bcda1990>,
                                 424)],
             '$360binary_subscr.8': [(<numba.core.ir.Assign object at 0x7db9b7dbed10>,
                                      434)],
             '$366binary_subscr.11': [(<numba.core.ir.Assign object at 0x7db9b7dbcb20>,
                                       434)],
             '$372binary_subscr.14': [(<numba.core.ir.Assign object at 0x7db9b7dbf130>,
                                       434)],
             '$378binary_subscr.17': [(<numba.core.ir.Assign object at 0x7db9b7dbd600>,
                                       434)],
             '$392binary_subscr.24': [(<numba.core.ir.Assign object at 0x7db9b7dbc460>,
                                       434)],
             '$398binary_subscr.27': [(<numba.core.ir.Assign object at 0x7db9b7dbd840>,
                                       434)],
             '$402binary_multiply.29': [(<numba.core.ir.Assign object at 0x7db9b7dbf2b0>,
                                         434)],
             '$404inplace_add.30': [(<numba.core.ir.Assign object at 0x7db9b7dbccd0>,
                                     434)],
             '$416return_value.1': [(<numba.core.ir.Assign object at 0x7db9b7dbe5f0>,
                                     445)],
             '$46get_iter.6': [(<numba.core.ir.Assign object at 0x7db9bcf28880>,
                                34)],
             '$50call_method.8': [(<numba.core.ir.Assign object at 0x7db9bcf28a30>,
                                   455)],
             '$52return_value.9': [(<numba.core.ir.Assign object at 0x7db9bcf2ab00>,
                                    455)],
             '$54load_global.0': [(<numba.core.ir.Assign object at 0x7db9bcf29420>,
                                   106)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x7db9bce77e80>,
                                 0)],
             '$72call_function.9': [(<numba.core.ir.Assign object at 0x7db9bcf28d00>,
                                     106)],
             '$74unpack_sequence.10': [(<numba.core.ir.Assign object at 0x7db9bcf28730>,
                                        106)],
             '$74unpack_sequence.11': [(<numba.core.ir.Assign object at 0x7db9bcf2b040>,
                                        106)],
             '$74unpack_sequence.12': [(<numba.core.ir.Assign object at 0x7db9bcf2ab60>,
                                        106)],
             '$74unpack_sequence.13': [(<numba.core.ir.Assign object at 0x7db9bcf2ae00>,
                                        106)],
             '$84pred': [(<numba.core.ir.Assign object at 0x7db9bcf2ab90>,
                          106)],
             '$8pred': [(<numba.core.ir.Assign object at 0x7db9bce777c0>, 0)],
             '$98get_iter.6': [(<numba.core.ir.Assign object at 0x7db9bcf29a20>,
                                140)],
             '$const110.1.5': [(<numba.core.ir.Assign object at 0x7db9b7d2bb20>,
                                194)],
             '$const166.8.6': [(<numba.core.ir.Assign object at 0x7db9b7d28fa0>,
                                256)],
             '$const176.13.6': [(<numba.core.ir.Assign object at 0x7db9bcf349a0>,
                                 256)],
             '$const314.3.6': [(<numba.core.ir.Assign object at 0x7db9bc979cf0>,
                                412)],
             '$const358.7.9': [(<numba.core.ir.Assign object at 0x7db9bcda2c50>,
                                434)],
             '$const364.10.6': [(<numba.core.ir.Assign object at 0x7db9bcda13c0>,
                                 434)],
             '$const370.13.5': [(<numba.core.ir.Assign object at 0x7db9bcda3400>,
                                 434)],
             '$const376.16.10': [(<numba.core.ir.Assign object at 0x7db9b7dbed70>,
                                  434)],
             '$phi140.0': [(<numba.core.ir.Assign object at 0x7db9b7d2b880>,
                            194)],
             '$phi142.1': [(<numba.core.ir.Assign object at 0x7db9b7d28670>,
                            196)],
             '$phi152.1': [(<numba.core.ir.Assign object at 0x7db9b7d2be80>,
                            228)],
             '$phi154.2': [(<numba.core.ir.Assign object at 0x7db9b7d29870>,
                            230)],
             '$phi228.0': [(<numba.core.ir.Assign object at 0x7db9bcf357e0>,
                            278)],
             '$phi230.1': [(<numba.core.ir.Assign object at 0x7db9bcf366b0>,
                            294)],
             '$phi256.1': [(<numba.core.ir.Assign object at 0x7db9bcf342e0>,
                            296)],
             '$phi258.2': [(<numba.core.ir.Assign object at 0x7db9bcf34f10>,
                            312)],
             '$phi294.1': [(<numba.core.ir.Assign object at 0x7db9bc97aad0>,
                            336)],
             '$phi296.2': [(<numba.core.ir.Assign object at 0x7db9bc978460>,
                            344)],
             '$phi344.1': [(<numba.core.ir.Assign object at 0x7db9bcda04c0>,
                            422)],
             '$phi346.2': [(<numba.core.ir.Assign object at 0x7db9bcda1c60>,
                            424)],
             'array': [(<numba.core.ir.Assign object at 0x7db9bc8f8070>, 140)],
             'array.1': [(<numba.core.ir.Assign object at 0x7db9b7d0faf0>, 34)],
             'bool16': [(<numba.core.ir.Assign object at 0x7db9bce75180>, 10)],
             'bool24': [(<numba.core.ir.Assign object at 0x7db9bcf29a50>, 18)],
             'bool310': [(<numba.core.ir.Assign object at 0x7db9bc979b10>,
                          346)],
             'bool32': [(<numba.core.ir.Assign object at 0x7db9bcf28790>, 26)],
             'bool8': [(<numba.core.ir.Assign object at 0x7db9bce774f0>, 0)],
             'bool84': [(<numba.core.ir.Assign object at 0x7db9bcf2b820>, 106)],
             'closure__locals___listcomp__v2__v10load_global_3': [(<numba.core.ir.Assign object at 0x7db9bc8fa0e0>,
                                                                   152)],
             'closure__locals___listcomp__v2__v12load_attr_4': [(<numba.core.ir.Assign object at 0x7db9bc8fb520>,
                                                                 152)],
             'closure__locals___listcomp__v2__v6for_iter_2': [(<numba.core.ir.Assign object at 0x7db9bc8f9d50>,
                                                               142)],
             'closure__locals___listcomp__v2__v6for_iter_3': [(<numba.core.ir.Assign object at 0x7db9bc8fbb50>,
                                                               142)],
             'closure__locals___listcomp__v2__v6for_iter_4': [(<numba.core.ir.Assign object at 0x7db9bc8f9960>,
                                                               142)],
             'closure__locals___listcomp__v2__vphi6_1': [(<numba.core.ir.Assign object at 0x7db9bc8fbd00>,
                                                          140)],
             'closure__locals___listcomp__v2_implicit0': [(<numba.core.ir.Assign object at 0x7db9bc8fa470>,
                                                           140)],
             'closure__locals___listcomp__v3__v10load_global_3': [(<numba.core.ir.Assign object at 0x7db9bcec1e70>,
                                                                   86)],
             'closure__locals___listcomp__v3__v12load_attr_4': [(<numba.core.ir.Assign object at 0x7db9bcec34c0>,
                                                                 86)],
             'closure__locals___listcomp__v3__v6for_iter_2': [(<numba.core.ir.Assign object at 0x7db9bcec37c0>,
                                                               54)],
             'closure__locals___listcomp__v3__v6for_iter_3': [(<numba.core.ir.Assign object at 0x7db9bcec1cf0>,
                                                               54)],
             'closure__locals___listcomp__v3__v6for_iter_4': [(<numba.core.ir.Assign object at 0x7db9bcec1690>,
                                                               54)],
             'closure__locals___listcomp__v3__vphi6_1': [(<numba.core.ir.Assign object at 0x7db9bcec1180>,
                                                          34)],
             'closure__locals___listcomp__v3_implicit0': [(<numba.core.ir.Assign object at 0x7db9bcec32b0>,
                                                           34)],
             'edge_indices': [(<numba.core.ir.Assign object at 0x7db9bcf36b60>,
                               296)],
             'edges': [(<numba.core.ir.Assign object at 0x7db9b7d284c0>, 194)],
             'ei': [(<numba.core.ir.Assign object at 0x7db9bc978760>, 346)],
             'empty_func': [(<numba.core.ir.Assign object at 0x7db9bc8fa9b0>,
                             140)],
             'empty_func.1': [(<numba.core.ir.Assign object at 0x7db9b7d0c8e0>,
                               34)],
             'grid': [(<numba.core.ir.Assign object at 0x7db9bce75bd0>, 0)],
             'grid_indices': [(<numba.core.ir.Assign object at 0x7db9b7dbdf30>,
                               434)],
             'i': [(<numba.core.ir.Assign object at 0x7db9b7d29f90>, 228),
                   (<numba.core.ir.Assign object at 0x7db9bc979810>, 346)],
             'i_icol': [(<numba.core.ir.Assign object at 0x7db9bcda22c0>, 434)],
             'icol': [(<numba.core.ir.Assign object at 0x7db9bcda3a90>, 434)],
             'icols': [(<numba.core.ir.Assign object at 0x7db9bce776a0>, 0)],
             'ii0': [(<numba.core.ir.Assign object at 0x7db9bce74b80>, 0)],
             'ii1': [(<numba.core.ir.Assign object at 0x7db9bce75150>, 0)],
             'ii2': [(<numba.core.ir.Assign object at 0x7db9bce748e0>, 0)],
             'ii3': [(<numba.core.ir.Assign object at 0x7db9bce753c0>, 0)],
             'index': [(<numba.core.ir.Assign object at 0x7db9bcec3bb0>, 140),
                       (<numba.core.ir.Assign object at 0x7db9b7d0c9d0>, 142)],
             'index.1': [(<numba.core.ir.Assign object at 0x7db9bcec0790>, 34),
                         (<numba.core.ir.Assign object at 0x7db9b7d0ea40>, 54)],
             'indices': [(<numba.core.ir.Assign object at 0x7db9bcf2b340>,
                          106)],
             'j': [(<numba.core.ir.Assign object at 0x7db9b7d28970>, 256),
                   (<numba.core.ir.Assign object at 0x7db9bcf35030>, 296)],
             'k': [(<numba.core.ir.Assign object at 0x7db9bc97b8b0>, 326)],
             'len_func': [(<numba.core.ir.Assign object at 0x7db9bcec3df0>,
                           140)],
             'len_func.1': [(<numba.core.ir.Assign object at 0x7db9b7d0c6a0>,
                             34)],
             'n_edges': [(<numba.core.ir.Assign object at 0x7db9b7d2aa40>,
                          194)],
             'n_values': [(<numba.core.ir.Assign object at 0x7db9bcf37dc0>,
                           278)],
             'ndim': [(<numba.core.ir.Assign object at 0x7db9b7d2b2e0>, 194)],
             'next_index': [(<numba.core.ir.Assign object at 0x7db9bcf2ad40>,
                             142)],
             'next_index.1': [(<numba.core.ir.Assign object at 0x7db9b7d0c070>,
                               54)],
             'norm_distances': [(<numba.core.ir.Assign object at 0x7db9bcf2a980>,
                                 106)],
             'one': [(<numba.core.ir.Assign object at 0x7db9bcec3d00>, 142)],
             'one.1': [(<numba.core.ir.Assign object at 0x7db9b7d0db70>, 54)],
             'out_of_bounds': [(<numba.core.ir.Assign object at 0x7db9bcf2b310>,
                                106)],
             'size': [(<numba.core.ir.Assign object at 0x7db9bcec1ed0>, 140)],
             'size.1': [(<numba.core.ir.Assign object at 0x7db9b7d0f370>, 34)],
             'size_tuple': [(<numba.core.ir.Assign object at 0x7db9bcec2680>,
                             140)],
             'size_tuple.1': [(<numba.core.ir.Assign object at 0x7db9b7d0cc40>,
                               34)],
             'values': [(<numba.core.ir.Assign object at 0x7db9bcf36050>, 278)],
             'weight': [(<numba.core.ir.Assign object at 0x7db9bc97a890>, 336),
                        (<numba.core.ir.Assign object at 0x7db9bcda1900>, 412),
                        (<numba.core.ir.Assign object at 0x7db9bcda3940>, 414)],
             'x0': [(<numba.core.ir.Assign object at 0x7db9bce753f0>, 0)],
             'x1': [(<numba.core.ir.Assign object at 0x7db9bce75900>, 0)],
             'x2': [(<numba.core.ir.Assign object at 0x7db9bce76ec0>, 0)],
             'x3': [(<numba.core.ir.Assign object at 0x7db9bce77eb0>, 0)],
             'yi': [(<numba.core.ir.Assign object at 0x7db9bc978130>, 346)]})
2025-06-18 10:06:37,056 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b7dbeda0>
2025-06-18 10:06:37,056 - DEBUG - ssa.py:63 - Fix SSA violator on var index.1
2025-06-18 10:06:37,057 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,057 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,057 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,057 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,057 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,057 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,057 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,057 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,058 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,058 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,058 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:301 - first assign: index.1
2025-06-18 10:06:37,058 - DEBUG - ssa.py:215 - replaced with: index.1 = const(int, -1)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,058 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,058 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,058 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,059 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,059 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,059 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,059 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,059 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,060 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,060 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,060 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,060 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,060 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,060 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,060 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,060 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,060 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,061 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,061 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,061 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,061 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,061 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,061 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,061 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,061 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,061 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,062 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,062 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,062 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,062 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,062 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,062 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,062 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,062 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,062 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,063 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,063 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,063 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,063 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,063 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,063 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,063 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,063 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,063 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,064 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,064 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,064 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,064 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,064 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,064 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,064 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,064 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,064 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,065 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,065 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,065 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,065 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: next_index = index + one
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: index = next_index
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,065 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,065 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,065 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,065 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,065 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,065 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1 + one.1
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: index.1 = next_index.1
2025-06-18 10:06:37,065 - DEBUG - ssa.py:215 - replaced with: index.1.1 = next_index.1
2025-06-18 10:06:37,065 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,066 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,066 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: array.1[index.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,066 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,066 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b7dbca30>
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,066 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7db9b7dbedd0>],
             54: [<numba.core.ir.Assign object at 0x7db9bcec19c0>]})
2025-06-18 10:06:37,066 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,066 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,066 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,067 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,067 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,067 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,067 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,067 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,067 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,067 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,067 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,067 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,068 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,068 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,068 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,068 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,068 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,069 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,069 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,069 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,069 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,069 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,069 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,069 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,070 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,070 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,070 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,070 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,070 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,070 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,070 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,070 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,070 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,071 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,071 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,071 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,071 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,071 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,072 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,072 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,072 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,072 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,072 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,072 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,072 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,072 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,072 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,072 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,073 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,073 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,073 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,073 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,073 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,073 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,073 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,073 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,074 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,074 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,074 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,074 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,074 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,074 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,074 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: next_index = index + one
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: index = next_index
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,075 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,075 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,075 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1 + one.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:385 - find_def var='index.1' stmt=next_index.1 = index.1 + one.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,076 - DEBUG - ssa.py:433 - insert phi node index.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,076 - DEBUG - ssa.py:459 - find_def_from_bottom label 34
2025-06-18 10:06:37,076 - DEBUG - ssa.py:441 - incoming_def index.1 = const(int, -1)
2025-06-18 10:06:37,076 - DEBUG - ssa.py:459 - find_def_from_bottom label 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:416 - find_def_from_top label 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:453 - idom 54 from label 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,076 - DEBUG - ssa.py:441 - incoming_def index.1.1 = next_index.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:215 - replaced with: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,076 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: array.1[index.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,076 - DEBUG - ssa.py:385 - find_def var='index.1' stmt=array.1[index.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,076 - DEBUG - ssa.py:416 - find_def_from_top label 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:453 - idom 54 from label 86
2025-06-18 10:06:37,076 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,076 - DEBUG - ssa.py:215 - replaced with: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,076 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,076 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b7dbca30>
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,076 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,077 - DEBUG - ssa.py:63 - Fix SSA violator on var index
2025-06-18 10:06:37,077 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,077 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,077 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,077 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,077 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,077 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,077 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,077 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,077 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,078 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,078 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,078 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,078 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,078 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,078 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,079 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:301 - first assign: index
2025-06-18 10:06:37,079 - DEBUG - ssa.py:215 - replaced with: index = const(int, -1)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,079 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,079 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,079 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,079 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,079 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,080 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,080 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,080 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,080 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,080 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,080 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,080 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,080 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,080 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,081 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,081 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,081 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,081 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,081 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,081 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,081 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,082 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,082 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,082 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,082 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,082 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,082 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,082 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,082 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,082 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,082 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,082 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,083 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,083 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,083 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,083 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,083 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,083 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,083 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,083 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,083 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,084 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,084 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,084 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,084 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,084 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,084 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,084 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,084 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,084 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,084 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,084 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: next_index = index + one
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: index = next_index
2025-06-18 10:06:37,085 - DEBUG - ssa.py:215 - replaced with: index.2 = next_index
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,085 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,085 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,085 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,085 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,085 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,085 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,085 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,085 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,085 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,086 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,086 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc9797b0>
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,086 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {140: [<numba.core.ir.Assign object at 0x7db9b7dbf940>],
             142: [<numba.core.ir.Assign object at 0x7db9bcec3ca0>]})
2025-06-18 10:06:37,086 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,086 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,086 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,086 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,086 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,086 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,086 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,087 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,087 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,087 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,087 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,087 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,087 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,087 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,088 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,088 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,088 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,088 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,088 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,089 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,089 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,089 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,089 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,089 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,089 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,089 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,089 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,089 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,090 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,090 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,090 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,090 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,090 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,090 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,090 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,090 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,091 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,091 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,091 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,091 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,091 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,091 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,091 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,091 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,092 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,092 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,092 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,092 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,092 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,092 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,092 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,092 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,092 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,093 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,093 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,093 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,093 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,093 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,093 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,093 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,094 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,094 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,094 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,094 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,094 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,094 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,094 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,094 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: next_index = index + one
2025-06-18 10:06:37,094 - DEBUG - ssa.py:385 - find_def var='index' stmt=next_index = index + one
2025-06-18 10:06:37,094 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,094 - DEBUG - ssa.py:433 - insert phi node index.3 = phi(incoming_values=[], incoming_blocks=[]) at 142
2025-06-18 10:06:37,094 - DEBUG - ssa.py:459 - find_def_from_bottom label 152
2025-06-18 10:06:37,094 - DEBUG - ssa.py:416 - find_def_from_top label 152
2025-06-18 10:06:37,094 - DEBUG - ssa.py:453 - idom 142 from label 152
2025-06-18 10:06:37,094 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,094 - DEBUG - ssa.py:441 - incoming_def index.2 = next_index
2025-06-18 10:06:37,094 - DEBUG - ssa.py:459 - find_def_from_bottom label 140
2025-06-18 10:06:37,094 - DEBUG - ssa.py:441 - incoming_def index = const(int, -1)
2025-06-18 10:06:37,094 - DEBUG - ssa.py:215 - replaced with: next_index = index.3 + one
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,094 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,095 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,095 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,095 - DEBUG - ssa.py:385 - find_def var='index' stmt=array[index] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,095 - DEBUG - ssa.py:416 - find_def_from_top label 152
2025-06-18 10:06:37,095 - DEBUG - ssa.py:453 - idom 142 from label 152
2025-06-18 10:06:37,095 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,095 - DEBUG - ssa.py:215 - replaced with: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,095 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,095 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,095 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,095 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,095 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,095 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,095 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,095 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,096 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce756f0>
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,096 - DEBUG - ssa.py:63 - Fix SSA violator on var i
2025-06-18 10:06:37,096 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,096 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,096 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,096 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,096 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,096 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,096 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,097 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,097 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,097 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,097 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,097 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,097 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,097 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,098 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,098 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,098 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,098 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,098 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,098 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,098 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,099 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,099 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,099 - DEBUG - ssa.py:301 - first assign: i
2025-06-18 10:06:37,099 - DEBUG - ssa.py:215 - replaced with: i = $phi142.1
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,099 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,099 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,099 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,099 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,099 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,100 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,100 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,100 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,100 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,100 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,100 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,100 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,100 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,100 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,101 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,101 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,101 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,101 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,101 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,101 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,101 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,101 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,101 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,102 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,102 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: i = $296unpack_sequence.4
2025-06-18 10:06:37,102 - DEBUG - ssa.py:215 - replaced with: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,102 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,102 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,102 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,102 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,102 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,102 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,102 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,103 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,103 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,103 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,103 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,103 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,103 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,103 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,103 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,103 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,103 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,103 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,104 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,104 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,104 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,104 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,104 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,104 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,104 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,104 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,104 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,104 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,104 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,105 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,105 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bda75390>
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,105 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {228: [<numba.core.ir.Assign object at 0x7db9bcec3d60>],
             346: [<numba.core.ir.Assign object at 0x7db9b7dbd300>]})
2025-06-18 10:06:37,105 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,105 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,105 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,105 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,105 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,106 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,106 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,106 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,106 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,106 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,106 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,106 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,106 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,106 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,107 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,107 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,107 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,107 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,107 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,108 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,108 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,108 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,108 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,108 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,108 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,108 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,108 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,108 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,109 - DEBUG - ssa.py:385 - find_def var='i' stmt=$174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,109 - DEBUG - ssa.py:416 - find_def_from_top label 256
2025-06-18 10:06:37,109 - DEBUG - ssa.py:453 - idom 230 from label 256
2025-06-18 10:06:37,109 - DEBUG - ssa.py:459 - find_def_from_bottom label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:416 - find_def_from_top label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:453 - idom 228 from label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:459 - find_def_from_bottom label 228
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,109 - DEBUG - ssa.py:385 - find_def var='i' stmt=$188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,109 - DEBUG - ssa.py:416 - find_def_from_top label 256
2025-06-18 10:06:37,109 - DEBUG - ssa.py:453 - idom 230 from label 256
2025-06-18 10:06:37,109 - DEBUG - ssa.py:459 - find_def_from_bottom label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:416 - find_def_from_top label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:453 - idom 228 from label 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:459 - find_def_from_bottom label 228
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,109 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,109 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,109 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,109 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,109 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,110 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,110 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,110 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,110 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,110 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,110 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,110 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,111 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,111 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,111 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,111 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,111 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,111 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,111 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,111 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,111 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i
2025-06-18 10:06:37,112 - DEBUG - ssa.py:385 - find_def var='i' stmt=$308compare_op.9 = ei == i
2025-06-18 10:06:37,112 - DEBUG - ssa.py:215 - replaced with: $308compare_op.9 = ei == i.1
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,112 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,112 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,112 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,112 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,112 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,112 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,112 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,112 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,112 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,113 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,113 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,113 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,113 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,113 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,113 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,113 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,113 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,113 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,113 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,113 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,114 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,114 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,114 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,114 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,114 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,114 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,114 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,114 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,114 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,115 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,115 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bcec2c80>
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,115 - DEBUG - ssa.py:63 - Fix SSA violator on var j
2025-06-18 10:06:37,115 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,115 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,115 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,115 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,115 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,115 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,115 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,116 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,116 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,116 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,116 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,116 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,116 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,116 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,117 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,117 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,117 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,117 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,117 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,117 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,117 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,118 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,118 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,118 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,118 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,118 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,118 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,118 - DEBUG - ssa.py:301 - first assign: j
2025-06-18 10:06:37,118 - DEBUG - ssa.py:215 - replaced with: j = $phi154.2
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,118 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,119 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,119 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,119 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,119 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,119 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,119 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,119 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,119 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: j = $phi230.1
2025-06-18 10:06:37,119 - DEBUG - ssa.py:215 - replaced with: j.1 = $phi230.1
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,119 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,120 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,120 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,120 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,120 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,120 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,120 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,120 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,120 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,120 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,121 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,121 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i.1
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,121 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,121 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,121 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,121 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,121 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,121 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,121 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,122 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,122 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,122 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,122 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,122 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,122 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,122 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,122 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,122 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,122 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,123 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,123 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,123 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,123 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,123 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,123 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,123 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,124 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,124 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bce74e20>
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,124 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {256: [<numba.core.ir.Assign object at 0x7db9bda76200>],
             296: [<numba.core.ir.Assign object at 0x7db9bcec1d80>]})
2025-06-18 10:06:37,124 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,124 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,124 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,124 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,124 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,125 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,125 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,125 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,125 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,125 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,125 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,125 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,125 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,125 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,126 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,126 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,126 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,126 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,126 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,127 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,127 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,127 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,127 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,127 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,127 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,127 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,127 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:385 - find_def var='j' stmt=$160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,127 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,128 - DEBUG - ssa.py:385 - find_def var='j' stmt=$172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,128 - DEBUG - ssa.py:385 - find_def var='j' stmt=$188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,128 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,128 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,128 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,128 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,128 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,128 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,128 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,129 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,129 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: j.1 = $phi230.1
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,129 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,129 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,129 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,129 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,129 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,129 - DEBUG - ssa.py:385 - find_def var='j' stmt=$266build_tuple.6 = build_tuple(items=[Var(j, interp.py:313), Var(k, interp.py:321)])
2025-06-18 10:06:37,129 - DEBUG - ssa.py:416 - find_def_from_top label 326
2025-06-18 10:06:37,129 - DEBUG - ssa.py:453 - idom 312 from label 326
2025-06-18 10:06:37,130 - DEBUG - ssa.py:459 - find_def_from_bottom label 312
2025-06-18 10:06:37,130 - DEBUG - ssa.py:416 - find_def_from_top label 312
2025-06-18 10:06:37,130 - DEBUG - ssa.py:453 - idom 296 from label 312
2025-06-18 10:06:37,130 - DEBUG - ssa.py:459 - find_def_from_bottom label 296
2025-06-18 10:06:37,130 - DEBUG - ssa.py:215 - replaced with: $266build_tuple.6 = build_tuple(items=[Var(j.1, interp.py:319), Var(k, interp.py:321)])
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,130 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,130 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,130 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,130 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,130 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,130 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,130 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i.1
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,131 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,131 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,131 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,131 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,131 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,131 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,132 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,132 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,132 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,132 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,132 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,132 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,132 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,132 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,132 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,133 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,133 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,133 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,133 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,133 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,133 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,133 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,133 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,133 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,133 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bda75390>
2025-06-18 10:06:37,133 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,134 - DEBUG - ssa.py:63 - Fix SSA violator on var weight
2025-06-18 10:06:37,134 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,134 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,134 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,134 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,134 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,134 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,134 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,134 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,134 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,135 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,135 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,135 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,135 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,135 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,135 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,136 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,136 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,136 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,136 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,136 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,136 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,137 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,137 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,137 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,137 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,137 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,137 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,137 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,137 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,137 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,137 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,137 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,138 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,138 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,138 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,138 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: j.1 = $phi230.1
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,138 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,139 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,139 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,139 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,139 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j.1, interp.py:319), Var(k, interp.py:321)])
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,139 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,139 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:301 - first assign: weight
2025-06-18 10:06:37,139 - DEBUG - ssa.py:215 - replaced with: weight = const(float, 1.0)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,139 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,139 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,139 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,139 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,139 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i.1
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,140 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,140 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: weight = $320inplace_multiply.6
2025-06-18 10:06:37,140 - DEBUG - ssa.py:215 - replaced with: weight.1 = $320inplace_multiply.6
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,140 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,140 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: weight = $330inplace_multiply.4
2025-06-18 10:06:37,140 - DEBUG - ssa.py:215 - replaced with: weight.2 = $330inplace_multiply.4
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,140 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,140 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,140 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,140 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,140 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,141 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,141 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,141 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,141 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,141 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,141 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,141 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,141 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,141 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,141 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,142 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,142 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,142 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,142 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,142 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,142 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,142 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,142 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,142 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,142 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,143 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,143 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcec2c80>
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,143 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {336: [<numba.core.ir.Assign object at 0x7db9b7dbf0a0>],
             412: [<numba.core.ir.Assign object at 0x7db9bc97b790>],
             414: [<numba.core.ir.Assign object at 0x7db9bc97bc70>]})
2025-06-18 10:06:37,143 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,143 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: grid = arg(4, name=grid)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: icols = arg(5, name=icols)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(6, name=ii0)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(7, name=ii1)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(8, name=ii2)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(9, name=ii3)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = x0 != x0
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 34, 10
2025-06-18 10:06:37,143 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,143 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $14compare_op.2 = x1 != x1
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: bool16 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: $16pred = call bool16($14compare_op.2, func=bool16, args=(Var($14compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,143 - DEBUG - ssa.py:209 - on stmt: branch $16pred, 34, 18
2025-06-18 10:06:37,144 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,144 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $22compare_op.2 = x2 != x2
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.2, func=bool24, args=(Var($22compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 34, 26
2025-06-18 10:06:37,144 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:37,144 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $30compare_op.2 = x3 != x3
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: bool32 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, interp.py:298),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: branch $32pred, 34, 106
2025-06-18 10:06:37,144 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 34
2025-06-18 10:06:37,144 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $46get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3_implicit0 = $46get_iter.6
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__vphi6_1 = closure__locals___listcomp__v3_implicit0
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: index.1 = const(int, -1)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: len_func.1 = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: size.1 = call len_func.1(closure__locals___listcomp__v3__vphi6_1, func=len_func.1, args=(Var(closure__locals___listcomp__v3__vphi6_1, interp.py:299),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: size_tuple.1 = build_tuple(items=[Var(size.1, interp.py:299)])
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: empty_func.1 = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: array.1 = call empty_func.1(size_tuple.1, func=empty_func.1, args=(Var(size_tuple.1, interp.py:299),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,144 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,144 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $54load_global.0 = global(find_indices_4d: CPUDispatcher(<function find_indices_4d at 0x7db9bf82a050>))
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $72call_function.9 = call $54load_global.0(x0, x1, x2, x3, ii0, ii1, ii2, ii3, func=$54load_global.0, args=[Var(x0, interp.py:296), Var(x1, interp.py:296), Var(x2, interp.py:296), Var(x3, interp.py:296), Var(ii0, interp.py:296), Var(ii1, interp.py:296), Var(ii2, interp.py:296), Var(ii3, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.13 = exhaust_iter(value=$72call_function.9, count=3)
2025-06-18 10:06:37,144 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.10 = static_getitem(value=$74unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.11 = static_getitem(value=$74unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $74unpack_sequence.12 = static_getitem(value=$74unpack_sequence.13, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: indices = $74unpack_sequence.10
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: norm_distances = $74unpack_sequence.11
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: out_of_bounds = $74unpack_sequence.12
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: bool84 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $84pred = call bool84(out_of_bounds, func=bool84, args=(Var(out_of_bounds, interp.py:301),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: branch $84pred, 140, 194
2025-06-18 10:06:37,145 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 140
2025-06-18 10:06:37,145 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $98get_iter.6 = getiter(value=icols)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2_implicit0 = $98get_iter.6
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__vphi6_1 = closure__locals___listcomp__v2_implicit0
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: index = const(int, -1)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: len_func = global(length_of_iterator: <intrinsic length_of_iterator>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: size = call len_func(closure__locals___listcomp__v2__vphi6_1, func=len_func, args=(Var(closure__locals___listcomp__v2__vphi6_1, interp.py:304),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: size_tuple = build_tuple(items=[Var(size, interp.py:304)])
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: empty_func = global(unsafe_empty_inferred: <intrinsic empty_inferred>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: array = call empty_func(size_tuple, func=empty_func, args=(Var(size_tuple, interp.py:304),), kws=[], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,145 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 194
2025-06-18 10:06:37,145 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: ndim = const(int, 4)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $const110.1.5 = const(int, 2)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: n_edges = $const110.1.5 ** ndim
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $118load_global.4 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $120load_method.5 = getattr(value=$118load_global.4, attr=zeros)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $126build_tuple.8 = build_tuple(items=[Var(n_edges, interp.py:310), Var(ndim, interp.py:309)])
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: edges = call $120load_method.5($126build_tuple.8, func=$120load_method.5, args=[Var($126build_tuple.8, interp.py:311)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,145 - DEBUG - ssa.py:209 - on stmt: $132load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $136call_function.12 = call $132load_global.10(n_edges, func=$132load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $138get_iter.13 = getiter(value=$136call_function.12)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $phi140.0 = $138get_iter.13
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,146 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 196
2025-06-18 10:06:37,146 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $140for_iter.1 = iternext(value=$phi140.0)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $140for_iter.2 = pair_first(value=$140for_iter.1)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $140for_iter.3 = pair_second(value=$140for_iter.1)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $phi142.1 = $140for_iter.2
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: branch $140for_iter.3, 228, 278
2025-06-18 10:06:37,146 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 228
2025-06-18 10:06:37,146 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: i = $phi142.1
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $144load_global.2 = global(range: <class 'range'>)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $148call_function.4 = call $144load_global.2(ndim, func=$144load_global.2, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $150get_iter.5 = getiter(value=$148call_function.4)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $phi152.1 = $150get_iter.5
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,146 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 230
2025-06-18 10:06:37,146 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $152for_iter.2 = iternext(value=$phi152.1)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $152for_iter.3 = pair_first(value=$152for_iter.2)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $152for_iter.4 = pair_second(value=$152for_iter.2)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $phi154.2 = $152for_iter.3
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: branch $152for_iter.4, 256, 258
2025-06-18 10:06:37,146 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 256
2025-06-18 10:06:37,146 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: j = $phi154.2
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $160binary_subscr.5 = getitem(value=indices, index=j, fn=<built-in function getitem>)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $const166.8.6 = const(int, 1)
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $168binary_subtract.9 = ndim - $const166.8.6
2025-06-18 10:06:37,146 - DEBUG - ssa.py:209 - on stmt: $172binary_subtract.11 = $168binary_subtract.9 - j
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $174binary_rshift.12 = i >> $172binary_subtract.11
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $const176.13.6 = const(int, 1)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $178binary_and.14 = $174binary_rshift.12 & $const176.13.6
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $180binary_add.15 = $160binary_subscr.5 + $178binary_and.14
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $188build_tuple.19 = build_tuple(items=[Var(i, interp.py:312), Var(j, interp.py:313)])
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: edges[$188build_tuple.19] = $180binary_add.15
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: jump 230
2025-06-18 10:06:37,147 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 258
2025-06-18 10:06:37,147 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: jump 196
2025-06-18 10:06:37,147 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 278
2025-06-18 10:06:37,147 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $196load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: n_values = call $196load_global.0(icols, func=$196load_global.0, args=[Var(icols, interp.py:296)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $204load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $206load_attr.4 = getattr(value=$204load_global.3, attr=zeros)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $210load_global.6 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $212load_attr.7 = getattr(value=$210load_global.6, attr=float64)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: values = call $206load_attr.4(n_values, func=$206load_attr.4, args=[Var(n_values, interp.py:316)], kws=[('dtype', Var($212load_attr.7, interp.py:317))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $220load_global.10 = global(range: <class 'range'>)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $224call_function.12 = call $220load_global.10(n_edges, func=$220load_global.10, args=[Var(n_edges, interp.py:310)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $226get_iter.13 = getiter(value=$224call_function.12)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $phi228.0 = $226get_iter.13
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,147 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 294
2025-06-18 10:06:37,147 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $228for_iter.1 = iternext(value=$phi228.0)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: $phi230.1 = $228for_iter.2
2025-06-18 10:06:37,147 - DEBUG - ssa.py:209 - on stmt: branch $228for_iter.3, 296, 445
2025-06-18 10:06:37,148 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 296
2025-06-18 10:06:37,148 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: j.1 = $phi230.1
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $232load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $234load_attr.3 = getattr(value=$232load_global.2, attr=zeros)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $238load_global.5 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $240load_attr.6 = getattr(value=$238load_global.5, attr=uint32)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: edge_indices = call $234load_attr.3(ndim, func=$234load_attr.3, args=[Var(ndim, interp.py:309)], kws=[('dtype', Var($240load_attr.6, interp.py:320))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $248load_global.9 = global(range: <class 'range'>)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $252call_function.11 = call $248load_global.9(ndim, func=$248load_global.9, args=[Var(ndim, interp.py:309)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $254get_iter.12 = getiter(value=$252call_function.11)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $phi256.1 = $254get_iter.12
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,148 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 312
2025-06-18 10:06:37,148 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $256for_iter.2 = iternext(value=$phi256.1)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $256for_iter.3 = pair_first(value=$256for_iter.2)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $256for_iter.4 = pair_second(value=$256for_iter.2)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $phi258.2 = $256for_iter.3
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: branch $256for_iter.4, 326, 336
2025-06-18 10:06:37,148 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 326
2025-06-18 10:06:37,148 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: k = $phi258.2
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $266build_tuple.6 = build_tuple(items=[Var(j.1, interp.py:319), Var(k, interp.py:321)])
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $268binary_subscr.7 = getitem(value=edges, index=$266build_tuple.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: edge_indices[k] = $268binary_subscr.7
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: jump 312
2025-06-18 10:06:37,148 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 336
2025-06-18 10:06:37,148 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: weight = const(float, 1.0)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $282load_global.2 = global(zip: <class 'zip'>)
2025-06-18 10:06:37,148 - DEBUG - ssa.py:209 - on stmt: $290call_function.6 = call $282load_global.2(edge_indices, indices, norm_distances, func=$282load_global.2, args=[Var(edge_indices, interp.py:320), Var(indices, interp.py:301), Var(norm_distances, interp.py:301)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $292get_iter.7 = getiter(value=$290call_function.6)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $phi294.1 = $292get_iter.7
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,149 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 344
2025-06-18 10:06:37,149 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $294for_iter.2 = iternext(value=$phi294.1)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $294for_iter.3 = pair_first(value=$294for_iter.2)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $294for_iter.4 = pair_second(value=$294for_iter.2)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $phi296.2 = $294for_iter.3
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: branch $294for_iter.4, 346, 422
2025-06-18 10:06:37,149 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 346
2025-06-18 10:06:37,149 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.6 = exhaust_iter(value=$phi296.2, count=3)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.3 = static_getitem(value=$296unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.4 = static_getitem(value=$296unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $296unpack_sequence.5 = static_getitem(value=$296unpack_sequence.6, index=2, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: ei = $296unpack_sequence.3
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: i.1 = $296unpack_sequence.4
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: yi = $296unpack_sequence.5
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $308compare_op.9 = ei == i.1
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: bool310 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $310pred = call bool310($308compare_op.9, func=bool310, args=(Var($308compare_op.9, interp.py:326),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: branch $310pred, 412, 414
2025-06-18 10:06:37,149 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 412
2025-06-18 10:06:37,149 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $const314.3.6 = const(int, 1)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $318binary_subtract.5 = $const314.3.6 - yi
2025-06-18 10:06:37,149 - DEBUG - ssa.py:209 - on stmt: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:385 - find_def var='weight' stmt=$320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,149 - DEBUG - ssa.py:416 - find_def_from_top label 412
2025-06-18 10:06:37,149 - DEBUG - ssa.py:453 - idom 346 from label 412
2025-06-18 10:06:37,149 - DEBUG - ssa.py:459 - find_def_from_bottom label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:416 - find_def_from_top label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:453 - idom 344 from label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 344
2025-06-18 10:06:37,150 - DEBUG - ssa.py:416 - find_def_from_top label 344
2025-06-18 10:06:37,150 - DEBUG - ssa.py:433 - insert phi node weight.3 = phi(incoming_values=[], incoming_blocks=[]) at 344
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 336
2025-06-18 10:06:37,150 - DEBUG - ssa.py:441 - incoming_def weight = const(float, 1.0)
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 415
2025-06-18 10:06:37,150 - DEBUG - ssa.py:416 - find_def_from_top label 415
2025-06-18 10:06:37,150 - DEBUG - ssa.py:433 - insert phi node weight.4 = phi(incoming_values=[], incoming_blocks=[]) at 415
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 412
2025-06-18 10:06:37,150 - DEBUG - ssa.py:441 - incoming_def weight.1 = $320inplace_multiply.6
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 414
2025-06-18 10:06:37,150 - DEBUG - ssa.py:441 - incoming_def weight.2 = $330inplace_multiply.4
2025-06-18 10:06:37,150 - DEBUG - ssa.py:441 - incoming_def weight.4 = phi(incoming_values=[Var(weight.1, interp.py:327), Var(weight.2, interp.py:329)], incoming_blocks=[412, 414])
2025-06-18 10:06:37,150 - DEBUG - ssa.py:215 - replaced with: $320inplace_multiply.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight.3, rhs=$318binary_subtract.5, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,150 - DEBUG - ssa.py:209 - on stmt: weight.1 = $320inplace_multiply.6
2025-06-18 10:06:37,150 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,150 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 414
2025-06-18 10:06:37,150 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,150 - DEBUG - ssa.py:209 - on stmt: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,150 - DEBUG - ssa.py:385 - find_def var='weight' stmt=$330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,150 - DEBUG - ssa.py:416 - find_def_from_top label 414
2025-06-18 10:06:37,150 - DEBUG - ssa.py:453 - idom 346 from label 414
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:416 - find_def_from_top label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:453 - idom 344 from label 346
2025-06-18 10:06:37,150 - DEBUG - ssa.py:459 - find_def_from_bottom label 344
2025-06-18 10:06:37,150 - DEBUG - ssa.py:215 - replaced with: $330inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=weight.3, rhs=yi, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,150 - DEBUG - ssa.py:209 - on stmt: weight.2 = $330inplace_multiply.4
2025-06-18 10:06:37,150 - DEBUG - ssa.py:209 - on stmt: jump 415
2025-06-18 10:06:37,150 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 422
2025-06-18 10:06:37,151 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $336load_global.1 = global(range: <class 'range'>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $340call_function.3 = call $336load_global.1(n_values, func=$336load_global.1, args=[Var(n_values, interp.py:316)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $342get_iter.4 = getiter(value=$340call_function.3)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $phi344.1 = $342get_iter.4
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,151 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 424
2025-06-18 10:06:37,151 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $344for_iter.2 = iternext(value=$phi344.1)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $phi346.2 = $344for_iter.3
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: branch $344for_iter.4, 434, 443
2025-06-18 10:06:37,151 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 434
2025-06-18 10:06:37,151 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: i_icol = $phi346.2
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: icol = getitem(value=icols, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $const358.7.9 = const(int, 0)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $360binary_subscr.8 = static_getitem(value=edge_indices, index=0, index_var=$const358.7.9, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $const364.10.6 = const(int, 1)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $366binary_subscr.11 = static_getitem(value=edge_indices, index=1, index_var=$const364.10.6, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $const370.13.5 = const(int, 2)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $372binary_subscr.14 = static_getitem(value=edge_indices, index=2, index_var=$const370.13.5, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $const376.16.10 = const(int, 3)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $378binary_subscr.17 = static_getitem(value=edge_indices, index=3, index_var=$const376.16.10, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: grid_indices = build_tuple(items=[Var($360binary_subscr.8, interp.py:335), Var($366binary_subscr.11, interp.py:335), Var($372binary_subscr.14, interp.py:335), Var($378binary_subscr.17, interp.py:335), Var(icol, interp.py:332)])
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $392binary_subscr.24 = getitem(value=values, index=i_icol, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $398binary_subscr.27 = getitem(value=grid, index=grid_indices, fn=<built-in function getitem>)
2025-06-18 10:06:37,151 - DEBUG - ssa.py:209 - on stmt: $402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,151 - DEBUG - ssa.py:385 - find_def var='weight' stmt=$402binary_multiply.29 = $398binary_subscr.27 * weight
2025-06-18 10:06:37,151 - DEBUG - ssa.py:416 - find_def_from_top label 434
2025-06-18 10:06:37,151 - DEBUG - ssa.py:453 - idom 424 from label 434
2025-06-18 10:06:37,152 - DEBUG - ssa.py:459 - find_def_from_bottom label 424
2025-06-18 10:06:37,152 - DEBUG - ssa.py:416 - find_def_from_top label 424
2025-06-18 10:06:37,152 - DEBUG - ssa.py:453 - idom 422 from label 424
2025-06-18 10:06:37,152 - DEBUG - ssa.py:459 - find_def_from_bottom label 422
2025-06-18 10:06:37,152 - DEBUG - ssa.py:416 - find_def_from_top label 422
2025-06-18 10:06:37,152 - DEBUG - ssa.py:453 - idom 344 from label 422
2025-06-18 10:06:37,152 - DEBUG - ssa.py:459 - find_def_from_bottom label 344
2025-06-18 10:06:37,152 - DEBUG - ssa.py:215 - replaced with: $402binary_multiply.29 = $398binary_subscr.27 * weight.3
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: $404inplace_add.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$392binary_subscr.24, rhs=$402binary_multiply.29, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: values[i_icol] = $404inplace_add.30
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: jump 424
2025-06-18 10:06:37,152 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 443
2025-06-18 10:06:37,152 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: jump 294
2025-06-18 10:06:37,152 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 445
2025-06-18 10:06:37,152 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: $416return_value.1 = cast(value=values)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: return $416return_value.1
2025-06-18 10:06:37,152 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 415
2025-06-18 10:06:37,152 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: jump 344
2025-06-18 10:06:37,152 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,152 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: index.3 = phi(incoming_values=[Var(index.2, interp.py:304), Var(index, interp.py:304)], incoming_blocks=[152, 140])
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_2 = iternext(value=closure__locals___listcomp__v2__vphi6_1)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v2__v6for_iter_2)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: one = const(int, 1)
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: next_index = index.3 + one
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: index.2 = next_index
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v2__v6for_iter_4, 152, 154
2025-06-18 10:06:37,152 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 152
2025-06-18 10:06:37,152 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,152 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v2__v12load_attr_4 = getattr(value=closure__locals___listcomp__v2__v10load_global_3, attr=nan)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: array[index.2] = closure__locals___listcomp__v2__v12load_attr_4
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,153 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:37,153 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: $102call_method.8 = array
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: $104return_value.9 = cast(value=$102call_method.8)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: return $104return_value.9
2025-06-18 10:06:37,153 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,153 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: index.1.2 = phi(incoming_values=[Var(index.1, interp.py:299), Var(index.1.1, interp.py:299)], incoming_blocks=[34, 86])
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_2 = iternext(value=closure__locals___listcomp__v3__vphi6_1)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_3 = pair_first(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v6for_iter_4 = pair_second(value=closure__locals___listcomp__v3__v6for_iter_2)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: one.1 = const(int, 1)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: next_index.1 = index.1.2 + one.1
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: index.1.1 = next_index.1
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: branch closure__locals___listcomp__v3__v6for_iter_4, 86, 455
2025-06-18 10:06:37,153 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 86
2025-06-18 10:06:37,153 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v10load_global_3 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: closure__locals___listcomp__v3__v12load_attr_4 = getattr(value=closure__locals___listcomp__v3__v10load_global_3, attr=nan)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: array.1[index.1.1] = closure__locals___listcomp__v3__v12load_attr_4
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: jump 54
2025-06-18 10:06:37,153 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 455
2025-06-18 10:06:37,153 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bce75600>
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: $50call_method.8 = array.1
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: $52return_value.9 = cast(value=$50call_method.8)
2025-06-18 10:06:37,153 - DEBUG - ssa.py:209 - on stmt: return $52return_value.9
2025-06-18 10:06:37,167 - DEBUG - typeinfer.py:164 - captured error
Traceback (most recent call last):
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 780, in __call__
    self._refine_target_type(typeinfer, targetty, idxty, valty, sig)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 741, in _refine_target_type
    typeinfer.add_type(self.target.name, sig.args[0], loc=self.loc)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 1088, in add_type
    self.propagate_refined_type(var, unified)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 1104, in propagate_refined_type
    source_constraint.refine(self, updated_type)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 680, in refine
    raise TypingError(m.format(self.func, updated_type))
numba.core.errors.TypingError: no type refinement implemented for function empty_func.1 updating to array(float64, 1d, C)
During: typing of setitem at /home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py (299)
2025-06-18 10:06:37,169 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=146)
           2	LOAD_GLOBAL(arg=0, lineno=149)
           4	LOAD_FAST(arg=4, lineno=149)
           6	CALL_FUNCTION(arg=1, lineno=149)
           8	STORE_FAST(arg=8, lineno=149)
          10	LOAD_GLOBAL(arg=0, lineno=150)
          12	LOAD_FAST(arg=5, lineno=150)
          14	CALL_FUNCTION(arg=1, lineno=150)
          16	STORE_FAST(arg=9, lineno=150)
          18	LOAD_GLOBAL(arg=0, lineno=151)
          20	LOAD_FAST(arg=6, lineno=151)
          22	CALL_FUNCTION(arg=1, lineno=151)
          24	STORE_FAST(arg=10, lineno=151)
          26	LOAD_GLOBAL(arg=0, lineno=152)
          28	LOAD_FAST(arg=7, lineno=152)
          30	CALL_FUNCTION(arg=1, lineno=152)
          32	STORE_FAST(arg=11, lineno=152)
          34	LOAD_GLOBAL(arg=1, lineno=154)
          36	LOAD_ATTR(arg=2, lineno=154)
          38	LOAD_CONST(arg=1, lineno=154)
          40	LOAD_GLOBAL(arg=3, lineno=154)
          42	LOAD_ATTR(arg=4, lineno=154)
          44	LOAD_CONST(arg=2, lineno=154)
          46	CALL_FUNCTION_KW(arg=2, lineno=154)
          48	STORE_FAST(arg=12, lineno=154)
          50	LOAD_GLOBAL(arg=1, lineno=155)
          52	LOAD_ATTR(arg=2, lineno=155)
          54	LOAD_CONST(arg=1, lineno=155)
          56	LOAD_GLOBAL(arg=3, lineno=155)
          58	LOAD_ATTR(arg=5, lineno=155)
          60	LOAD_CONST(arg=2, lineno=155)
          62	CALL_FUNCTION_KW(arg=2, lineno=155)
          64	STORE_FAST(arg=13, lineno=155)
          66	LOAD_FAST(arg=0, lineno=158)
          68	LOAD_FAST(arg=4, lineno=158)
          70	LOAD_CONST(arg=3, lineno=158)
          72	BINARY_SUBSCR(arg=None, lineno=158)
          74	COMPARE_OP(arg=0, lineno=158)
          76	POP_JUMP_IF_TRUE(arg=90, lineno=158)
          78	LOAD_FAST(arg=0, lineno=159)
          80	LOAD_FAST(arg=4, lineno=159)
          82	LOAD_FAST(arg=8, lineno=159)
          84	LOAD_CONST(arg=4, lineno=159)
          86	BINARY_SUBTRACT(arg=None, lineno=159)
          88	BINARY_SUBSCR(arg=None, lineno=159)
          90	COMPARE_OP(arg=4, lineno=159)
          92	POP_JUMP_IF_TRUE(arg=90, lineno=159)
          94	LOAD_FAST(arg=1, lineno=160)
          96	LOAD_FAST(arg=5, lineno=160)
          98	LOAD_CONST(arg=3, lineno=160)
         100	BINARY_SUBSCR(arg=None, lineno=160)
         102	COMPARE_OP(arg=0, lineno=160)
         104	POP_JUMP_IF_TRUE(arg=90, lineno=160)
         106	LOAD_FAST(arg=1, lineno=161)
         108	LOAD_FAST(arg=5, lineno=161)
         110	LOAD_FAST(arg=9, lineno=161)
         112	LOAD_CONST(arg=4, lineno=161)
         114	BINARY_SUBTRACT(arg=None, lineno=161)
         116	BINARY_SUBSCR(arg=None, lineno=161)
         118	COMPARE_OP(arg=4, lineno=161)
         120	POP_JUMP_IF_TRUE(arg=90, lineno=161)
         122	LOAD_FAST(arg=2, lineno=162)
         124	LOAD_FAST(arg=6, lineno=162)
         126	LOAD_CONST(arg=3, lineno=162)
         128	BINARY_SUBSCR(arg=None, lineno=162)
         130	COMPARE_OP(arg=0, lineno=162)
         132	POP_JUMP_IF_TRUE(arg=90, lineno=162)
         134	LOAD_FAST(arg=2, lineno=163)
         136	LOAD_FAST(arg=6, lineno=163)
         138	LOAD_FAST(arg=10, lineno=163)
         140	LOAD_CONST(arg=4, lineno=163)
         142	BINARY_SUBTRACT(arg=None, lineno=163)
         144	BINARY_SUBSCR(arg=None, lineno=163)
         146	COMPARE_OP(arg=4, lineno=163)
         148	POP_JUMP_IF_TRUE(arg=90, lineno=163)
         150	LOAD_FAST(arg=3, lineno=164)
         152	LOAD_FAST(arg=7, lineno=164)
         154	LOAD_CONST(arg=3, lineno=164)
         156	BINARY_SUBSCR(arg=None, lineno=164)
         158	COMPARE_OP(arg=0, lineno=164)
         160	POP_JUMP_IF_TRUE(arg=90, lineno=164)
         162	LOAD_FAST(arg=3, lineno=165)
         164	LOAD_FAST(arg=7, lineno=165)
         166	LOAD_FAST(arg=11, lineno=165)
         168	LOAD_CONST(arg=4, lineno=165)
         170	BINARY_SUBTRACT(arg=None, lineno=165)
         172	BINARY_SUBSCR(arg=None, lineno=165)
         174	COMPARE_OP(arg=4, lineno=165)
         176	POP_JUMP_IF_FALSE(arg=95, lineno=165)
>        178	LOAD_FAST(arg=12, lineno=167)
         180	LOAD_FAST(arg=13, lineno=167)
         182	LOAD_CONST(arg=5, lineno=167)
         184	BUILD_TUPLE(arg=3, lineno=167)
         186	RETURN_VALUE(arg=None, lineno=167)
>        188	LOAD_GLOBAL(arg=6, lineno=169)
         190	LOAD_FAST(arg=4, lineno=169)
         192	LOAD_FAST(arg=0, lineno=169)
         194	CALL_FUNCTION(arg=2, lineno=169)
         196	UNPACK_SEQUENCE(arg=2, lineno=169)
         198	STORE_FAST(arg=14, lineno=169)
         200	STORE_FAST(arg=15, lineno=169)
         202	LOAD_FAST(arg=15, lineno=170)
         204	POP_JUMP_IF_FALSE(arg=113, lineno=170)
         206	LOAD_FAST(arg=14, lineno=171)
         208	LOAD_FAST(arg=12, lineno=171)
         210	LOAD_CONST(arg=3, lineno=171)
         212	STORE_SUBSCR(arg=None, lineno=171)
         214	LOAD_CONST(arg=3, lineno=172)
         216	LOAD_FAST(arg=13, lineno=172)
         218	LOAD_CONST(arg=3, lineno=172)
         220	STORE_SUBSCR(arg=None, lineno=172)
         222	JUMP_FORWARD(arg=24, lineno=172)
>        224	LOAD_FAST(arg=14, lineno=174)
         226	LOAD_CONST(arg=4, lineno=174)
         228	BINARY_SUBTRACT(arg=None, lineno=174)
         230	LOAD_FAST(arg=12, lineno=174)
         232	LOAD_CONST(arg=3, lineno=174)
         234	STORE_SUBSCR(arg=None, lineno=174)
         236	LOAD_FAST(arg=4, lineno=175)
         238	LOAD_FAST(arg=14, lineno=175)
         240	LOAD_CONST(arg=4, lineno=175)
         242	BINARY_SUBTRACT(arg=None, lineno=175)
         244	BINARY_SUBSCR(arg=None, lineno=175)
         246	STORE_FAST(arg=16, lineno=175)
         248	LOAD_FAST(arg=0, lineno=176)
         250	LOAD_FAST(arg=16, lineno=176)
         252	BINARY_SUBTRACT(arg=None, lineno=176)
         254	LOAD_FAST(arg=4, lineno=176)
         256	LOAD_FAST(arg=14, lineno=176)
         258	BINARY_SUBSCR(arg=None, lineno=176)
         260	LOAD_FAST(arg=16, lineno=176)
         262	BINARY_SUBTRACT(arg=None, lineno=176)
         264	BINARY_TRUE_DIVIDE(arg=None, lineno=176)
         266	LOAD_FAST(arg=13, lineno=176)
         268	LOAD_CONST(arg=3, lineno=176)
         270	STORE_SUBSCR(arg=None, lineno=176)
>        272	LOAD_GLOBAL(arg=6, lineno=178)
         274	LOAD_FAST(arg=5, lineno=178)
         276	LOAD_FAST(arg=1, lineno=178)
         278	CALL_FUNCTION(arg=2, lineno=178)
         280	UNPACK_SEQUENCE(arg=2, lineno=178)
         282	STORE_FAST(arg=14, lineno=178)
         284	STORE_FAST(arg=15, lineno=178)
         286	LOAD_FAST(arg=15, lineno=179)
         288	POP_JUMP_IF_FALSE(arg=155, lineno=179)
         290	LOAD_FAST(arg=14, lineno=180)
         292	LOAD_FAST(arg=12, lineno=180)
         294	LOAD_CONST(arg=4, lineno=180)
         296	STORE_SUBSCR(arg=None, lineno=180)
         298	LOAD_CONST(arg=3, lineno=181)
         300	LOAD_FAST(arg=13, lineno=181)
         302	LOAD_CONST(arg=4, lineno=181)
         304	STORE_SUBSCR(arg=None, lineno=181)
         306	JUMP_FORWARD(arg=24, lineno=181)
>        308	LOAD_FAST(arg=14, lineno=183)
         310	LOAD_CONST(arg=4, lineno=183)
         312	BINARY_SUBTRACT(arg=None, lineno=183)
         314	LOAD_FAST(arg=12, lineno=183)
         316	LOAD_CONST(arg=4, lineno=183)
         318	STORE_SUBSCR(arg=None, lineno=183)
         320	LOAD_FAST(arg=5, lineno=184)
         322	LOAD_FAST(arg=14, lineno=184)
         324	LOAD_CONST(arg=4, lineno=184)
         326	BINARY_SUBTRACT(arg=None, lineno=184)
         328	BINARY_SUBSCR(arg=None, lineno=184)
         330	STORE_FAST(arg=16, lineno=184)
         332	LOAD_FAST(arg=1, lineno=185)
         334	LOAD_FAST(arg=16, lineno=185)
         336	BINARY_SUBTRACT(arg=None, lineno=185)
         338	LOAD_FAST(arg=5, lineno=185)
         340	LOAD_FAST(arg=14, lineno=185)
         342	BINARY_SUBSCR(arg=None, lineno=185)
         344	LOAD_FAST(arg=16, lineno=185)
         346	BINARY_SUBTRACT(arg=None, lineno=185)
         348	BINARY_TRUE_DIVIDE(arg=None, lineno=185)
         350	LOAD_FAST(arg=13, lineno=185)
         352	LOAD_CONST(arg=4, lineno=185)
         354	STORE_SUBSCR(arg=None, lineno=185)
>        356	LOAD_GLOBAL(arg=6, lineno=187)
         358	LOAD_FAST(arg=6, lineno=187)
         360	LOAD_FAST(arg=2, lineno=187)
         362	CALL_FUNCTION(arg=2, lineno=187)
         364	UNPACK_SEQUENCE(arg=2, lineno=187)
         366	STORE_FAST(arg=14, lineno=187)
         368	STORE_FAST(arg=15, lineno=187)
         370	LOAD_FAST(arg=15, lineno=188)
         372	POP_JUMP_IF_FALSE(arg=197, lineno=188)
         374	LOAD_FAST(arg=14, lineno=189)
         376	LOAD_FAST(arg=12, lineno=189)
         378	LOAD_CONST(arg=6, lineno=189)
         380	STORE_SUBSCR(arg=None, lineno=189)
         382	LOAD_CONST(arg=3, lineno=190)
         384	LOAD_FAST(arg=13, lineno=190)
         386	LOAD_CONST(arg=6, lineno=190)
         388	STORE_SUBSCR(arg=None, lineno=190)
         390	JUMP_FORWARD(arg=24, lineno=190)
>        392	LOAD_FAST(arg=14, lineno=192)
         394	LOAD_CONST(arg=4, lineno=192)
         396	BINARY_SUBTRACT(arg=None, lineno=192)
         398	LOAD_FAST(arg=12, lineno=192)
         400	LOAD_CONST(arg=6, lineno=192)
         402	STORE_SUBSCR(arg=None, lineno=192)
         404	LOAD_FAST(arg=6, lineno=193)
         406	LOAD_FAST(arg=14, lineno=193)
         408	LOAD_CONST(arg=4, lineno=193)
         410	BINARY_SUBTRACT(arg=None, lineno=193)
         412	BINARY_SUBSCR(arg=None, lineno=193)
         414	STORE_FAST(arg=16, lineno=193)
         416	LOAD_FAST(arg=2, lineno=194)
         418	LOAD_FAST(arg=16, lineno=194)
         420	BINARY_SUBTRACT(arg=None, lineno=194)
         422	LOAD_FAST(arg=6, lineno=194)
         424	LOAD_FAST(arg=14, lineno=194)
         426	BINARY_SUBSCR(arg=None, lineno=194)
         428	LOAD_FAST(arg=16, lineno=194)
         430	BINARY_SUBTRACT(arg=None, lineno=194)
         432	BINARY_TRUE_DIVIDE(arg=None, lineno=194)
         434	LOAD_FAST(arg=13, lineno=194)
         436	LOAD_CONST(arg=6, lineno=194)
         438	STORE_SUBSCR(arg=None, lineno=194)
>        440	LOAD_GLOBAL(arg=6, lineno=196)
         442	LOAD_FAST(arg=7, lineno=196)
         444	LOAD_FAST(arg=3, lineno=196)
         446	CALL_FUNCTION(arg=2, lineno=196)
         448	UNPACK_SEQUENCE(arg=2, lineno=196)
         450	STORE_FAST(arg=14, lineno=196)
         452	STORE_FAST(arg=15, lineno=196)
         454	LOAD_FAST(arg=15, lineno=197)
         456	POP_JUMP_IF_FALSE(arg=239, lineno=197)
         458	LOAD_FAST(arg=14, lineno=198)
         460	LOAD_FAST(arg=12, lineno=198)
         462	LOAD_CONST(arg=7, lineno=198)
         464	STORE_SUBSCR(arg=None, lineno=198)
         466	LOAD_CONST(arg=3, lineno=199)
         468	LOAD_FAST(arg=13, lineno=199)
         470	LOAD_CONST(arg=7, lineno=199)
         472	STORE_SUBSCR(arg=None, lineno=199)
         474	JUMP_FORWARD(arg=24, lineno=199)
>        476	LOAD_FAST(arg=14, lineno=201)
         478	LOAD_CONST(arg=4, lineno=201)
         480	BINARY_SUBTRACT(arg=None, lineno=201)
         482	LOAD_FAST(arg=12, lineno=201)
         484	LOAD_CONST(arg=7, lineno=201)
         486	STORE_SUBSCR(arg=None, lineno=201)
         488	LOAD_FAST(arg=7, lineno=202)
         490	LOAD_FAST(arg=14, lineno=202)
         492	LOAD_CONST(arg=4, lineno=202)
         494	BINARY_SUBTRACT(arg=None, lineno=202)
         496	BINARY_SUBSCR(arg=None, lineno=202)
         498	STORE_FAST(arg=16, lineno=202)
         500	LOAD_FAST(arg=3, lineno=203)
         502	LOAD_FAST(arg=16, lineno=203)
         504	BINARY_SUBTRACT(arg=None, lineno=203)
         506	LOAD_FAST(arg=7, lineno=203)
         508	LOAD_FAST(arg=14, lineno=203)
         510	BINARY_SUBSCR(arg=None, lineno=203)
         512	LOAD_FAST(arg=16, lineno=203)
         514	BINARY_SUBTRACT(arg=None, lineno=203)
         516	BINARY_TRUE_DIVIDE(arg=None, lineno=203)
         518	LOAD_FAST(arg=13, lineno=203)
         520	LOAD_CONST(arg=7, lineno=203)
         522	STORE_SUBSCR(arg=None, lineno=203)
>        524	LOAD_FAST(arg=12, lineno=205)
         526	LOAD_FAST(arg=13, lineno=205)
         528	LOAD_CONST(arg=8, lineno=205)
         530	BUILD_TUPLE(arg=3, lineno=205)
         532	RETURN_VALUE(arg=None, lineno=205)
2025-06-18 10:06:37,169 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,169 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,169 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=146)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=149)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=4, lineno=149)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=149)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$ii04.1']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=STORE_FAST(arg=8, lineno=149)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$6call_function.2']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=150)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_FAST(arg=5, lineno=150)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$10load_global.3']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=150)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$10load_global.3', '$ii112.4']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=STORE_FAST(arg=9, lineno=150)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$14call_function.5']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=151)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=LOAD_FAST(arg=6, lineno=151)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$18load_global.6']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=151)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$18load_global.6', '$ii220.7']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=STORE_FAST(arg=10, lineno=151)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$22call_function.8']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=LOAD_GLOBAL(arg=0, lineno=152)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=28, inst=LOAD_FAST(arg=7, lineno=152)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$26load_global.9']
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:341 - dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=152)
2025-06-18 10:06:37,170 - DEBUG - byteflow.py:342 - stack ['$26load_global.9', '$ii328.10']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=32, inst=STORE_FAST(arg=11, lineno=152)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$30call_function.11']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=34, inst=LOAD_GLOBAL(arg=1, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=36, inst=LOAD_ATTR(arg=2, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$34load_global.12']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$36load_attr.13']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$36load_attr.13', '$const38.14.1']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=42, inst=LOAD_ATTR(arg=4, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$36load_attr.13', '$const38.14.1', '$40load_global.15']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$36load_attr.13', '$const38.14.1', '$42load_attr.16']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=46, inst=CALL_FUNCTION_KW(arg=2, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$36load_attr.13', '$const38.14.1', '$42load_attr.16', '$const44.17.2']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=48, inst=STORE_FAST(arg=12, lineno=154)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$46call_function_kw.18']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=50, inst=LOAD_GLOBAL(arg=1, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=52, inst=LOAD_ATTR(arg=2, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$50load_global.19']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$52load_attr.20']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$52load_attr.20', '$const54.21.1']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=58, inst=LOAD_ATTR(arg=5, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$52load_attr.20', '$const54.21.1', '$56load_global.22']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$52load_attr.20', '$const54.21.1', '$58load_attr.23']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=62, inst=CALL_FUNCTION_KW(arg=2, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$52load_attr.20', '$const54.21.1', '$58load_attr.23', '$const60.24.2']
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:341 - dispatch pc=64, inst=STORE_FAST(arg=13, lineno=155)
2025-06-18 10:06:37,171 - DEBUG - byteflow.py:342 - stack ['$62call_function_kw.25']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x066.26']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x066.26', '$ii068.27']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x066.26', '$ii068.27', '$const70.28.3']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=74, inst=COMPARE_OP(arg=0, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x066.26', '$72binary_subscr.29']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=76, inst=POP_JUMP_IF_TRUE(arg=90, lineno=158)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$74compare_op.30']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=82, inst=LOAD_FAST(arg=8, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0', '$ii080.1']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0', '$ii080.1', '$n082.2']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=86, inst=BINARY_SUBTRACT(arg=None, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0', '$ii080.1', '$n082.2', '$const84.3.4']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0', '$ii080.1', '$86binary_subtract.4']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=90, inst=COMPARE_OP(arg=4, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$x078.0', '$88binary_subscr.5']
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:341 - dispatch pc=92, inst=POP_JUMP_IF_TRUE(arg=90, lineno=159)
2025-06-18 10:06:37,172 - DEBUG - byteflow.py:342 - stack ['$90compare_op.6']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=178, inst=LOAD_FAST(arg=12, lineno=167)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=180, inst=LOAD_FAST(arg=13, lineno=167)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$indices178.0']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=182, inst=LOAD_CONST(arg=5, lineno=167)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$indices178.0', '$norm_distances180.1']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=184, inst=BUILD_TUPLE(arg=3, lineno=167)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$indices178.0', '$norm_distances180.1', '$const182.2.5']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=167)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$184build_tuple.3']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=94, inst=LOAD_FAST(arg=1, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$x194.0']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=98, inst=LOAD_CONST(arg=3, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$x194.0', '$ii196.1']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=100, inst=BINARY_SUBSCR(arg=None, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$x194.0', '$ii196.1', '$const98.2.3']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=102, inst=COMPARE_OP(arg=0, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$x194.0', '$100binary_subscr.3']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:341 - dispatch pc=104, inst=POP_JUMP_IF_TRUE(arg=90, lineno=160)
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:342 - stack ['$102compare_op.4']
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,173 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=106, inst=LOAD_FAST(arg=1, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=108, inst=LOAD_FAST(arg=5, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=110, inst=LOAD_FAST(arg=9, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0', '$ii1108.1']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0', '$ii1108.1', '$n1110.2']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=114, inst=BINARY_SUBTRACT(arg=None, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0', '$ii1108.1', '$n1110.2', '$const112.3.4']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=116, inst=BINARY_SUBSCR(arg=None, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0', '$ii1108.1', '$114binary_subtract.4']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=118, inst=COMPARE_OP(arg=4, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x1106.0', '$116binary_subscr.5']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=120, inst=POP_JUMP_IF_TRUE(arg=90, lineno=161)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$118compare_op.6']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=122, inst=LOAD_FAST(arg=2, lineno=162)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=124, inst=LOAD_FAST(arg=6, lineno=162)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x2122.0']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=126, inst=LOAD_CONST(arg=3, lineno=162)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x2122.0', '$ii2124.1']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=162)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x2122.0', '$ii2124.1', '$const126.2.3']
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:341 - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=162)
2025-06-18 10:06:37,174 - DEBUG - byteflow.py:342 - stack ['$x2122.0', '$128binary_subscr.3']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=132, inst=POP_JUMP_IF_TRUE(arg=90, lineno=162)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$130compare_op.4']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=134, inst=LOAD_FAST(arg=2, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=136, inst=LOAD_FAST(arg=6, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=138, inst=LOAD_FAST(arg=10, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0', '$ii2136.1']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=140, inst=LOAD_CONST(arg=4, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0', '$ii2136.1', '$n2138.2']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=142, inst=BINARY_SUBTRACT(arg=None, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0', '$ii2136.1', '$n2138.2', '$const140.3.4']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0', '$ii2136.1', '$142binary_subtract.4']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=146, inst=COMPARE_OP(arg=4, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x2134.0', '$144binary_subscr.5']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=148, inst=POP_JUMP_IF_TRUE(arg=90, lineno=163)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$146compare_op.6']
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=150 nstack_initial=0)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=164)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:341 - dispatch pc=152, inst=LOAD_FAST(arg=7, lineno=164)
2025-06-18 10:06:37,175 - DEBUG - byteflow.py:342 - stack ['$x3150.0']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=154, inst=LOAD_CONST(arg=3, lineno=164)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3150.0', '$ii3152.1']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=164)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3150.0', '$ii3152.1', '$const154.2.3']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=158, inst=COMPARE_OP(arg=0, lineno=164)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3150.0', '$156binary_subscr.3']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=160, inst=POP_JUMP_IF_TRUE(arg=90, lineno=164)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$158compare_op.4']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=162 nstack_initial=0)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=164, inst=LOAD_FAST(arg=7, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=166, inst=LOAD_FAST(arg=11, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0', '$ii3164.1']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=168, inst=LOAD_CONST(arg=4, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0', '$ii3164.1', '$n3166.2']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=170, inst=BINARY_SUBTRACT(arg=None, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0', '$ii3164.1', '$n3166.2', '$const168.3.4']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0', '$ii3164.1', '$170binary_subtract.4']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=174, inst=COMPARE_OP(arg=4, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$x3162.0', '$172binary_subscr.5']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:341 - dispatch pc=176, inst=POP_JUMP_IF_FALSE(arg=95, lineno=165)
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:342 - stack ['$174compare_op.6']
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=188, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
2025-06-18 10:06:37,176 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=188 nstack_initial=0)])
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=188, inst=LOAD_GLOBAL(arg=6, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$188load_global.0']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$188load_global.0', '$ii0190.1']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=194, inst=CALL_FUNCTION(arg=2, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$188load_global.0', '$ii0190.1', '$x0192.2']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=196, inst=UNPACK_SEQUENCE(arg=2, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$194call_function.3']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=198, inst=STORE_FAST(arg=14, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$196unpack_sequence.5', '$196unpack_sequence.4']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=200, inst=STORE_FAST(arg=15, lineno=169)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$196unpack_sequence.5']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=202, inst=LOAD_FAST(arg=15, lineno=170)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=204, inst=POP_JUMP_IF_FALSE(arg=113, lineno=170)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$eq202.7']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=206, stack=(), blockstack=(), npush=0), Edge(pc=224, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=224 nstack_initial=0)])
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=206 nstack_initial=0)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=206, inst=LOAD_FAST(arg=14, lineno=171)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=208, inst=LOAD_FAST(arg=12, lineno=171)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$ix206.0']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=210, inst=LOAD_CONST(arg=3, lineno=171)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$ix206.0', '$indices208.1']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=212, inst=STORE_SUBSCR(arg=None, lineno=171)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack ['$ix206.0', '$indices208.1', '$const210.2.3']
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:341 - dispatch pc=214, inst=LOAD_CONST(arg=3, lineno=172)
2025-06-18 10:06:37,177 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=172)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$const214.3.3']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=218, inst=LOAD_CONST(arg=3, lineno=172)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$const214.3.3', '$norm_distances216.4']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=220, inst=STORE_SUBSCR(arg=None, lineno=172)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$const214.3.3', '$norm_distances216.4', '$const218.5.3']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=222, inst=JUMP_FORWARD(arg=24, lineno=172)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=272, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=224 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=224 nstack_initial=0)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=224, inst=LOAD_FAST(arg=14, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=226, inst=LOAD_CONST(arg=4, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ix224.0']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=228, inst=BINARY_SUBTRACT(arg=None, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ix224.0', '$const226.1.4']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=230, inst=LOAD_FAST(arg=12, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$228binary_subtract.2']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=232, inst=LOAD_CONST(arg=3, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$228binary_subtract.2', '$indices230.3']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=234, inst=STORE_SUBSCR(arg=None, lineno=174)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$228binary_subtract.2', '$indices230.3', '$const232.4.3']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=236, inst=LOAD_FAST(arg=4, lineno=175)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=238, inst=LOAD_FAST(arg=14, lineno=175)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ii0236.5']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=240, inst=LOAD_CONST(arg=4, lineno=175)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ii0236.5', '$ix238.6']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=242, inst=BINARY_SUBTRACT(arg=None, lineno=175)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ii0236.5', '$ix238.6', '$const240.7.4']
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:341 - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=175)
2025-06-18 10:06:37,178 - DEBUG - byteflow.py:342 - stack ['$ii0236.5', '$242binary_subtract.8']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=246, inst=STORE_FAST(arg=16, lineno=175)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$244binary_subscr.9']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=248, inst=LOAD_FAST(arg=0, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=250, inst=LOAD_FAST(arg=16, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$x0248.10']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=252, inst=BINARY_SUBTRACT(arg=None, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$x0248.10', '$c0250.11']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=254, inst=LOAD_FAST(arg=4, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=256, inst=LOAD_FAST(arg=14, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12', '$ii0254.13']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12', '$ii0254.13', '$ix256.14']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=260, inst=LOAD_FAST(arg=16, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12', '$258binary_subscr.15']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12', '$258binary_subscr.15', '$c0260.16']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=264, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$252binary_subtract.12', '$262binary_subtract.17']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=266, inst=LOAD_FAST(arg=13, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$264binary_true_divide.18']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=268, inst=LOAD_CONST(arg=3, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$264binary_true_divide.18', '$norm_distances266.19']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=270, inst=STORE_SUBSCR(arg=None, lineno=176)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack ['$264binary_true_divide.18', '$norm_distances266.19', '$const268.20.3']
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=272, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=272 nstack_initial=0)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=272, inst=LOAD_GLOBAL(arg=6, lineno=178)
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,179 - DEBUG - byteflow.py:341 - dispatch pc=274, inst=LOAD_FAST(arg=5, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$272load_global.0']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=276, inst=LOAD_FAST(arg=1, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$272load_global.0', '$ii1274.1']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=278, inst=CALL_FUNCTION(arg=2, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$272load_global.0', '$ii1274.1', '$x1276.2']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=280, inst=UNPACK_SEQUENCE(arg=2, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$278call_function.3']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=282, inst=STORE_FAST(arg=14, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$280unpack_sequence.5', '$280unpack_sequence.4']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=284, inst=STORE_FAST(arg=15, lineno=178)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$280unpack_sequence.5']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=286, inst=LOAD_FAST(arg=15, lineno=179)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=288, inst=POP_JUMP_IF_FALSE(arg=155, lineno=179)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$eq286.7']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=290, stack=(), blockstack=(), npush=0), Edge(pc=308, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=290 nstack_initial=0), State(pc_initial=308 nstack_initial=0)])
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=290 nstack_initial=0), State(pc_initial=308 nstack_initial=0)])
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=290 nstack_initial=0)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=290, inst=LOAD_FAST(arg=14, lineno=180)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=292, inst=LOAD_FAST(arg=12, lineno=180)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$ix290.0']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=294, inst=LOAD_CONST(arg=4, lineno=180)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$ix290.0', '$indices292.1']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=296, inst=STORE_SUBSCR(arg=None, lineno=180)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$ix290.0', '$indices292.1', '$const294.2.4']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=298, inst=LOAD_CONST(arg=3, lineno=181)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=300, inst=LOAD_FAST(arg=13, lineno=181)
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:342 - stack ['$const298.3.3']
2025-06-18 10:06:37,180 - DEBUG - byteflow.py:341 - dispatch pc=302, inst=LOAD_CONST(arg=4, lineno=181)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$const298.3.3', '$norm_distances300.4']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=304, inst=STORE_SUBSCR(arg=None, lineno=181)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$const298.3.3', '$norm_distances300.4', '$const302.5.4']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=306, inst=JUMP_FORWARD(arg=24, lineno=181)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=356, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=308 nstack_initial=0), State(pc_initial=356 nstack_initial=0)])
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=308 nstack_initial=0)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=308, inst=LOAD_FAST(arg=14, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=310, inst=LOAD_CONST(arg=4, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ix308.0']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=312, inst=BINARY_SUBTRACT(arg=None, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ix308.0', '$const310.1.4']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=314, inst=LOAD_FAST(arg=12, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$312binary_subtract.2']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=316, inst=LOAD_CONST(arg=4, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$312binary_subtract.2', '$indices314.3']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=318, inst=STORE_SUBSCR(arg=None, lineno=183)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$312binary_subtract.2', '$indices314.3', '$const316.4.4']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=320, inst=LOAD_FAST(arg=5, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=322, inst=LOAD_FAST(arg=14, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ii1320.5']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=324, inst=LOAD_CONST(arg=4, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ii1320.5', '$ix322.6']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ii1320.5', '$ix322.6', '$const324.7.4']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$ii1320.5', '$326binary_subtract.8']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=330, inst=STORE_FAST(arg=16, lineno=184)
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:342 - stack ['$328binary_subscr.9']
2025-06-18 10:06:37,181 - DEBUG - byteflow.py:341 - dispatch pc=332, inst=LOAD_FAST(arg=1, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=334, inst=LOAD_FAST(arg=16, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$x1332.10']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=336, inst=BINARY_SUBTRACT(arg=None, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$x1332.10', '$c0334.11']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=338, inst=LOAD_FAST(arg=5, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=340, inst=LOAD_FAST(arg=14, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12', '$ii1338.13']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=342, inst=BINARY_SUBSCR(arg=None, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12', '$ii1338.13', '$ix340.14']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=344, inst=LOAD_FAST(arg=16, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12', '$342binary_subscr.15']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=346, inst=BINARY_SUBTRACT(arg=None, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12', '$342binary_subscr.15', '$c0344.16']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=348, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$336binary_subtract.12', '$346binary_subtract.17']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=350, inst=LOAD_FAST(arg=13, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$348binary_true_divide.18']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=352, inst=LOAD_CONST(arg=4, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$348binary_true_divide.18', '$norm_distances350.19']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=354, inst=STORE_SUBSCR(arg=None, lineno=185)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$348binary_true_divide.18', '$norm_distances350.19', '$const352.20.4']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=356, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=356 nstack_initial=0), State(pc_initial=356 nstack_initial=0)])
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=356 nstack_initial=0)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=356, inst=LOAD_GLOBAL(arg=6, lineno=187)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=358, inst=LOAD_FAST(arg=6, lineno=187)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$356load_global.0']
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:341 - dispatch pc=360, inst=LOAD_FAST(arg=2, lineno=187)
2025-06-18 10:06:37,182 - DEBUG - byteflow.py:342 - stack ['$356load_global.0', '$ii2358.1']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=362, inst=CALL_FUNCTION(arg=2, lineno=187)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$356load_global.0', '$ii2358.1', '$x2360.2']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=364, inst=UNPACK_SEQUENCE(arg=2, lineno=187)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$362call_function.3']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=366, inst=STORE_FAST(arg=14, lineno=187)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$364unpack_sequence.5', '$364unpack_sequence.4']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=368, inst=STORE_FAST(arg=15, lineno=187)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$364unpack_sequence.5']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=370, inst=LOAD_FAST(arg=15, lineno=188)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=372, inst=POP_JUMP_IF_FALSE(arg=197, lineno=188)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$eq370.7']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=374, stack=(), blockstack=(), npush=0), Edge(pc=392, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=356 nstack_initial=0), State(pc_initial=374 nstack_initial=0), State(pc_initial=392 nstack_initial=0)])
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=374 nstack_initial=0), State(pc_initial=392 nstack_initial=0)])
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=374 nstack_initial=0)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=374, inst=LOAD_FAST(arg=14, lineno=189)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=376, inst=LOAD_FAST(arg=12, lineno=189)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$ix374.0']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=378, inst=LOAD_CONST(arg=6, lineno=189)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$ix374.0', '$indices376.1']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=380, inst=STORE_SUBSCR(arg=None, lineno=189)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$ix374.0', '$indices376.1', '$const378.2.6']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=382, inst=LOAD_CONST(arg=3, lineno=190)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=384, inst=LOAD_FAST(arg=13, lineno=190)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$const382.3.3']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=386, inst=LOAD_CONST(arg=6, lineno=190)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$const382.3.3', '$norm_distances384.4']
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:341 - dispatch pc=388, inst=STORE_SUBSCR(arg=None, lineno=190)
2025-06-18 10:06:37,183 - DEBUG - byteflow.py:342 - stack ['$const382.3.3', '$norm_distances384.4', '$const386.5.6']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=390, inst=JUMP_FORWARD(arg=24, lineno=190)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=440, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=392 nstack_initial=0), State(pc_initial=440 nstack_initial=0)])
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=392 nstack_initial=0)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=392, inst=LOAD_FAST(arg=14, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=394, inst=LOAD_CONST(arg=4, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ix392.0']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=396, inst=BINARY_SUBTRACT(arg=None, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ix392.0', '$const394.1.4']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=398, inst=LOAD_FAST(arg=12, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$396binary_subtract.2']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=400, inst=LOAD_CONST(arg=6, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$396binary_subtract.2', '$indices398.3']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=402, inst=STORE_SUBSCR(arg=None, lineno=192)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$396binary_subtract.2', '$indices398.3', '$const400.4.6']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=404, inst=LOAD_FAST(arg=6, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=406, inst=LOAD_FAST(arg=14, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ii2404.5']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=408, inst=LOAD_CONST(arg=4, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ii2404.5', '$ix406.6']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=410, inst=BINARY_SUBTRACT(arg=None, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ii2404.5', '$ix406.6', '$const408.7.4']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=412, inst=BINARY_SUBSCR(arg=None, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$ii2404.5', '$410binary_subtract.8']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=414, inst=STORE_FAST(arg=16, lineno=193)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$412binary_subscr.9']
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=416, inst=LOAD_FAST(arg=2, lineno=194)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:341 - dispatch pc=418, inst=LOAD_FAST(arg=16, lineno=194)
2025-06-18 10:06:37,184 - DEBUG - byteflow.py:342 - stack ['$x2416.10']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=420, inst=BINARY_SUBTRACT(arg=None, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$x2416.10', '$c0418.11']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=422, inst=LOAD_FAST(arg=6, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=424, inst=LOAD_FAST(arg=14, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12', '$ii2422.13']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=426, inst=BINARY_SUBSCR(arg=None, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12', '$ii2422.13', '$ix424.14']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=428, inst=LOAD_FAST(arg=16, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12', '$426binary_subscr.15']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=430, inst=BINARY_SUBTRACT(arg=None, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12', '$426binary_subscr.15', '$c0428.16']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=432, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$420binary_subtract.12', '$430binary_subtract.17']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=434, inst=LOAD_FAST(arg=13, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$432binary_true_divide.18']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=436, inst=LOAD_CONST(arg=6, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$432binary_true_divide.18', '$norm_distances434.19']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=438, inst=STORE_SUBSCR(arg=None, lineno=194)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$432binary_true_divide.18', '$norm_distances434.19', '$const436.20.6']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=440, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=440 nstack_initial=0), State(pc_initial=440 nstack_initial=0)])
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=440 nstack_initial=0)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=440, inst=LOAD_GLOBAL(arg=6, lineno=196)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=442, inst=LOAD_FAST(arg=7, lineno=196)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$440load_global.0']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=444, inst=LOAD_FAST(arg=3, lineno=196)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$440load_global.0', '$ii3442.1']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=446, inst=CALL_FUNCTION(arg=2, lineno=196)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$440load_global.0', '$ii3442.1', '$x3444.2']
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:341 - dispatch pc=448, inst=UNPACK_SEQUENCE(arg=2, lineno=196)
2025-06-18 10:06:37,185 - DEBUG - byteflow.py:342 - stack ['$446call_function.3']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=450, inst=STORE_FAST(arg=14, lineno=196)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$448unpack_sequence.5', '$448unpack_sequence.4']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=452, inst=STORE_FAST(arg=15, lineno=196)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$448unpack_sequence.5']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=454, inst=LOAD_FAST(arg=15, lineno=197)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=456, inst=POP_JUMP_IF_FALSE(arg=239, lineno=197)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$eq454.7']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=458, stack=(), blockstack=(), npush=0), Edge(pc=476, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=440 nstack_initial=0), State(pc_initial=458 nstack_initial=0), State(pc_initial=476 nstack_initial=0)])
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=458 nstack_initial=0), State(pc_initial=476 nstack_initial=0)])
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=458 nstack_initial=0)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=458, inst=LOAD_FAST(arg=14, lineno=198)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=460, inst=LOAD_FAST(arg=12, lineno=198)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$ix458.0']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=462, inst=LOAD_CONST(arg=7, lineno=198)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$ix458.0', '$indices460.1']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=464, inst=STORE_SUBSCR(arg=None, lineno=198)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$ix458.0', '$indices460.1', '$const462.2.7']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=466, inst=LOAD_CONST(arg=3, lineno=199)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=468, inst=LOAD_FAST(arg=13, lineno=199)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$const466.3.3']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=470, inst=LOAD_CONST(arg=7, lineno=199)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$const466.3.3', '$norm_distances468.4']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=472, inst=STORE_SUBSCR(arg=None, lineno=199)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack ['$const466.3.3', '$norm_distances468.4', '$const470.5.7']
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:341 - dispatch pc=474, inst=JUMP_FORWARD(arg=24, lineno=199)
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=524, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,186 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=524 nstack_initial=0)])
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=476 nstack_initial=0)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=476, inst=LOAD_FAST(arg=14, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=478, inst=LOAD_CONST(arg=4, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ix476.0']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=480, inst=BINARY_SUBTRACT(arg=None, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ix476.0', '$const478.1.4']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=482, inst=LOAD_FAST(arg=12, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$480binary_subtract.2']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=484, inst=LOAD_CONST(arg=7, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$480binary_subtract.2', '$indices482.3']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=486, inst=STORE_SUBSCR(arg=None, lineno=201)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$480binary_subtract.2', '$indices482.3', '$const484.4.7']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=488, inst=LOAD_FAST(arg=7, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=490, inst=LOAD_FAST(arg=14, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ii3488.5']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=492, inst=LOAD_CONST(arg=4, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ii3488.5', '$ix490.6']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=494, inst=BINARY_SUBTRACT(arg=None, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ii3488.5', '$ix490.6', '$const492.7.4']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=496, inst=BINARY_SUBSCR(arg=None, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$ii3488.5', '$494binary_subtract.8']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=498, inst=STORE_FAST(arg=16, lineno=202)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$496binary_subscr.9']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=500, inst=LOAD_FAST(arg=3, lineno=203)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=502, inst=LOAD_FAST(arg=16, lineno=203)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$x3500.10']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=504, inst=BINARY_SUBTRACT(arg=None, lineno=203)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$x3500.10', '$c0502.11']
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:341 - dispatch pc=506, inst=LOAD_FAST(arg=7, lineno=203)
2025-06-18 10:06:37,187 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=508, inst=LOAD_FAST(arg=14, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12', '$ii3506.13']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=510, inst=BINARY_SUBSCR(arg=None, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12', '$ii3506.13', '$ix508.14']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=512, inst=LOAD_FAST(arg=16, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12', '$510binary_subscr.15']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=514, inst=BINARY_SUBTRACT(arg=None, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12', '$510binary_subscr.15', '$c0512.16']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=516, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$504binary_subtract.12', '$514binary_subtract.17']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=518, inst=LOAD_FAST(arg=13, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$516binary_true_divide.18']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=520, inst=LOAD_CONST(arg=7, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$516binary_true_divide.18', '$norm_distances518.19']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=522, inst=STORE_SUBSCR(arg=None, lineno=203)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$516binary_true_divide.18', '$norm_distances518.19', '$const520.20.7']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=524, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=524 nstack_initial=0), State(pc_initial=524 nstack_initial=0)])
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=524 nstack_initial=0)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=524, inst=LOAD_FAST(arg=12, lineno=205)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=526, inst=LOAD_FAST(arg=13, lineno=205)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$indices524.0']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=528, inst=LOAD_CONST(arg=8, lineno=205)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$indices524.0', '$norm_distances526.1']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=530, inst=BUILD_TUPLE(arg=3, lineno=205)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$indices524.0', '$norm_distances526.1', '$const528.2.8']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:341 - dispatch pc=532, inst=RETURN_VALUE(arg=None, lineno=205)
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:342 - stack ['$530build_tuple.3']
2025-06-18 10:06:37,188 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=524 nstack_initial=0)])
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=290 nstack_initial=0): set(),
             State(pc_initial=308 nstack_initial=0): set(),
             State(pc_initial=356 nstack_initial=0): set(),
             State(pc_initial=374 nstack_initial=0): set(),
             State(pc_initial=392 nstack_initial=0): set(),
             State(pc_initial=440 nstack_initial=0): set(),
             State(pc_initial=458 nstack_initial=0): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=524 nstack_initial=0): set()})
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ii04.1'}), (6, {'func': '$2load_global.0', 'args': ['$ii04.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$ii112.4'}), (14, {'func': '$10load_global.3', 'args': ['$ii112.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_global.6'}), (20, {'res': '$ii220.7'}), (22, {'func': '$18load_global.6', 'args': ['$ii220.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8'}), (26, {'res': '$26load_global.9'}), (28, {'res': '$ii328.10'}), (30, {'func': '$26load_global.9', 'args': ['$ii328.10'], 'res': '$30call_function.11'}), (32, {'value': '$30call_function.11'}), (34, {'res': '$34load_global.12'}), (36, {'item': '$34load_global.12', 'res': '$36load_attr.13'}), (38, {'res': '$const38.14.1'}), (40, {'res': '$40load_global.15'}), (42, {'item': '$40load_global.15', 'res': '$42load_attr.16'}), (44, {'res': '$const44.17.2'}), (46, {'func': '$36load_attr.13', 'args': ['$const38.14.1', '$42load_attr.16'], 'names': '$const44.17.2', 'res': '$46call_function_kw.18'}), (48, {'value': '$46call_function_kw.18'}), (50, {'res': '$50load_global.19'}), (52, {'item': '$50load_global.19', 'res': '$52load_attr.20'}), (54, {'res': '$const54.21.1'}), (56, {'res': '$56load_global.22'}), (58, {'item': '$56load_global.22', 'res': '$58load_attr.23'}), (60, {'res': '$const60.24.2'}), (62, {'func': '$52load_attr.20', 'args': ['$const54.21.1', '$58load_attr.23'], 'names': '$const60.24.2', 'res': '$62call_function_kw.25'}), (64, {'value': '$62call_function_kw.25'}), (66, {'res': '$x066.26'}), (68, {'res': '$ii068.27'}), (70, {'res': '$const70.28.3'}), (72, {'index': '$const70.28.3', 'target': '$ii068.27', 'res': '$72binary_subscr.29'}), (74, {'lhs': '$x066.26', 'rhs': '$72binary_subscr.29', 'res': '$74compare_op.30'}), (76, {'pred': '$74compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: (), 178: ()})
2025-06-18 10:06:37,189 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$x078.0'}), (80, {'res': '$ii080.1'}), (82, {'res': '$n082.2'}), (84, {'res': '$const84.3.4'}), (86, {'lhs': '$n082.2', 'rhs': '$const84.3.4', 'res': '$86binary_subtract.4'}), (88, {'index': '$86binary_subtract.4', 'target': '$ii080.1', 'res': '$88binary_subscr.5'}), (90, {'lhs': '$x078.0', 'rhs': '$88binary_subscr.5', 'res': '$90compare_op.6'}), (92, {'pred': '$90compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$x194.0'}), (96, {'res': '$ii196.1'}), (98, {'res': '$const98.2.3'}), (100, {'index': '$const98.2.3', 'target': '$ii196.1', 'res': '$100binary_subscr.3'}), (102, {'lhs': '$x194.0', 'rhs': '$100binary_subscr.3', 'res': '$102compare_op.4'}), (104, {'pred': '$102compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$x1106.0'}), (108, {'res': '$ii1108.1'}), (110, {'res': '$n1110.2'}), (112, {'res': '$const112.3.4'}), (114, {'lhs': '$n1110.2', 'rhs': '$const112.3.4', 'res': '$114binary_subtract.4'}), (116, {'index': '$114binary_subtract.4', 'target': '$ii1108.1', 'res': '$116binary_subscr.5'}), (118, {'lhs': '$x1106.0', 'rhs': '$116binary_subscr.5', 'res': '$118compare_op.6'}), (120, {'pred': '$118compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$x2122.0'}), (124, {'res': '$ii2124.1'}), (126, {'res': '$const126.2.3'}), (128, {'index': '$const126.2.3', 'target': '$ii2124.1', 'res': '$128binary_subscr.3'}), (130, {'lhs': '$x2122.0', 'rhs': '$128binary_subscr.3', 'res': '$130compare_op.4'}), (132, {'pred': '$130compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$x2134.0'}), (136, {'res': '$ii2136.1'}), (138, {'res': '$n2138.2'}), (140, {'res': '$const140.3.4'}), (142, {'lhs': '$n2138.2', 'rhs': '$const140.3.4', 'res': '$142binary_subtract.4'}), (144, {'index': '$142binary_subtract.4', 'target': '$ii2136.1', 'res': '$144binary_subscr.5'}), (146, {'lhs': '$x2134.0', 'rhs': '$144binary_subscr.5', 'res': '$146compare_op.6'}), (148, {'pred': '$146compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$x3150.0'}), (152, {'res': '$ii3152.1'}), (154, {'res': '$const154.2.3'}), (156, {'index': '$const154.2.3', 'target': '$ii3152.1', 'res': '$156binary_subscr.3'}), (158, {'lhs': '$x3150.0', 'rhs': '$156binary_subscr.3', 'res': '$158compare_op.4'}), (160, {'pred': '$158compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 178: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$x3162.0'}), (164, {'res': '$ii3164.1'}), (166, {'res': '$n3166.2'}), (168, {'res': '$const168.3.4'}), (170, {'lhs': '$n3166.2', 'rhs': '$const168.3.4', 'res': '$170binary_subtract.4'}), (172, {'index': '$170binary_subtract.4', 'target': '$ii3164.1', 'res': '$172binary_subscr.5'}), (174, {'lhs': '$x3162.0', 'rhs': '$172binary_subscr.5', 'res': '$174compare_op.6'}), (176, {'pred': '$174compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 188: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$indices178.0'}), (180, {'res': '$norm_distances180.1'}), (182, {'res': '$const182.2.5'}), (184, {'items': ['$indices178.0', '$norm_distances180.1', '$const182.2.5'], 'res': '$184build_tuple.3'}), (186, {'retval': '$184build_tuple.3', 'castval': '$186return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$188load_global.0'}), (190, {'res': '$ii0190.1'}), (192, {'res': '$x0192.2'}), (194, {'func': '$188load_global.0', 'args': ['$ii0190.1', '$x0192.2'], 'res': '$194call_function.3'}), (196, {'iterable': '$194call_function.3', 'stores': ['$196unpack_sequence.4', '$196unpack_sequence.5'], 'tupleobj': '$196unpack_sequence.6'}), (198, {'value': '$196unpack_sequence.4'}), (200, {'value': '$196unpack_sequence.5'}), (202, {'res': '$eq202.7'}), (204, {'pred': '$eq202.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: (), 224: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'res': '$ix206.0'}), (208, {'res': '$indices208.1'}), (210, {'res': '$const210.2.3'}), (212, {'target': '$indices208.1', 'index': '$const210.2.3', 'value': '$ix206.0'}), (214, {'res': '$const214.3.3'}), (216, {'res': '$norm_distances216.4'}), (218, {'res': '$const218.5.3'}), (220, {'target': '$norm_distances216.4', 'index': '$const218.5.3', 'value': '$const214.3.3'}), (222, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=224 nstack_initial=0):
AdaptBlockInfo(insts=((224, {'res': '$ix224.0'}), (226, {'res': '$const226.1.4'}), (228, {'lhs': '$ix224.0', 'rhs': '$const226.1.4', 'res': '$228binary_subtract.2'}), (230, {'res': '$indices230.3'}), (232, {'res': '$const232.4.3'}), (234, {'target': '$indices230.3', 'index': '$const232.4.3', 'value': '$228binary_subtract.2'}), (236, {'res': '$ii0236.5'}), (238, {'res': '$ix238.6'}), (240, {'res': '$const240.7.4'}), (242, {'lhs': '$ix238.6', 'rhs': '$const240.7.4', 'res': '$242binary_subtract.8'}), (244, {'index': '$242binary_subtract.8', 'target': '$ii0236.5', 'res': '$244binary_subscr.9'}), (246, {'value': '$244binary_subscr.9'}), (248, {'res': '$x0248.10'}), (250, {'res': '$c0250.11'}), (252, {'lhs': '$x0248.10', 'rhs': '$c0250.11', 'res': '$252binary_subtract.12'}), (254, {'res': '$ii0254.13'}), (256, {'res': '$ix256.14'}), (258, {'index': '$ix256.14', 'target': '$ii0254.13', 'res': '$258binary_subscr.15'}), (260, {'res': '$c0260.16'}), (262, {'lhs': '$258binary_subscr.15', 'rhs': '$c0260.16', 'res': '$262binary_subtract.17'}), (264, {'lhs': '$252binary_subtract.12', 'rhs': '$262binary_subtract.17', 'res': '$264binary_true_divide.18'}), (266, {'res': '$norm_distances266.19'}), (268, {'res': '$const268.20.3'}), (270, {'target': '$norm_distances266.19', 'index': '$const268.20.3', 'value': '$264binary_true_divide.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$272load_global.0'}), (274, {'res': '$ii1274.1'}), (276, {'res': '$x1276.2'}), (278, {'func': '$272load_global.0', 'args': ['$ii1274.1', '$x1276.2'], 'res': '$278call_function.3'}), (280, {'iterable': '$278call_function.3', 'stores': ['$280unpack_sequence.4', '$280unpack_sequence.5'], 'tupleobj': '$280unpack_sequence.6'}), (282, {'value': '$280unpack_sequence.4'}), (284, {'value': '$280unpack_sequence.5'}), (286, {'res': '$eq286.7'}), (288, {'pred': '$eq286.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={290: (), 308: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=290 nstack_initial=0):
AdaptBlockInfo(insts=((290, {'res': '$ix290.0'}), (292, {'res': '$indices292.1'}), (294, {'res': '$const294.2.4'}), (296, {'target': '$indices292.1', 'index': '$const294.2.4', 'value': '$ix290.0'}), (298, {'res': '$const298.3.3'}), (300, {'res': '$norm_distances300.4'}), (302, {'res': '$const302.5.4'}), (304, {'target': '$norm_distances300.4', 'index': '$const302.5.4', 'value': '$const298.3.3'}), (306, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={356: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=308 nstack_initial=0):
AdaptBlockInfo(insts=((308, {'res': '$ix308.0'}), (310, {'res': '$const310.1.4'}), (312, {'lhs': '$ix308.0', 'rhs': '$const310.1.4', 'res': '$312binary_subtract.2'}), (314, {'res': '$indices314.3'}), (316, {'res': '$const316.4.4'}), (318, {'target': '$indices314.3', 'index': '$const316.4.4', 'value': '$312binary_subtract.2'}), (320, {'res': '$ii1320.5'}), (322, {'res': '$ix322.6'}), (324, {'res': '$const324.7.4'}), (326, {'lhs': '$ix322.6', 'rhs': '$const324.7.4', 'res': '$326binary_subtract.8'}), (328, {'index': '$326binary_subtract.8', 'target': '$ii1320.5', 'res': '$328binary_subscr.9'}), (330, {'value': '$328binary_subscr.9'}), (332, {'res': '$x1332.10'}), (334, {'res': '$c0334.11'}), (336, {'lhs': '$x1332.10', 'rhs': '$c0334.11', 'res': '$336binary_subtract.12'}), (338, {'res': '$ii1338.13'}), (340, {'res': '$ix340.14'}), (342, {'index': '$ix340.14', 'target': '$ii1338.13', 'res': '$342binary_subscr.15'}), (344, {'res': '$c0344.16'}), (346, {'lhs': '$342binary_subscr.15', 'rhs': '$c0344.16', 'res': '$346binary_subtract.17'}), (348, {'lhs': '$336binary_subtract.12', 'rhs': '$346binary_subtract.17', 'res': '$348binary_true_divide.18'}), (350, {'res': '$norm_distances350.19'}), (352, {'res': '$const352.20.4'}), (354, {'target': '$norm_distances350.19', 'index': '$const352.20.4', 'value': '$348binary_true_divide.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={356: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=356 nstack_initial=0):
AdaptBlockInfo(insts=((356, {'res': '$356load_global.0'}), (358, {'res': '$ii2358.1'}), (360, {'res': '$x2360.2'}), (362, {'func': '$356load_global.0', 'args': ['$ii2358.1', '$x2360.2'], 'res': '$362call_function.3'}), (364, {'iterable': '$362call_function.3', 'stores': ['$364unpack_sequence.4', '$364unpack_sequence.5'], 'tupleobj': '$364unpack_sequence.6'}), (366, {'value': '$364unpack_sequence.4'}), (368, {'value': '$364unpack_sequence.5'}), (370, {'res': '$eq370.7'}), (372, {'pred': '$eq370.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: (), 392: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=374 nstack_initial=0):
AdaptBlockInfo(insts=((374, {'res': '$ix374.0'}), (376, {'res': '$indices376.1'}), (378, {'res': '$const378.2.6'}), (380, {'target': '$indices376.1', 'index': '$const378.2.6', 'value': '$ix374.0'}), (382, {'res': '$const382.3.3'}), (384, {'res': '$norm_distances384.4'}), (386, {'res': '$const386.5.6'}), (388, {'target': '$norm_distances384.4', 'index': '$const386.5.6', 'value': '$const382.3.3'}), (390, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={440: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=392 nstack_initial=0):
AdaptBlockInfo(insts=((392, {'res': '$ix392.0'}), (394, {'res': '$const394.1.4'}), (396, {'lhs': '$ix392.0', 'rhs': '$const394.1.4', 'res': '$396binary_subtract.2'}), (398, {'res': '$indices398.3'}), (400, {'res': '$const400.4.6'}), (402, {'target': '$indices398.3', 'index': '$const400.4.6', 'value': '$396binary_subtract.2'}), (404, {'res': '$ii2404.5'}), (406, {'res': '$ix406.6'}), (408, {'res': '$const408.7.4'}), (410, {'lhs': '$ix406.6', 'rhs': '$const408.7.4', 'res': '$410binary_subtract.8'}), (412, {'index': '$410binary_subtract.8', 'target': '$ii2404.5', 'res': '$412binary_subscr.9'}), (414, {'value': '$412binary_subscr.9'}), (416, {'res': '$x2416.10'}), (418, {'res': '$c0418.11'}), (420, {'lhs': '$x2416.10', 'rhs': '$c0418.11', 'res': '$420binary_subtract.12'}), (422, {'res': '$ii2422.13'}), (424, {'res': '$ix424.14'}), (426, {'index': '$ix424.14', 'target': '$ii2422.13', 'res': '$426binary_subscr.15'}), (428, {'res': '$c0428.16'}), (430, {'lhs': '$426binary_subscr.15', 'rhs': '$c0428.16', 'res': '$430binary_subtract.17'}), (432, {'lhs': '$420binary_subtract.12', 'rhs': '$430binary_subtract.17', 'res': '$432binary_true_divide.18'}), (434, {'res': '$norm_distances434.19'}), (436, {'res': '$const436.20.6'}), (438, {'target': '$norm_distances434.19', 'index': '$const436.20.6', 'value': '$432binary_true_divide.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={440: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=440 nstack_initial=0):
AdaptBlockInfo(insts=((440, {'res': '$440load_global.0'}), (442, {'res': '$ii3442.1'}), (444, {'res': '$x3444.2'}), (446, {'func': '$440load_global.0', 'args': ['$ii3442.1', '$x3444.2'], 'res': '$446call_function.3'}), (448, {'iterable': '$446call_function.3', 'stores': ['$448unpack_sequence.4', '$448unpack_sequence.5'], 'tupleobj': '$448unpack_sequence.6'}), (450, {'value': '$448unpack_sequence.4'}), (452, {'value': '$448unpack_sequence.5'}), (454, {'res': '$eq454.7'}), (456, {'pred': '$eq454.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={458: (), 476: ()})
2025-06-18 10:06:37,190 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=458 nstack_initial=0):
AdaptBlockInfo(insts=((458, {'res': '$ix458.0'}), (460, {'res': '$indices460.1'}), (462, {'res': '$const462.2.7'}), (464, {'target': '$indices460.1', 'index': '$const462.2.7', 'value': '$ix458.0'}), (466, {'res': '$const466.3.3'}), (468, {'res': '$norm_distances468.4'}), (470, {'res': '$const470.5.7'}), (472, {'target': '$norm_distances468.4', 'index': '$const470.5.7', 'value': '$const466.3.3'}), (474, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={524: ()})
2025-06-18 10:06:37,191 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=((476, {'res': '$ix476.0'}), (478, {'res': '$const478.1.4'}), (480, {'lhs': '$ix476.0', 'rhs': '$const478.1.4', 'res': '$480binary_subtract.2'}), (482, {'res': '$indices482.3'}), (484, {'res': '$const484.4.7'}), (486, {'target': '$indices482.3', 'index': '$const484.4.7', 'value': '$480binary_subtract.2'}), (488, {'res': '$ii3488.5'}), (490, {'res': '$ix490.6'}), (492, {'res': '$const492.7.4'}), (494, {'lhs': '$ix490.6', 'rhs': '$const492.7.4', 'res': '$494binary_subtract.8'}), (496, {'index': '$494binary_subtract.8', 'target': '$ii3488.5', 'res': '$496binary_subscr.9'}), (498, {'value': '$496binary_subscr.9'}), (500, {'res': '$x3500.10'}), (502, {'res': '$c0502.11'}), (504, {'lhs': '$x3500.10', 'rhs': '$c0502.11', 'res': '$504binary_subtract.12'}), (506, {'res': '$ii3506.13'}), (508, {'res': '$ix508.14'}), (510, {'index': '$ix508.14', 'target': '$ii3506.13', 'res': '$510binary_subscr.15'}), (512, {'res': '$c0512.16'}), (514, {'lhs': '$510binary_subscr.15', 'rhs': '$c0512.16', 'res': '$514binary_subtract.17'}), (516, {'lhs': '$504binary_subtract.12', 'rhs': '$514binary_subtract.17', 'res': '$516binary_true_divide.18'}), (518, {'res': '$norm_distances518.19'}), (520, {'res': '$const520.20.7'}), (522, {'target': '$norm_distances518.19', 'index': '$const520.20.7', 'value': '$516binary_true_divide.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={524: ()})
2025-06-18 10:06:37,191 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=524 nstack_initial=0):
AdaptBlockInfo(insts=((524, {'res': '$indices524.0'}), (526, {'res': '$norm_distances526.1'}), (528, {'res': '$const528.2.8'}), (530, {'items': ['$indices524.0', '$norm_distances526.1', '$const528.2.8'], 'res': '$530build_tuple.3'}), (532, {'retval': '$530build_tuple.3', 'castval': '$532return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,195 - DEBUG - interpreter.py:1420 - label 0:
    x0 = arg(0, name=x0)                     ['x0']
    x1 = arg(1, name=x1)                     ['x1']
    x2 = arg(2, name=x2)                     ['x2']
    x3 = arg(3, name=x3)                     ['x3']
    ii0 = arg(4, name=ii0)                   ['ii0']
    ii1 = arg(5, name=ii1)                   ['ii1']
    ii2 = arg(6, name=ii2)                   ['ii2']
    ii3 = arg(7, name=ii3)                   ['ii3']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'ii0', 'n0']
    $10load_global.3 = global(len: <built-in function len>) ['$10load_global.3']
    n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'ii1', 'n1']
    $18load_global.6 = global(len: <built-in function len>) ['$18load_global.6']
    n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.6', 'ii2', 'n2']
    $26load_global.9 = global(len: <built-in function len>) ['$26load_global.9']
    n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.9', 'ii3', 'n3']
    $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$34load_global.12']
    $36load_attr.13 = getattr(value=$34load_global.12, attr=empty) ['$34load_global.12', '$36load_attr.13']
    $const38.14.1 = const(int, 4)            ['$const38.14.1']
    $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>) ['$40load_global.15']
    $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32) ['$40load_global.15', '$42load_attr.16']
    indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None) ['$36load_attr.13', '$42load_attr.16', '$const38.14.1', 'indices']
    $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$50load_global.19']
    $52load_attr.20 = getattr(value=$50load_global.19, attr=empty) ['$50load_global.19', '$52load_attr.20']
    $const54.21.1 = const(int, 4)            ['$const54.21.1']
    $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>) ['$56load_global.22']
    $58load_attr.23 = getattr(value=$56load_global.22, attr=float64) ['$56load_global.22', '$58load_attr.23']
    norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None) ['$52load_attr.20', '$58load_attr.23', '$const54.21.1', 'norm_distances']
    $const70.28.3 = const(int, 0)            ['$const70.28.3']
    $72binary_subscr.29 = getitem(value=ii0, index=$const70.28.3, fn=<built-in function getitem>) ['$72binary_subscr.29', '$const70.28.3', 'ii0']
    $74compare_op.30 = x0 < $72binary_subscr.29 ['$72binary_subscr.29', '$74compare_op.30', 'x0']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None) ['$74compare_op.30', '$76pred', 'bool76']
    branch $76pred, 178, 78                  ['$76pred']
label 78:
    $const84.3.4 = const(int, 1)             ['$const84.3.4']
    $86binary_subtract.4 = n0 - $const84.3.4 ['$86binary_subtract.4', '$const84.3.4', 'n0']
    $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>) ['$86binary_subtract.4', '$88binary_subscr.5', 'ii0']
    $90compare_op.6 = x0 > $88binary_subscr.5 ['$88binary_subscr.5', '$90compare_op.6', 'x0']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.6', '$92pred', 'bool92']
    branch $92pred, 178, 94                  ['$92pred']
label 94:
    $const98.2.3 = const(int, 0)             ['$const98.2.3']
    $100binary_subscr.3 = getitem(value=ii1, index=$const98.2.3, fn=<built-in function getitem>) ['$100binary_subscr.3', '$const98.2.3', 'ii1']
    $102compare_op.4 = x1 < $100binary_subscr.3 ['$100binary_subscr.3', '$102compare_op.4', 'x1']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.4', '$104pred', 'bool104']
    branch $104pred, 178, 106                ['$104pred']
label 106:
    $const112.3.4 = const(int, 1)            ['$const112.3.4']
    $114binary_subtract.4 = n1 - $const112.3.4 ['$114binary_subtract.4', '$const112.3.4', 'n1']
    $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>) ['$114binary_subtract.4', '$116binary_subscr.5', 'ii1']
    $118compare_op.6 = x1 > $116binary_subscr.5 ['$116binary_subscr.5', '$118compare_op.6', 'x1']
    bool120 = global(bool: <class 'bool'>)   ['bool120']
    $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.6', '$120pred', 'bool120']
    branch $120pred, 178, 122                ['$120pred']
label 122:
    $const126.2.3 = const(int, 0)            ['$const126.2.3']
    $128binary_subscr.3 = getitem(value=ii2, index=$const126.2.3, fn=<built-in function getitem>) ['$128binary_subscr.3', '$const126.2.3', 'ii2']
    $130compare_op.4 = x2 < $128binary_subscr.3 ['$128binary_subscr.3', '$130compare_op.4', 'x2']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.4', '$132pred', 'bool132']
    branch $132pred, 178, 134                ['$132pred']
label 134:
    $const140.3.4 = const(int, 1)            ['$const140.3.4']
    $142binary_subtract.4 = n2 - $const140.3.4 ['$142binary_subtract.4', '$const140.3.4', 'n2']
    $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>) ['$142binary_subtract.4', '$144binary_subscr.5', 'ii2']
    $146compare_op.6 = x2 > $144binary_subscr.5 ['$144binary_subscr.5', '$146compare_op.6', 'x2']
    bool148 = global(bool: <class 'bool'>)   ['bool148']
    $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None) ['$146compare_op.6', '$148pred', 'bool148']
    branch $148pred, 178, 150                ['$148pred']
label 150:
    $const154.2.3 = const(int, 0)            ['$const154.2.3']
    $156binary_subscr.3 = getitem(value=ii3, index=$const154.2.3, fn=<built-in function getitem>) ['$156binary_subscr.3', '$const154.2.3', 'ii3']
    $158compare_op.4 = x3 < $156binary_subscr.3 ['$156binary_subscr.3', '$158compare_op.4', 'x3']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None) ['$158compare_op.4', '$160pred', 'bool160']
    branch $160pred, 178, 162                ['$160pred']
label 162:
    $const168.3.4 = const(int, 1)            ['$const168.3.4']
    $170binary_subtract.4 = n3 - $const168.3.4 ['$170binary_subtract.4', '$const168.3.4', 'n3']
    $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>) ['$170binary_subtract.4', '$172binary_subscr.5', 'ii3']
    $174compare_op.6 = x3 > $172binary_subscr.5 ['$172binary_subscr.5', '$174compare_op.6', 'x3']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.6', '$176pred', 'bool176']
    branch $176pred, 178, 188                ['$176pred']
label 178:
    $const182.2.5 = const(bool, True)        ['$const182.2.5']
    $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)]) ['$184build_tuple.3', '$const182.2.5', 'indices', 'norm_distances']
    $186return_value.4 = cast(value=$184build_tuple.3) ['$184build_tuple.3', '$186return_value.4']
    return $186return_value.4                ['$186return_value.4']
label 188:
    $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>)) ['$188load_global.0']
    $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$188load_global.0', '$194call_function.3', 'ii0', 'x0']
    $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2) ['$194call_function.3', '$196unpack_sequence.6']
    $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$196unpack_sequence.4', '$196unpack_sequence.6']
    $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$196unpack_sequence.5', '$196unpack_sequence.6']
    ix = $196unpack_sequence.4               ['$196unpack_sequence.4', 'ix']
    eq = $196unpack_sequence.5               ['$196unpack_sequence.5', 'eq']
    bool204 = global(bool: <class 'bool'>)   ['bool204']
    $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None) ['$204pred', 'bool204', 'eq']
    branch $204pred, 206, 224                ['$204pred']
label 206:
    $const210.2.3 = const(int, 0)            ['$const210.2.3']
    indices[$const210.2.3] = ix              ['$const210.2.3', 'indices', 'ix']
    $const214.3.3 = const(int, 0)            ['$const214.3.3']
    $const218.5.3 = const(int, 0)            ['$const218.5.3']
    norm_distances[$const218.5.3] = $const214.3.3 ['$const214.3.3', '$const218.5.3', 'norm_distances']
    jump 272                                 []
label 224:
    $const226.1.4 = const(int, 1)            ['$const226.1.4']
    $228binary_subtract.2 = ix - $const226.1.4 ['$228binary_subtract.2', '$const226.1.4', 'ix']
    $const232.4.3 = const(int, 0)            ['$const232.4.3']
    indices[$const232.4.3] = $228binary_subtract.2 ['$228binary_subtract.2', '$const232.4.3', 'indices']
    $const240.7.4 = const(int, 1)            ['$const240.7.4']
    $242binary_subtract.8 = ix - $const240.7.4 ['$242binary_subtract.8', '$const240.7.4', 'ix']
    c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>) ['$242binary_subtract.8', 'c0', 'ii0']
    $252binary_subtract.12 = x0 - c0         ['$252binary_subtract.12', 'c0', 'x0']
    $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>) ['$258binary_subscr.15', 'ii0', 'ix']
    $262binary_subtract.17 = $258binary_subscr.15 - c0 ['$258binary_subscr.15', '$262binary_subtract.17', 'c0']
    $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17 ['$252binary_subtract.12', '$262binary_subtract.17', '$264binary_true_divide.18']
    $const268.20.3 = const(int, 0)           ['$const268.20.3']
    norm_distances[$const268.20.3] = $264binary_true_divide.18 ['$264binary_true_divide.18', '$const268.20.3', 'norm_distances']
    jump 272                                 []
label 272:
    $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>)) ['$272load_global.0']
    $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_global.0', '$278call_function.3', 'ii1', 'x1']
    $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2) ['$278call_function.3', '$280unpack_sequence.6']
    $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$280unpack_sequence.4', '$280unpack_sequence.6']
    $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$280unpack_sequence.5', '$280unpack_sequence.6']
    ix = $280unpack_sequence.4               ['$280unpack_sequence.4', 'ix']
    eq = $280unpack_sequence.5               ['$280unpack_sequence.5', 'eq']
    bool288 = global(bool: <class 'bool'>)   ['bool288']
    $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None) ['$288pred', 'bool288', 'eq']
    branch $288pred, 290, 308                ['$288pred']
label 290:
    $const294.2.4 = const(int, 1)            ['$const294.2.4']
    indices[$const294.2.4] = ix              ['$const294.2.4', 'indices', 'ix']
    $const298.3.3 = const(int, 0)            ['$const298.3.3']
    $const302.5.4 = const(int, 1)            ['$const302.5.4']
    norm_distances[$const302.5.4] = $const298.3.3 ['$const298.3.3', '$const302.5.4', 'norm_distances']
    jump 356                                 []
label 308:
    $const310.1.4 = const(int, 1)            ['$const310.1.4']
    $312binary_subtract.2 = ix - $const310.1.4 ['$312binary_subtract.2', '$const310.1.4', 'ix']
    $const316.4.4 = const(int, 1)            ['$const316.4.4']
    indices[$const316.4.4] = $312binary_subtract.2 ['$312binary_subtract.2', '$const316.4.4', 'indices']
    $const324.7.4 = const(int, 1)            ['$const324.7.4']
    $326binary_subtract.8 = ix - $const324.7.4 ['$326binary_subtract.8', '$const324.7.4', 'ix']
    c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>) ['$326binary_subtract.8', 'c0', 'ii1']
    $336binary_subtract.12 = x1 - c0         ['$336binary_subtract.12', 'c0', 'x1']
    $342binary_subscr.15 = getitem(value=ii1, index=ix, fn=<built-in function getitem>) ['$342binary_subscr.15', 'ii1', 'ix']
    $346binary_subtract.17 = $342binary_subscr.15 - c0 ['$342binary_subscr.15', '$346binary_subtract.17', 'c0']
    $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17 ['$336binary_subtract.12', '$346binary_subtract.17', '$348binary_true_divide.18']
    $const352.20.4 = const(int, 1)           ['$const352.20.4']
    norm_distances[$const352.20.4] = $348binary_true_divide.18 ['$348binary_true_divide.18', '$const352.20.4', 'norm_distances']
    jump 356                                 []
label 356:
    $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>)) ['$356load_global.0']
    $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$356load_global.0', '$362call_function.3', 'ii2', 'x2']
    $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2) ['$362call_function.3', '$364unpack_sequence.6']
    $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$364unpack_sequence.4', '$364unpack_sequence.6']
    $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$364unpack_sequence.5', '$364unpack_sequence.6']
    ix = $364unpack_sequence.4               ['$364unpack_sequence.4', 'ix']
    eq = $364unpack_sequence.5               ['$364unpack_sequence.5', 'eq']
    bool372 = global(bool: <class 'bool'>)   ['bool372']
    $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None) ['$372pred', 'bool372', 'eq']
    branch $372pred, 374, 392                ['$372pred']
label 374:
    $const378.2.6 = const(int, 2)            ['$const378.2.6']
    indices[$const378.2.6] = ix              ['$const378.2.6', 'indices', 'ix']
    $const382.3.3 = const(int, 0)            ['$const382.3.3']
    $const386.5.6 = const(int, 2)            ['$const386.5.6']
    norm_distances[$const386.5.6] = $const382.3.3 ['$const382.3.3', '$const386.5.6', 'norm_distances']
    jump 440                                 []
label 392:
    $const394.1.4 = const(int, 1)            ['$const394.1.4']
    $396binary_subtract.2 = ix - $const394.1.4 ['$396binary_subtract.2', '$const394.1.4', 'ix']
    $const400.4.6 = const(int, 2)            ['$const400.4.6']
    indices[$const400.4.6] = $396binary_subtract.2 ['$396binary_subtract.2', '$const400.4.6', 'indices']
    $const408.7.4 = const(int, 1)            ['$const408.7.4']
    $410binary_subtract.8 = ix - $const408.7.4 ['$410binary_subtract.8', '$const408.7.4', 'ix']
    c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>) ['$410binary_subtract.8', 'c0', 'ii2']
    $420binary_subtract.12 = x2 - c0         ['$420binary_subtract.12', 'c0', 'x2']
    $426binary_subscr.15 = getitem(value=ii2, index=ix, fn=<built-in function getitem>) ['$426binary_subscr.15', 'ii2', 'ix']
    $430binary_subtract.17 = $426binary_subscr.15 - c0 ['$426binary_subscr.15', '$430binary_subtract.17', 'c0']
    $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17 ['$420binary_subtract.12', '$430binary_subtract.17', '$432binary_true_divide.18']
    $const436.20.6 = const(int, 2)           ['$const436.20.6']
    norm_distances[$const436.20.6] = $432binary_true_divide.18 ['$432binary_true_divide.18', '$const436.20.6', 'norm_distances']
    jump 440                                 []
label 440:
    $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>)) ['$440load_global.0']
    $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None) ['$440load_global.0', '$446call_function.3', 'ii3', 'x3']
    $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2) ['$446call_function.3', '$448unpack_sequence.6']
    $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$448unpack_sequence.4', '$448unpack_sequence.6']
    $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$448unpack_sequence.5', '$448unpack_sequence.6']
    ix = $448unpack_sequence.4               ['$448unpack_sequence.4', 'ix']
    eq = $448unpack_sequence.5               ['$448unpack_sequence.5', 'eq']
    bool456 = global(bool: <class 'bool'>)   ['bool456']
    $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None) ['$456pred', 'bool456', 'eq']
    branch $456pred, 458, 476                ['$456pred']
label 458:
    $const462.2.7 = const(int, 3)            ['$const462.2.7']
    indices[$const462.2.7] = ix              ['$const462.2.7', 'indices', 'ix']
    $const466.3.3 = const(int, 0)            ['$const466.3.3']
    $const470.5.7 = const(int, 3)            ['$const470.5.7']
    norm_distances[$const470.5.7] = $const466.3.3 ['$const466.3.3', '$const470.5.7', 'norm_distances']
    jump 524                                 []
label 476:
    $const478.1.4 = const(int, 1)            ['$const478.1.4']
    $480binary_subtract.2 = ix - $const478.1.4 ['$480binary_subtract.2', '$const478.1.4', 'ix']
    $const484.4.7 = const(int, 3)            ['$const484.4.7']
    indices[$const484.4.7] = $480binary_subtract.2 ['$480binary_subtract.2', '$const484.4.7', 'indices']
    $const492.7.4 = const(int, 1)            ['$const492.7.4']
    $494binary_subtract.8 = ix - $const492.7.4 ['$494binary_subtract.8', '$const492.7.4', 'ix']
    c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>) ['$494binary_subtract.8', 'c0', 'ii3']
    $504binary_subtract.12 = x3 - c0         ['$504binary_subtract.12', 'c0', 'x3']
    $510binary_subscr.15 = getitem(value=ii3, index=ix, fn=<built-in function getitem>) ['$510binary_subscr.15', 'ii3', 'ix']
    $514binary_subtract.17 = $510binary_subscr.15 - c0 ['$510binary_subscr.15', '$514binary_subtract.17', 'c0']
    $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17 ['$504binary_subtract.12', '$514binary_subtract.17', '$516binary_true_divide.18']
    $const520.20.7 = const(int, 3)           ['$const520.20.7']
    norm_distances[$const520.20.7] = $516binary_true_divide.18 ['$516binary_true_divide.18', '$const520.20.7', 'norm_distances']
    jump 524                                 []
label 524:
    $const528.2.8 = const(bool, False)       ['$const528.2.8']
    $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)]) ['$530build_tuple.3', '$const528.2.8', 'indices', 'norm_distances']
    $532return_value.4 = cast(value=$530build_tuple.3) ['$530build_tuple.3', '$532return_value.4']
    return $532return_value.4                ['$532return_value.4']

2025-06-18 10:06:37,212 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,212 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,212 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,213 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 78
2025-06-18 10:06:37,213 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,213 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,214 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 94
2025-06-18 10:06:37,214 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,214 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 106
2025-06-18 10:06:37,214 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,214 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 122
2025-06-18 10:06:37,214 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,214 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,214 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 134
2025-06-18 10:06:37,215 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,215 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 150
2025-06-18 10:06:37,215 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,215 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 162
2025-06-18 10:06:37,215 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,215 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 178
2025-06-18 10:06:37,215 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,215 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,216 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 188
2025-06-18 10:06:37,216 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,216 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 206
2025-06-18 10:06:37,216 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,216 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,217 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 224
2025-06-18 10:06:37,217 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,217 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 272
2025-06-18 10:06:37,217 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: ix = $280unpack_sequence.4
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: eq = $280unpack_sequence.5
2025-06-18 10:06:37,217 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,218 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 290
2025-06-18 10:06:37,218 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,218 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 308
2025-06-18 10:06:37,218 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix - $const310.1.4
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix - $const324.7.4
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,218 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 356
2025-06-18 10:06:37,218 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,218 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: ix = $364unpack_sequence.4
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: eq = $364unpack_sequence.5
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,219 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 374
2025-06-18 10:06:37,219 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,219 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 392
2025-06-18 10:06:37,219 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix - $const394.1.4
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix - $const408.7.4
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,219 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,220 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 440
2025-06-18 10:06:37,220 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: ix = $448unpack_sequence.4
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: eq = $448unpack_sequence.5
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,220 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 458
2025-06-18 10:06:37,220 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,220 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 476
2025-06-18 10:06:37,220 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix - $const478.1.4
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,220 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix - $const492.7.4
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,221 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 524
2025-06-18 10:06:37,221 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcb00c40>
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,221 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,221 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$100binary_subscr.3': [(<numba.core.ir.Assign object at 0x7db9bcb039d0>,
                                      94)],
             '$102compare_op.4': [(<numba.core.ir.Assign object at 0x7db9bc4004c0>,
                                   94)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7db9bc403190>,
                           94)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7db9bc44d9f0>,
                                   0)],
             '$114binary_subtract.4': [(<numba.core.ir.Assign object at 0x7db9bc401ae0>,
                                        106)],
             '$116binary_subscr.5': [(<numba.core.ir.Assign object at 0x7db9bc401780>,
                                      106)],
             '$118compare_op.6': [(<numba.core.ir.Assign object at 0x7db9bc402a40>,
                                   106)],
             '$120pred': [(<numba.core.ir.Assign object at 0x7db9bc4003a0>,
                           106)],
             '$128binary_subscr.3': [(<numba.core.ir.Assign object at 0x7db9bcb03160>,
                                      122)],
             '$130compare_op.4': [(<numba.core.ir.Assign object at 0x7db9bc403730>,
                                   122)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7db9bc403070>,
                           122)],
             '$142binary_subtract.4': [(<numba.core.ir.Assign object at 0x7db9bc400a00>,
                                        134)],
             '$144binary_subscr.5': [(<numba.core.ir.Assign object at 0x7db9bc4017b0>,
                                      134)],
             '$146compare_op.6': [(<numba.core.ir.Assign object at 0x7db9bc401c90>,
                                   134)],
             '$148pred': [(<numba.core.ir.Assign object at 0x7db9bc400400>,
                           134)],
             '$156binary_subscr.3': [(<numba.core.ir.Assign object at 0x7db9bcb00100>,
                                      150)],
             '$158compare_op.4': [(<numba.core.ir.Assign object at 0x7db9bc402440>,
                                   150)],
             '$160pred': [(<numba.core.ir.Assign object at 0x7db9bc4036d0>,
                           150)],
             '$170binary_subtract.4': [(<numba.core.ir.Assign object at 0x7db9bc4f1060>,
                                        162)],
             '$172binary_subscr.5': [(<numba.core.ir.Assign object at 0x7db9bc4f0160>,
                                      162)],
             '$174compare_op.6': [(<numba.core.ir.Assign object at 0x7db9bc4f2230>,
                                   162)],
             '$176pred': [(<numba.core.ir.Assign object at 0x7db9bc4f2e90>,
                           162)],
             '$184build_tuple.3': [(<numba.core.ir.Assign object at 0x7db9bc4f1d20>,
                                    178)],
             '$186return_value.4': [(<numba.core.ir.Assign object at 0x7db9bc4f09a0>,
                                     178)],
             '$188load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc4f2d40>,
                                    188)],
             '$18load_global.6': [(<numba.core.ir.Assign object at 0x7db9bc44c9d0>,
                                   0)],
             '$194call_function.3': [(<numba.core.ir.Assign object at 0x7db9bc4f1300>,
                                      188)],
             '$196unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7db9bc4f3640>,
                                        188)],
             '$196unpack_sequence.5': [(<numba.core.ir.Assign object at 0x7db9bc4f29e0>,
                                        188)],
             '$196unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7db9bc4f0fa0>,
                                        188)],
             '$204pred': [(<numba.core.ir.Assign object at 0x7db9bc4f1000>,
                           188)],
             '$228binary_subtract.2': [(<numba.core.ir.Assign object at 0x7db9bc752c20>,
                                        224)],
             '$242binary_subtract.8': [(<numba.core.ir.Assign object at 0x7db9bc750a00>,
                                        224)],
             '$252binary_subtract.12': [(<numba.core.ir.Assign object at 0x7db9bc752290>,
                                         224)],
             '$258binary_subscr.15': [(<numba.core.ir.Assign object at 0x7db9bc752b60>,
                                       224)],
             '$262binary_subtract.17': [(<numba.core.ir.Assign object at 0x7db9bc753610>,
                                         224)],
             '$264binary_true_divide.18': [(<numba.core.ir.Assign object at 0x7db9bc753640>,
                                            224)],
             '$26load_global.9': [(<numba.core.ir.Assign object at 0x7db9bc802e30>,
                                   0)],
             '$272load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc7522f0>,
                                    272)],
             '$278call_function.3': [(<numba.core.ir.Assign object at 0x7db9bc751cc0>,
                                      272)],
             '$280unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7db9bc750ee0>,
                                        272)],
             '$280unpack_sequence.5': [(<numba.core.ir.Assign object at 0x7db9bc752a70>,
                                        272)],
             '$280unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7db9bc7514b0>,
                                        272)],
             '$288pred': [(<numba.core.ir.Assign object at 0x7db9bc750820>,
                           272)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc44e4d0>,
                                  0)],
             '$312binary_subtract.2': [(<numba.core.ir.Assign object at 0x7db9bdaf95a0>,
                                        308)],
             '$326binary_subtract.8': [(<numba.core.ir.Assign object at 0x7db9bdaf9870>,
                                        308)],
             '$336binary_subtract.12': [(<numba.core.ir.Assign object at 0x7db9bdaf9180>,
                                         308)],
             '$342binary_subscr.15': [(<numba.core.ir.Assign object at 0x7db9bdafbd90>,
                                       308)],
             '$346binary_subtract.17': [(<numba.core.ir.Assign object at 0x7db9bdaf89d0>,
                                         308)],
             '$348binary_true_divide.18': [(<numba.core.ir.Assign object at 0x7db9bdafbd30>,
                                            308)],
             '$34load_global.12': [(<numba.core.ir.Assign object at 0x7db9bc8020e0>,
                                    0)],
             '$356load_global.0': [(<numba.core.ir.Assign object at 0x7db9bdafa170>,
                                    356)],
             '$362call_function.3': [(<numba.core.ir.Assign object at 0x7db9bdafa5c0>,
                                      356)],
             '$364unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7db9bdafbbe0>,
                                        356)],
             '$364unpack_sequence.5': [(<numba.core.ir.Assign object at 0x7db9bdaf9b40>,
                                        356)],
             '$364unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7db9bdafb490>,
                                        356)],
             '$36load_attr.13': [(<numba.core.ir.Assign object at 0x7db9bc802c80>,
                                  0)],
             '$372pred': [(<numba.core.ir.Assign object at 0x7db9bdaf9450>,
                           356)],
             '$396binary_subtract.2': [(<numba.core.ir.Assign object at 0x7db9bc3c3b20>,
                                        392)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7db9bc802f50>,
                                    0)],
             '$410binary_subtract.8': [(<numba.core.ir.Assign object at 0x7db9bc3c27a0>,
                                        392)],
             '$420binary_subtract.12': [(<numba.core.ir.Assign object at 0x7db9bc3c0ac0>,
                                         392)],
             '$426binary_subscr.15': [(<numba.core.ir.Assign object at 0x7db9bc3c0e20>,
                                       392)],
             '$42load_attr.16': [(<numba.core.ir.Assign object at 0x7db9bc801540>,
                                  0)],
             '$430binary_subtract.17': [(<numba.core.ir.Assign object at 0x7db9bc3c16c0>,
                                         392)],
             '$432binary_true_divide.18': [(<numba.core.ir.Assign object at 0x7db9bc3c0b20>,
                                            392)],
             '$440load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc3c17b0>,
                                    440)],
             '$446call_function.3': [(<numba.core.ir.Assign object at 0x7db9bc3c1ba0>,
                                      440)],
             '$448unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7db9bc3c3640>,
                                        440)],
             '$448unpack_sequence.5': [(<numba.core.ir.Assign object at 0x7db9bc3c0100>,
                                        440)],
             '$448unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7db9bc3c3a60>,
                                        440)],
             '$456pred': [(<numba.core.ir.Assign object at 0x7db9bc3c00a0>,
                           440)],
             '$480binary_subtract.2': [(<numba.core.ir.Assign object at 0x7db9bc3c2b30>,
                                        476)],
             '$494binary_subtract.8': [(<numba.core.ir.Assign object at 0x7db9bcb006d0>,
                                        476)],
             '$504binary_subtract.12': [(<numba.core.ir.Assign object at 0x7db9bcb02530>,
                                         476)],
             '$50load_global.19': [(<numba.core.ir.Assign object at 0x7db9bc803370>,
                                    0)],
             '$510binary_subscr.15': [(<numba.core.ir.Assign object at 0x7db9bcb00ee0>,
                                       476)],
             '$514binary_subtract.17': [(<numba.core.ir.Assign object at 0x7db9bcb03280>,
                                         476)],
             '$516binary_true_divide.18': [(<numba.core.ir.Assign object at 0x7db9bcb01b70>,
                                            476)],
             '$52load_attr.20': [(<numba.core.ir.Assign object at 0x7db9bc802cb0>,
                                  0)],
             '$530build_tuple.3': [(<numba.core.ir.Assign object at 0x7db9bcb00b50>,
                                    524)],
             '$532return_value.4': [(<numba.core.ir.Assign object at 0x7db9bcb03340>,
                                     524)],
             '$56load_global.22': [(<numba.core.ir.Assign object at 0x7db9bc8006d0>,
                                    0)],
             '$58load_attr.23': [(<numba.core.ir.Assign object at 0x7db9bc800370>,
                                  0)],
             '$72binary_subscr.29': [(<numba.core.ir.Assign object at 0x7db9bcb00f40>,
                                      0)],
             '$74compare_op.30': [(<numba.core.ir.Assign object at 0x7db9bc802ad0>,
                                   0)],
             '$76pred': [(<numba.core.ir.Assign object at 0x7db9bc8016f0>, 0)],
             '$86binary_subtract.4': [(<numba.core.ir.Assign object at 0x7db9bc8030a0>,
                                       78)],
             '$88binary_subscr.5': [(<numba.core.ir.Assign object at 0x7db9bc802140>,
                                     78)],
             '$90compare_op.6': [(<numba.core.ir.Assign object at 0x7db9bc801ed0>,
                                  78)],
             '$92pred': [(<numba.core.ir.Assign object at 0x7db9bc401b40>, 78)],
             '$const112.3.4': [(<numba.core.ir.Assign object at 0x7db9bc401150>,
                                106)],
             '$const126.2.3': [(<numba.core.ir.Assign object at 0x7db9bc4007f0>,
                                122)],
             '$const140.3.4': [(<numba.core.ir.Assign object at 0x7db9bc401d80>,
                                134)],
             '$const154.2.3': [(<numba.core.ir.Assign object at 0x7db9bc4020b0>,
                                150)],
             '$const168.3.4': [(<numba.core.ir.Assign object at 0x7db9bc4f2f50>,
                                162)],
             '$const182.2.5': [(<numba.core.ir.Assign object at 0x7db9bc4f0610>,
                                178)],
             '$const210.2.3': [(<numba.core.ir.Assign object at 0x7db9bc4f04c0>,
                                206)],
             '$const214.3.3': [(<numba.core.ir.Assign object at 0x7db9bc4f1e10>,
                                206)],
             '$const218.5.3': [(<numba.core.ir.Assign object at 0x7db9bc752a40>,
                                206)],
             '$const226.1.4': [(<numba.core.ir.Assign object at 0x7db9bc750f40>,
                                224)],
             '$const232.4.3': [(<numba.core.ir.Assign object at 0x7db9bc7517e0>,
                                224)],
             '$const240.7.4': [(<numba.core.ir.Assign object at 0x7db9bc750eb0>,
                                224)],
             '$const268.20.3': [(<numba.core.ir.Assign object at 0x7db9bc751150>,
                                 224)],
             '$const294.2.4': [(<numba.core.ir.Assign object at 0x7db9bdaf8190>,
                                290)],
             '$const298.3.3': [(<numba.core.ir.Assign object at 0x7db9bdaf9c90>,
                                290)],
             '$const302.5.4': [(<numba.core.ir.Assign object at 0x7db9bdaf9a50>,
                                290)],
             '$const310.1.4': [(<numba.core.ir.Assign object at 0x7db9bdaf8d00>,
                                308)],
             '$const316.4.4': [(<numba.core.ir.Assign object at 0x7db9bdafa3b0>,
                                308)],
             '$const324.7.4': [(<numba.core.ir.Assign object at 0x7db9bdafa4a0>,
                                308)],
             '$const352.20.4': [(<numba.core.ir.Assign object at 0x7db9bdaf9210>,
                                 308)],
             '$const378.2.6': [(<numba.core.ir.Assign object at 0x7db9bdafa860>,
                                374)],
             '$const38.14.1': [(<numba.core.ir.Assign object at 0x7db9bc803940>,
                                0)],
             '$const382.3.3': [(<numba.core.ir.Assign object at 0x7db9bdaf9de0>,
                                374)],
             '$const386.5.6': [(<numba.core.ir.Assign object at 0x7db9bdaf9a20>,
                                374)],
             '$const394.1.4': [(<numba.core.ir.Assign object at 0x7db9bc3c0f10>,
                                392)],
             '$const400.4.6': [(<numba.core.ir.Assign object at 0x7db9bc3c0460>,
                                392)],
             '$const408.7.4': [(<numba.core.ir.Assign object at 0x7db9bc3c3b80>,
                                392)],
             '$const436.20.6': [(<numba.core.ir.Assign object at 0x7db9bc3c0310>,
                                 392)],
             '$const462.2.7': [(<numba.core.ir.Assign object at 0x7db9bc3c10c0>,
                                458)],
             '$const466.3.3': [(<numba.core.ir.Assign object at 0x7db9bc3c0a30>,
                                458)],
             '$const470.5.7': [(<numba.core.ir.Assign object at 0x7db9bc3c3dc0>,
                                458)],
             '$const478.1.4': [(<numba.core.ir.Assign object at 0x7db9bc3c3160>,
                                476)],
             '$const484.4.7': [(<numba.core.ir.Assign object at 0x7db9bc3c1d80>,
                                476)],
             '$const492.7.4': [(<numba.core.ir.Assign object at 0x7db9bcb01990>,
                                476)],
             '$const520.20.7': [(<numba.core.ir.Assign object at 0x7db9bcb03220>,
                                 476)],
             '$const528.2.8': [(<numba.core.ir.Assign object at 0x7db9bcb014e0>,
                                524)],
             '$const54.21.1': [(<numba.core.ir.Assign object at 0x7db9bc801150>,
                                0)],
             '$const70.28.3': [(<numba.core.ir.Assign object at 0x7db9bc803340>,
                                0)],
             '$const84.3.4': [(<numba.core.ir.Assign object at 0x7db9bc800850>,
                               78)],
             '$const98.2.3': [(<numba.core.ir.Assign object at 0x7db9bc401690>,
                               94)],
             'bool104': [(<numba.core.ir.Assign object at 0x7db9bc401420>, 94)],
             'bool120': [(<numba.core.ir.Assign object at 0x7db9bc401cf0>,
                          106)],
             'bool132': [(<numba.core.ir.Assign object at 0x7db9bc403c10>,
                          122)],
             'bool148': [(<numba.core.ir.Assign object at 0x7db9bc4025c0>,
                          134)],
             'bool160': [(<numba.core.ir.Assign object at 0x7db9bc4033a0>,
                          150)],
             'bool176': [(<numba.core.ir.Assign object at 0x7db9bc4f2740>,
                          162)],
             'bool204': [(<numba.core.ir.Assign object at 0x7db9bc4f3f10>,
                          188)],
             'bool288': [(<numba.core.ir.Assign object at 0x7db9bc751de0>,
                          272)],
             'bool372': [(<numba.core.ir.Assign object at 0x7db9bdaf85b0>,
                          356)],
             'bool456': [(<numba.core.ir.Assign object at 0x7db9bc3c3610>,
                          440)],
             'bool76': [(<numba.core.ir.Assign object at 0x7db9bc802fb0>, 0)],
             'bool92': [(<numba.core.ir.Assign object at 0x7db9bc802c20>, 78)],
             'c0': [(<numba.core.ir.Assign object at 0x7db9bc7529e0>, 224),
                    (<numba.core.ir.Assign object at 0x7db9bdafa290>, 308),
                    (<numba.core.ir.Assign object at 0x7db9bc3c13f0>, 392),
                    (<numba.core.ir.Assign object at 0x7db9bcb02a10>, 476)],
             'eq': [(<numba.core.ir.Assign object at 0x7db9bc4f0040>, 188),
                    (<numba.core.ir.Assign object at 0x7db9bc753520>, 272),
                    (<numba.core.ir.Assign object at 0x7db9bdafad40>, 356),
                    (<numba.core.ir.Assign object at 0x7db9bc3c1f00>, 440)],
             'ii0': [(<numba.core.ir.Assign object at 0x7db9bc44fc10>, 0)],
             'ii1': [(<numba.core.ir.Assign object at 0x7db9bc44e020>, 0)],
             'ii2': [(<numba.core.ir.Assign object at 0x7db9bc44fbb0>, 0)],
             'ii3': [(<numba.core.ir.Assign object at 0x7db9bc44fd30>, 0)],
             'indices': [(<numba.core.ir.Assign object at 0x7db9bc801720>, 0)],
             'ix': [(<numba.core.ir.Assign object at 0x7db9bc4f2e00>, 188),
                    (<numba.core.ir.Assign object at 0x7db9bc750790>, 272),
                    (<numba.core.ir.Assign object at 0x7db9bdafbdc0>, 356),
                    (<numba.core.ir.Assign object at 0x7db9bc3c05b0>, 440)],
             'n0': [(<numba.core.ir.Assign object at 0x7db9bc44e830>, 0)],
             'n1': [(<numba.core.ir.Assign object at 0x7db9bc44cd90>, 0)],
             'n2': [(<numba.core.ir.Assign object at 0x7db9bc8020b0>, 0)],
             'n3': [(<numba.core.ir.Assign object at 0x7db9bc801db0>, 0)],
             'norm_distances': [(<numba.core.ir.Assign object at 0x7db9bc801030>,
                                 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7db9bc44e530>, 0)],
             'x1': [(<numba.core.ir.Assign object at 0x7db9bc44f0a0>, 0)],
             'x2': [(<numba.core.ir.Assign object at 0x7db9bc44d6f0>, 0)],
             'x3': [(<numba.core.ir.Assign object at 0x7db9bc44c2e0>, 0)]})
2025-06-18 10:06:37,227 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc44e350>
2025-06-18 10:06:37,227 - DEBUG - ssa.py:63 - Fix SSA violator on var ix
2025-06-18 10:06:37,227 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,227 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,227 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,228 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,228 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,228 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,229 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,229 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,229 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,229 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,229 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,229 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,229 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,230 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,230 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,230 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,230 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,230 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,230 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,230 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,230 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,230 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,231 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,231 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,231 - DEBUG - ssa.py:301 - first assign: ix
2025-06-18 10:06:37,231 - DEBUG - ssa.py:215 - replaced with: ix = $196unpack_sequence.4
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,231 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,231 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,231 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,231 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,231 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,232 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,232 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: ix = $280unpack_sequence.4
2025-06-18 10:06:37,232 - DEBUG - ssa.py:215 - replaced with: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: eq = $280unpack_sequence.5
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,232 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,232 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,232 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,232 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix - $const310.1.4
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,232 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix - $const324.7.4
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,233 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,233 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: ix = $364unpack_sequence.4
2025-06-18 10:06:37,233 - DEBUG - ssa.py:215 - replaced with: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: eq = $364unpack_sequence.5
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,233 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,233 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,233 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,233 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix - $const394.1.4
2025-06-18 10:06:37,233 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix - $const408.7.4
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,234 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,234 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: ix = $448unpack_sequence.4
2025-06-18 10:06:37,234 - DEBUG - ssa.py:215 - replaced with: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: eq = $448unpack_sequence.5
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,234 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,234 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,234 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,234 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,235 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix - $const478.1.4
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix - $const492.7.4
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,235 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,235 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,235 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {188: [<numba.core.ir.Assign object at 0x7db9bc44fbe0>],
             272: [<numba.core.ir.Assign object at 0x7db9bc44df60>],
             356: [<numba.core.ir.Assign object at 0x7db9bc44d1b0>],
             440: [<numba.core.ir.Assign object at 0x7db9bc44f430>]})
2025-06-18 10:06:37,235 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,235 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,235 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,236 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,237 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,237 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,237 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,237 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,237 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,237 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,237 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,237 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,238 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,238 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,238 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,238 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,238 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,238 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,238 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,238 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,239 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,239 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,239 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,239 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,239 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,239 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,239 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,239 - DEBUG - ssa.py:385 - find_def var='ix' stmt=indices[0] = ix
2025-06-18 10:06:37,239 - DEBUG - ssa.py:416 - find_def_from_top label 206
2025-06-18 10:06:37,239 - DEBUG - ssa.py:453 - idom 188 from label 206
2025-06-18 10:06:37,240 - DEBUG - ssa.py:459 - find_def_from_bottom label 188
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,240 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,240 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,240 - DEBUG - ssa.py:416 - find_def_from_top label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:453 - idom 188 from label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:459 - find_def_from_bottom label 188
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,240 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,240 - DEBUG - ssa.py:416 - find_def_from_top label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:453 - idom 188 from label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:459 - find_def_from_bottom label 188
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:416 - find_def_from_top label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:453 - idom 188 from label 224
2025-06-18 10:06:37,240 - DEBUG - ssa.py:459 - find_def_from_bottom label 188
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,240 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,241 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,241 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: eq = $280unpack_sequence.5
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,241 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,241 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix
2025-06-18 10:06:37,241 - DEBUG - ssa.py:385 - find_def var='ix' stmt=indices[1] = ix
2025-06-18 10:06:37,241 - DEBUG - ssa.py:416 - find_def_from_top label 290
2025-06-18 10:06:37,241 - DEBUG - ssa.py:453 - idom 272 from label 290
2025-06-18 10:06:37,241 - DEBUG - ssa.py:459 - find_def_from_bottom label 272
2025-06-18 10:06:37,241 - DEBUG - ssa.py:215 - replaced with: indices[1] = ix.1
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,241 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,241 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,241 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix - $const310.1.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$312binary_subtract.2 = ix - $const310.1.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:416 - find_def_from_top label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:453 - idom 272 from label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:459 - find_def_from_bottom label 272
2025-06-18 10:06:37,242 - DEBUG - ssa.py:215 - replaced with: $312binary_subtract.2 = ix.1 - $const310.1.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix - $const324.7.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$326binary_subtract.8 = ix - $const324.7.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:416 - find_def_from_top label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:453 - idom 272 from label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:459 - find_def_from_bottom label 272
2025-06-18 10:06:37,242 - DEBUG - ssa.py:215 - replaced with: $326binary_subtract.8 = ix.1 - $const324.7.4
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$342binary_subscr.15 = getitem(value=ii1, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:416 - find_def_from_top label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:453 - idom 272 from label 308
2025-06-18 10:06:37,242 - DEBUG - ssa.py:459 - find_def_from_bottom label 272
2025-06-18 10:06:37,242 - DEBUG - ssa.py:215 - replaced with: $342binary_subscr.15 = getitem(value=ii1, index=ix.1, fn=<built-in function getitem>)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,242 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,242 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,242 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: eq = $364unpack_sequence.5
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,243 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,243 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix
2025-06-18 10:06:37,243 - DEBUG - ssa.py:385 - find_def var='ix' stmt=indices[2] = ix
2025-06-18 10:06:37,243 - DEBUG - ssa.py:416 - find_def_from_top label 374
2025-06-18 10:06:37,243 - DEBUG - ssa.py:453 - idom 356 from label 374
2025-06-18 10:06:37,243 - DEBUG - ssa.py:459 - find_def_from_bottom label 356
2025-06-18 10:06:37,243 - DEBUG - ssa.py:215 - replaced with: indices[2] = ix.2
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,243 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,243 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,243 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix - $const394.1.4
2025-06-18 10:06:37,243 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$396binary_subtract.2 = ix - $const394.1.4
2025-06-18 10:06:37,243 - DEBUG - ssa.py:416 - find_def_from_top label 392
2025-06-18 10:06:37,243 - DEBUG - ssa.py:453 - idom 356 from label 392
2025-06-18 10:06:37,243 - DEBUG - ssa.py:459 - find_def_from_bottom label 356
2025-06-18 10:06:37,244 - DEBUG - ssa.py:215 - replaced with: $396binary_subtract.2 = ix.2 - $const394.1.4
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix - $const408.7.4
2025-06-18 10:06:37,244 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$410binary_subtract.8 = ix - $const408.7.4
2025-06-18 10:06:37,244 - DEBUG - ssa.py:416 - find_def_from_top label 392
2025-06-18 10:06:37,244 - DEBUG - ssa.py:453 - idom 356 from label 392
2025-06-18 10:06:37,244 - DEBUG - ssa.py:459 - find_def_from_bottom label 356
2025-06-18 10:06:37,244 - DEBUG - ssa.py:215 - replaced with: $410binary_subtract.8 = ix.2 - $const408.7.4
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$426binary_subscr.15 = getitem(value=ii2, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:416 - find_def_from_top label 392
2025-06-18 10:06:37,244 - DEBUG - ssa.py:453 - idom 356 from label 392
2025-06-18 10:06:37,244 - DEBUG - ssa.py:459 - find_def_from_bottom label 356
2025-06-18 10:06:37,244 - DEBUG - ssa.py:215 - replaced with: $426binary_subscr.15 = getitem(value=ii2, index=ix.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,244 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,244 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,244 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: eq = $448unpack_sequence.5
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,245 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,245 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix
2025-06-18 10:06:37,245 - DEBUG - ssa.py:385 - find_def var='ix' stmt=indices[3] = ix
2025-06-18 10:06:37,245 - DEBUG - ssa.py:416 - find_def_from_top label 458
2025-06-18 10:06:37,245 - DEBUG - ssa.py:453 - idom 440 from label 458
2025-06-18 10:06:37,245 - DEBUG - ssa.py:459 - find_def_from_bottom label 440
2025-06-18 10:06:37,245 - DEBUG - ssa.py:215 - replaced with: indices[3] = ix.3
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,245 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,245 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix - $const478.1.4
2025-06-18 10:06:37,245 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$480binary_subtract.2 = ix - $const478.1.4
2025-06-18 10:06:37,245 - DEBUG - ssa.py:416 - find_def_from_top label 476
2025-06-18 10:06:37,245 - DEBUG - ssa.py:453 - idom 440 from label 476
2025-06-18 10:06:37,245 - DEBUG - ssa.py:459 - find_def_from_bottom label 440
2025-06-18 10:06:37,245 - DEBUG - ssa.py:215 - replaced with: $480binary_subtract.2 = ix.3 - $const478.1.4
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,245 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix - $const492.7.4
2025-06-18 10:06:37,246 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$494binary_subtract.8 = ix - $const492.7.4
2025-06-18 10:06:37,246 - DEBUG - ssa.py:416 - find_def_from_top label 476
2025-06-18 10:06:37,246 - DEBUG - ssa.py:453 - idom 440 from label 476
2025-06-18 10:06:37,246 - DEBUG - ssa.py:459 - find_def_from_bottom label 440
2025-06-18 10:06:37,246 - DEBUG - ssa.py:215 - replaced with: $494binary_subtract.8 = ix.3 - $const492.7.4
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:385 - find_def var='ix' stmt=$510binary_subscr.15 = getitem(value=ii3, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:416 - find_def_from_top label 476
2025-06-18 10:06:37,246 - DEBUG - ssa.py:453 - idom 440 from label 476
2025-06-18 10:06:37,246 - DEBUG - ssa.py:459 - find_def_from_bottom label 440
2025-06-18 10:06:37,246 - DEBUG - ssa.py:215 - replaced with: $510binary_subscr.15 = getitem(value=ii3, index=ix.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,246 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,246 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44c4c0>
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,246 - DEBUG - ssa.py:63 - Fix SSA violator on var eq
2025-06-18 10:06:37,246 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,246 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,246 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,247 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,248 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,248 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,248 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,248 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,248 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,248 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,248 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,248 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,248 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,249 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,249 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,249 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,249 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,249 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,249 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,249 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,249 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,250 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,250 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,250 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,250 - DEBUG - ssa.py:301 - first assign: eq
2025-06-18 10:06:37,250 - DEBUG - ssa.py:215 - replaced with: eq = $196unpack_sequence.5
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,250 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,250 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,250 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,250 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,250 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,251 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,251 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: eq = $280unpack_sequence.5
2025-06-18 10:06:37,251 - DEBUG - ssa.py:215 - replaced with: eq.1 = $280unpack_sequence.5
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,251 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,251 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix.1
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,251 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,251 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,251 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix.1 - $const310.1.4
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix.1 - $const324.7.4
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix.1, fn=<built-in function getitem>)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,252 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,252 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: eq = $364unpack_sequence.5
2025-06-18 10:06:37,252 - DEBUG - ssa.py:215 - replaced with: eq.2 = $364unpack_sequence.5
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,252 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,252 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix.2
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,252 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,253 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,253 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix.2 - $const394.1.4
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix.2 - $const408.7.4
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,253 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,253 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: eq = $448unpack_sequence.5
2025-06-18 10:06:37,253 - DEBUG - ssa.py:215 - replaced with: eq.3 = $448unpack_sequence.5
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,253 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,253 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,253 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix.3
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,254 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,254 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix.3 - $const478.1.4
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix.3 - $const492.7.4
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,254 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,254 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc44c610>
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,254 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {188: [<numba.core.ir.Assign object at 0x7db9bc44c220>],
             272: [<numba.core.ir.Assign object at 0x7db9bc44d150>],
             356: [<numba.core.ir.Assign object at 0x7db9bc44f6d0>],
             440: [<numba.core.ir.Assign object at 0x7db9bcb01d50>]})
2025-06-18 10:06:37,254 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,254 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,254 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,255 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,256 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,256 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,256 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,256 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,256 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,256 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,256 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,257 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,257 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,257 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,257 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,257 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,257 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,257 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,257 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,257 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,258 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,258 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,258 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,258 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:385 - find_def var='eq' stmt=$204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,258 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,258 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,258 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,258 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,258 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,259 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,259 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: eq.1 = $280unpack_sequence.5
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:385 - find_def var='eq' stmt=$288pred = call bool288(eq, func=bool288, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:215 - replaced with: $288pred = call bool288(eq.1, func=bool288, args=(Var(eq.1, interp.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,259 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,259 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,260 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix.1
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,260 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,260 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix.1 - $const310.1.4
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix.1 - $const324.7.4
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix.1, fn=<built-in function getitem>)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,260 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,260 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,260 - DEBUG - ssa.py:209 - on stmt: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: eq.2 = $364unpack_sequence.5
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:385 - find_def var='eq' stmt=$372pred = call bool372(eq, func=bool372, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:215 - replaced with: $372pred = call bool372(eq.2, func=bool372, args=(Var(eq.2, interp.py:187),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,261 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,261 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix.2
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,261 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,261 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix.2 - $const394.1.4
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix.2 - $const408.7.4
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,261 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,262 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,262 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: eq.3 = $448unpack_sequence.5
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:385 - find_def var='eq' stmt=$456pred = call bool456(eq, func=bool456, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:215 - replaced with: $456pred = call bool456(eq.3, func=bool456, args=(Var(eq.3, interp.py:196),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,262 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,262 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix.3
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,262 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,262 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix.3 - $const478.1.4
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,262 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix.3 - $const492.7.4
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,263 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,263 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44f940>
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,263 - DEBUG - ssa.py:63 - Fix SSA violator on var c0
2025-06-18 10:06:37,263 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,263 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,263 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,264 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,264 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,264 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,264 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,265 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,265 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,265 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,265 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,265 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,265 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,265 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,265 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,266 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,266 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,266 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,266 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,266 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,266 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,266 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,266 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,266 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,267 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,267 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,267 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,267 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:301 - first assign: c0
2025-06-18 10:06:37,267 - DEBUG - ssa.py:215 - replaced with: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,267 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,267 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,267 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: eq.1 = $280unpack_sequence.5
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq.1, func=bool288, args=(Var(eq.1, interp.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,268 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,268 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix.1
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,268 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,268 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix.1 - $const310.1.4
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix.1 - $const324.7.4
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:215 - replaced with: c0.1 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix.1, fn=<built-in function getitem>)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,268 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,269 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,269 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: eq.2 = $364unpack_sequence.5
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq.2, func=bool372, args=(Var(eq.2, interp.py:187),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,269 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,269 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix.2
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,269 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,269 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix.2 - $const394.1.4
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix.2 - $const408.7.4
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:215 - replaced with: c0.2 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,269 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,270 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,270 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: eq.3 = $448unpack_sequence.5
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq.3, func=bool456, args=(Var(eq.3, interp.py:196),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,270 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,270 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix.3
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,270 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,270 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix.3 - $const478.1.4
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix.3 - $const492.7.4
2025-06-18 10:06:37,270 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:215 - replaced with: c0.3 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,271 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,271 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bcb00fd0>
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,271 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {224: [<numba.core.ir.Assign object at 0x7db9bc44f100>],
             308: [<numba.core.ir.Assign object at 0x7db9bc44fc70>],
             392: [<numba.core.ir.Assign object at 0x7db9bc44c4c0>],
             476: [<numba.core.ir.Assign object at 0x7db9bc74c9a0>]})
2025-06-18 10:06:37,271 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,271 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: x0 = arg(0, name=x0)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: x1 = arg(1, name=x1)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: x2 = arg(2, name=x2)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: x3 = arg(3, name=x3)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: ii0 = arg(4, name=ii0)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: ii1 = arg(5, name=ii1)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: ii2 = arg(6, name=ii2)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: ii3 = arg(7, name=ii3)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: n0 = call $2load_global.0(ii0, func=$2load_global.0, args=[Var(ii0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: $10load_global.3 = global(len: <built-in function len>)
2025-06-18 10:06:37,271 - DEBUG - ssa.py:209 - on stmt: n1 = call $10load_global.3(ii1, func=$10load_global.3, args=[Var(ii1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $18load_global.6 = global(len: <built-in function len>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: n2 = call $18load_global.6(ii2, func=$18load_global.6, args=[Var(ii2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $26load_global.9 = global(len: <built-in function len>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: n3 = call $26load_global.9(ii3, func=$26load_global.9, args=[Var(ii3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $34load_global.12 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $36load_attr.13 = getattr(value=$34load_global.12, attr=empty)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $const38.14.1 = const(int, 4)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $40load_global.15 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $42load_attr.16 = getattr(value=$40load_global.15, attr=uint32)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: indices = call $36load_attr.13($const38.14.1, func=$36load_attr.13, args=[Var($const38.14.1, interp.py:154)], kws=[('dtype', Var($42load_attr.16, interp.py:154))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $50load_global.19 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $52load_attr.20 = getattr(value=$50load_global.19, attr=empty)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $const54.21.1 = const(int, 4)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $56load_global.22 = global(nb: <module 'numba' from '/home/tnd/.local/lib/python3.10/site-packages/numba/__init__.py'>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $58load_attr.23 = getattr(value=$56load_global.22, attr=float64)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: norm_distances = call $52load_attr.20($const54.21.1, func=$52load_attr.20, args=[Var($const54.21.1, interp.py:155)], kws=[('dtype', Var($58load_attr.23, interp.py:155))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $const70.28.3 = const(int, 0)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $72binary_subscr.29 = static_getitem(value=ii0, index=0, index_var=$const70.28.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $74compare_op.30 = x0 < $72binary_subscr.29
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: bool76 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $76pred = call bool76($74compare_op.30, func=bool76, args=(Var($74compare_op.30, interp.py:158),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: branch $76pred, 178, 78
2025-06-18 10:06:37,272 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 78
2025-06-18 10:06:37,272 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $const84.3.4 = const(int, 1)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $86binary_subtract.4 = n0 - $const84.3.4
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $88binary_subscr.5 = getitem(value=ii0, index=$86binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: $90compare_op.6 = x0 > $88binary_subscr.5
2025-06-18 10:06:37,272 - DEBUG - ssa.py:209 - on stmt: bool92 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $92pred = call bool92($90compare_op.6, func=bool92, args=(Var($90compare_op.6, interp.py:159),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: branch $92pred, 178, 94
2025-06-18 10:06:37,273 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 94
2025-06-18 10:06:37,273 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $const98.2.3 = const(int, 0)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $100binary_subscr.3 = static_getitem(value=ii1, index=0, index_var=$const98.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $102compare_op.4 = x1 < $100binary_subscr.3
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.4, func=bool104, args=(Var($102compare_op.4, interp.py:160),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 178, 106
2025-06-18 10:06:37,273 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,273 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $const112.3.4 = const(int, 1)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $114binary_subtract.4 = n1 - $const112.3.4
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $116binary_subscr.5 = getitem(value=ii1, index=$114binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $118compare_op.6 = x1 > $116binary_subscr.5
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: bool120 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $120pred = call bool120($118compare_op.6, func=bool120, args=(Var($118compare_op.6, interp.py:161),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: branch $120pred, 178, 122
2025-06-18 10:06:37,273 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 122
2025-06-18 10:06:37,273 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $const126.2.3 = const(int, 0)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $128binary_subscr.3 = static_getitem(value=ii2, index=0, index_var=$const126.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $130compare_op.4 = x2 < $128binary_subscr.3
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: bool132 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $132pred = call bool132($130compare_op.4, func=bool132, args=(Var($130compare_op.4, interp.py:162),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: branch $132pred, 178, 134
2025-06-18 10:06:37,273 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 134
2025-06-18 10:06:37,273 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,273 - DEBUG - ssa.py:209 - on stmt: $const140.3.4 = const(int, 1)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $142binary_subtract.4 = n2 - $const140.3.4
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $144binary_subscr.5 = getitem(value=ii2, index=$142binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $146compare_op.6 = x2 > $144binary_subscr.5
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: bool148 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $148pred = call bool148($146compare_op.6, func=bool148, args=(Var($146compare_op.6, interp.py:163),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: branch $148pred, 178, 150
2025-06-18 10:06:37,274 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 150
2025-06-18 10:06:37,274 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $const154.2.3 = const(int, 0)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $156binary_subscr.3 = static_getitem(value=ii3, index=0, index_var=$const154.2.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $158compare_op.4 = x3 < $156binary_subscr.3
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: bool160 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $160pred = call bool160($158compare_op.4, func=bool160, args=(Var($158compare_op.4, interp.py:164),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: branch $160pred, 178, 162
2025-06-18 10:06:37,274 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 162
2025-06-18 10:06:37,274 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $const168.3.4 = const(int, 1)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $170binary_subtract.4 = n3 - $const168.3.4
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $172binary_subscr.5 = getitem(value=ii3, index=$170binary_subtract.4, fn=<built-in function getitem>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $174compare_op.6 = x3 > $172binary_subscr.5
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.6, func=bool176, args=(Var($174compare_op.6, interp.py:165),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 178, 188
2025-06-18 10:06:37,274 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:37,274 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $const182.2.5 = const(bool, True)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $184build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const182.2.5, interp.py:167)])
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: $186return_value.4 = cast(value=$184build_tuple.3)
2025-06-18 10:06:37,274 - DEBUG - ssa.py:209 - on stmt: return $186return_value.4
2025-06-18 10:06:37,274 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 188
2025-06-18 10:06:37,274 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $188load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $194call_function.3 = call $188load_global.0(ii0, x0, func=$188load_global.0, args=[Var(ii0, interp.py:146), Var(x0, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.6 = exhaust_iter(value=$194call_function.3, count=2)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.4 = static_getitem(value=$196unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $196unpack_sequence.5 = static_getitem(value=$196unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: ix = $196unpack_sequence.4
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: eq = $196unpack_sequence.5
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: bool204 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $204pred = call bool204(eq, func=bool204, args=(Var(eq, interp.py:169),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: branch $204pred, 206, 224
2025-06-18 10:06:37,275 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 206
2025-06-18 10:06:37,275 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const210.2.3 = const(int, 0)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: indices[0] = ix
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const214.3.3 = const(int, 0)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const218.5.3 = const(int, 0)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $const214.3.3
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,275 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 224
2025-06-18 10:06:37,275 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const226.1.4 = const(int, 1)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $228binary_subtract.2 = ix - $const226.1.4
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const232.4.3 = const(int, 0)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: indices[0] = $228binary_subtract.2
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $const240.7.4 = const(int, 1)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $242binary_subtract.8 = ix - $const240.7.4
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: c0 = getitem(value=ii0, index=$242binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,275 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$252binary_subtract.12 = x0 - c0
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $258binary_subscr.15 = getitem(value=ii0, index=ix, fn=<built-in function getitem>)
2025-06-18 10:06:37,275 - DEBUG - ssa.py:209 - on stmt: $262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,276 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$262binary_subtract.17 = $258binary_subscr.15 - c0
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $264binary_true_divide.18 = $252binary_subtract.12 / $262binary_subtract.17
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const268.20.3 = const(int, 0)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: norm_distances[0] = $264binary_true_divide.18
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: jump 272
2025-06-18 10:06:37,276 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 272
2025-06-18 10:06:37,276 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $272load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $278call_function.3 = call $272load_global.0(ii1, x1, func=$272load_global.0, args=[Var(ii1, interp.py:146), Var(x1, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.6 = exhaust_iter(value=$278call_function.3, count=2)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.4 = static_getitem(value=$280unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $280unpack_sequence.5 = static_getitem(value=$280unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: ix.1 = $280unpack_sequence.4
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: eq.1 = $280unpack_sequence.5
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: bool288 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $288pred = call bool288(eq.1, func=bool288, args=(Var(eq.1, interp.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: branch $288pred, 290, 308
2025-06-18 10:06:37,276 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 290
2025-06-18 10:06:37,276 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const294.2.4 = const(int, 1)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: indices[1] = ix.1
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const298.3.3 = const(int, 0)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const302.5.4 = const(int, 1)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $const298.3.3
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,276 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 308
2025-06-18 10:06:37,276 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const310.1.4 = const(int, 1)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $312binary_subtract.2 = ix.1 - $const310.1.4
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const316.4.4 = const(int, 1)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: indices[1] = $312binary_subtract.2
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $const324.7.4 = const(int, 1)
2025-06-18 10:06:37,276 - DEBUG - ssa.py:209 - on stmt: $326binary_subtract.8 = ix.1 - $const324.7.4
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: c0.1 = getitem(value=ii1, index=$326binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,277 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$336binary_subtract.12 = x1 - c0
2025-06-18 10:06:37,277 - DEBUG - ssa.py:215 - replaced with: $336binary_subtract.12 = x1 - c0.1
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $342binary_subscr.15 = getitem(value=ii1, index=ix.1, fn=<built-in function getitem>)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,277 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$346binary_subtract.17 = $342binary_subscr.15 - c0
2025-06-18 10:06:37,277 - DEBUG - ssa.py:215 - replaced with: $346binary_subtract.17 = $342binary_subscr.15 - c0.1
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $348binary_true_divide.18 = $336binary_subtract.12 / $346binary_subtract.17
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $const352.20.4 = const(int, 1)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: norm_distances[1] = $348binary_true_divide.18
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: jump 356
2025-06-18 10:06:37,277 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 356
2025-06-18 10:06:37,277 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $356load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $362call_function.3 = call $356load_global.0(ii2, x2, func=$356load_global.0, args=[Var(ii2, interp.py:146), Var(x2, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.6 = exhaust_iter(value=$362call_function.3, count=2)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.4 = static_getitem(value=$364unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $364unpack_sequence.5 = static_getitem(value=$364unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: ix.2 = $364unpack_sequence.4
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: eq.2 = $364unpack_sequence.5
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: bool372 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $372pred = call bool372(eq.2, func=bool372, args=(Var(eq.2, interp.py:187),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: branch $372pred, 374, 392
2025-06-18 10:06:37,277 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 374
2025-06-18 10:06:37,277 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: $const378.2.6 = const(int, 2)
2025-06-18 10:06:37,277 - DEBUG - ssa.py:209 - on stmt: indices[2] = ix.2
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const382.3.3 = const(int, 0)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const386.5.6 = const(int, 2)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $const382.3.3
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,278 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 392
2025-06-18 10:06:37,278 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const394.1.4 = const(int, 1)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $396binary_subtract.2 = ix.2 - $const394.1.4
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const400.4.6 = const(int, 2)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: indices[2] = $396binary_subtract.2
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const408.7.4 = const(int, 1)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $410binary_subtract.8 = ix.2 - $const408.7.4
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: c0.2 = getitem(value=ii2, index=$410binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,278 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$420binary_subtract.12 = x2 - c0
2025-06-18 10:06:37,278 - DEBUG - ssa.py:215 - replaced with: $420binary_subtract.12 = x2 - c0.2
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $426binary_subscr.15 = getitem(value=ii2, index=ix.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,278 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$430binary_subtract.17 = $426binary_subscr.15 - c0
2025-06-18 10:06:37,278 - DEBUG - ssa.py:215 - replaced with: $430binary_subtract.17 = $426binary_subscr.15 - c0.2
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $432binary_true_divide.18 = $420binary_subtract.12 / $430binary_subtract.17
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $const436.20.6 = const(int, 2)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: norm_distances[2] = $432binary_true_divide.18
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: jump 440
2025-06-18 10:06:37,278 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 440
2025-06-18 10:06:37,278 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $440load_global.0 = global(searchsorted: CPUDispatcher(<function searchsorted at 0x7db9bf829990>))
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $446call_function.3 = call $440load_global.0(ii3, x3, func=$440load_global.0, args=[Var(ii3, interp.py:146), Var(x3, interp.py:146)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.6 = exhaust_iter(value=$446call_function.3, count=2)
2025-06-18 10:06:37,278 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.4 = static_getitem(value=$448unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $448unpack_sequence.5 = static_getitem(value=$448unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: ix.3 = $448unpack_sequence.4
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: eq.3 = $448unpack_sequence.5
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: bool456 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $456pred = call bool456(eq.3, func=bool456, args=(Var(eq.3, interp.py:196),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: branch $456pred, 458, 476
2025-06-18 10:06:37,279 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 458
2025-06-18 10:06:37,279 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const462.2.7 = const(int, 3)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: indices[3] = ix.3
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const466.3.3 = const(int, 0)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const470.5.7 = const(int, 3)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $const466.3.3
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,279 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 476
2025-06-18 10:06:37,279 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const478.1.4 = const(int, 1)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $480binary_subtract.2 = ix.3 - $const478.1.4
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const484.4.7 = const(int, 3)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: indices[3] = $480binary_subtract.2
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $const492.7.4 = const(int, 1)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $494binary_subtract.8 = ix.3 - $const492.7.4
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: c0.3 = getitem(value=ii3, index=$494binary_subtract.8, fn=<built-in function getitem>)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,279 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$504binary_subtract.12 = x3 - c0
2025-06-18 10:06:37,279 - DEBUG - ssa.py:215 - replaced with: $504binary_subtract.12 = x3 - c0.3
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $510binary_subscr.15 = getitem(value=ii3, index=ix.3, fn=<built-in function getitem>)
2025-06-18 10:06:37,279 - DEBUG - ssa.py:209 - on stmt: $514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,279 - DEBUG - ssa.py:385 - find_def var='c0' stmt=$514binary_subtract.17 = $510binary_subscr.15 - c0
2025-06-18 10:06:37,279 - DEBUG - ssa.py:215 - replaced with: $514binary_subtract.17 = $510binary_subscr.15 - c0.3
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: $516binary_true_divide.18 = $504binary_subtract.12 / $514binary_subtract.17
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: $const520.20.7 = const(int, 3)
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: norm_distances[3] = $516binary_true_divide.18
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: jump 524
2025-06-18 10:06:37,280 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 524
2025-06-18 10:06:37,280 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc44d360>
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: $const528.2.8 = const(bool, False)
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: $530build_tuple.3 = build_tuple(items=[Var(indices, interp.py:154), Var(norm_distances, interp.py:155), Var($const528.2.8, interp.py:205)])
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: $532return_value.4 = cast(value=$530build_tuple.3)
2025-06-18 10:06:37,280 - DEBUG - ssa.py:209 - on stmt: return $532return_value.4
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,287 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1']
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:342 - stack ['$10call_function.4']
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,288 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,289 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(uint32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:37,291 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,291 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc055b40>
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: $8load_deref.3 = freevar(retty: array(uint32, 1d, C))
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-06-18 10:06:37,291 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:37,291 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7db9bc054bb0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9bc0545b0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc054520>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7db9bc054400>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9bc054580>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9bc0572b0>, 0)]})
2025-06-18 10:06:37,292 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc055b40>
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:342 - stack ['$arrtype2.0']
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:342 - stack ['$4load_method.1']
2025-06-18 10:06:37,428 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:342 - stack ['$4load_method.1', '$size6.2']
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:342 - stack ['$4load_method.1', '$size6.2', '$align8.3']
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:342 - stack ['$10call_method.4']
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,429 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,429 - DEBUG - interpreter.py:1420 - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:37,432 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,432 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc7f5600>
2025-06-18 10:06:37,432 - DEBUG - ssa.py:209 - on stmt: arrtype = arg(0, name=arrtype)
2025-06-18 10:06:37,432 - DEBUG - ssa.py:209 - on stmt: size = arg(1, name=size)
2025-06-18 10:06:37,432 - DEBUG - ssa.py:209 - on stmt: align = arg(2, name=align)
2025-06-18 10:06:37,433 - DEBUG - ssa.py:209 - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
2025-06-18 10:06:37,433 - DEBUG - ssa.py:209 - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,433 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-06-18 10:06:37,433 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:37,433 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7db9bc7f4e80>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9bc7f7850>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7db9bc7f75e0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7db9bc7f4f40>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7db9bc7f61d0>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7db9bc7f7070>, 0)]})
2025-06-18 10:06:37,433 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc7f5600>
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
2025-06-18 10:06:37,435 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$allocsize4.1']
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:342 - stack ['$8call_function.3']
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,436 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,436 - DEBUG - interpreter.py:1420 - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2025-06-18 10:06:37,438 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,438 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc08d9c0>
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: cls = arg(0, name=cls)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: allocsize = arg(1, name=allocsize)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: align = arg(2, name=align)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: $10return_value.4 = cast(value=$8call_function.3)
2025-06-18 10:06:37,438 - DEBUG - ssa.py:209 - on stmt: return $10return_value.4
2025-06-18 10:06:37,438 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7db9bc08c3a0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc08cb50>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7db9bc08fd30>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7db9bc08c6a0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7db9bc08f850>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7db9bc08f490>, 0)]})
2025-06-18 10:06:37,439 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc08d9c0>
2025-06-18 10:06:37,497 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1']
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:342 - stack ['$10call_function.4']
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,498 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,499 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,499 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:37,501 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,501 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc77ded0>
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-06-18 10:06:37,501 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:37,501 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7db9bc77fee0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9bc77dab0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc77fd30>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7db9bc77d8a0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9bc77dae0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9bc77ea70>, 0)]})
2025-06-18 10:06:37,501 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc77ded0>
2025-06-18 10:06:37,537 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_FAST(arg=2, lineno=14)
           4	LOAD_CONST(arg=1, lineno=14)
           6	COMPARE_OP(arg=2, lineno=14)
           8	POP_JUMP_IF_FALSE(arg=10, lineno=14)
          10	LOAD_GLOBAL(arg=0, lineno=15)
          12	LOAD_FAST(arg=0, lineno=15)
          14	CALL_FUNCTION(arg=1, lineno=15)
          16	STORE_FAST(arg=2, lineno=15)
>         18	LOAD_CONST(arg=2, lineno=17)
          20	STORE_FAST(arg=3, lineno=17)
          22	LOAD_FAST(arg=2, lineno=18)
          24	LOAD_CONST(arg=3, lineno=18)
          26	BINARY_SUBTRACT(arg=None, lineno=18)
          28	STORE_FAST(arg=4, lineno=18)
          30	LOAD_CONST(arg=4, lineno=19)
          32	STORE_FAST(arg=5, lineno=19)
          34	LOAD_CONST(arg=4, lineno=20)
          36	STORE_FAST(arg=6, lineno=20)
          38	LOAD_FAST(arg=3, lineno=21)
          40	LOAD_FAST(arg=4, lineno=21)
          42	BINARY_ADD(arg=None, lineno=21)
          44	LOAD_CONST(arg=5, lineno=21)
          46	BINARY_FLOOR_DIVIDE(arg=None, lineno=21)
          48	STORE_FAST(arg=7, lineno=21)
          50	LOAD_FAST(arg=5, lineno=22)
          52	POP_JUMP_IF_TRUE(arg=74, lineno=22)
>         54	LOAD_FAST(arg=0, lineno=23)
          56	LOAD_FAST(arg=7, lineno=23)
          58	BINARY_SUBSCR(arg=None, lineno=23)
          60	STORE_FAST(arg=8, lineno=23)
          62	LOAD_FAST(arg=8, lineno=24)
          64	LOAD_FAST(arg=1, lineno=24)
          66	COMPARE_OP(arg=0, lineno=24)
          68	POP_JUMP_IF_FALSE(arg=41, lineno=24)
          70	LOAD_FAST(arg=7, lineno=25)
          72	LOAD_CONST(arg=3, lineno=25)
          74	BINARY_ADD(arg=None, lineno=25)
          76	STORE_FAST(arg=3, lineno=25)
          78	JUMP_FORWARD(arg=19, lineno=25)
>         80	LOAD_FAST(arg=8, lineno=26)
          82	LOAD_FAST(arg=1, lineno=26)
          84	COMPARE_OP(arg=4, lineno=26)
          86	POP_JUMP_IF_FALSE(arg=50, lineno=26)
          88	LOAD_FAST(arg=7, lineno=27)
          90	LOAD_CONST(arg=3, lineno=27)
          92	BINARY_SUBTRACT(arg=None, lineno=27)
          94	STORE_FAST(arg=4, lineno=27)
          96	JUMP_FORWARD(arg=10, lineno=27)
>         98	LOAD_FAST(arg=8, lineno=28)
         100	LOAD_FAST(arg=1, lineno=28)
         102	COMPARE_OP(arg=2, lineno=28)
         104	POP_JUMP_IF_FALSE(arg=60, lineno=28)
         106	LOAD_FAST(arg=7, lineno=29)
         108	STORE_FAST(arg=3, lineno=29)
         110	LOAD_CONST(arg=6, lineno=30)
         112	STORE_FAST(arg=6, lineno=30)
         114	LOAD_CONST(arg=6, lineno=31)
         116	STORE_FAST(arg=5, lineno=31)
>        118	LOAD_FAST(arg=3, lineno=32)
         120	LOAD_FAST(arg=4, lineno=32)
         122	BINARY_ADD(arg=None, lineno=32)
         124	LOAD_CONST(arg=5, lineno=32)
         126	BINARY_FLOOR_DIVIDE(arg=None, lineno=32)
         128	STORE_FAST(arg=7, lineno=32)
         130	LOAD_FAST(arg=3, lineno=33)
         132	LOAD_FAST(arg=4, lineno=33)
         134	COMPARE_OP(arg=4, lineno=33)
         136	POP_JUMP_IF_FALSE(arg=72, lineno=33)
         138	LOAD_CONST(arg=6, lineno=34)
         140	STORE_FAST(arg=5, lineno=34)
>        142	LOAD_FAST(arg=5, lineno=22)
         144	POP_JUMP_IF_FALSE(arg=28, lineno=22)
>        146	LOAD_FAST(arg=3, lineno=35)
         148	LOAD_FAST(arg=6, lineno=35)
         150	BUILD_TUPLE(arg=2, lineno=35)
         152	RETURN_VALUE(arg=None, lineno=35)
2025-06-18 10:06:37,537 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,537 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,537 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=10)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=14)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=14)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$N2.0']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=COMPARE_OP(arg=2, lineno=14)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$N2.0', '$const4.1.1']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=10, lineno=14)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$6compare_op.2']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=18 nstack_initial=0)])
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=10 nstack_initial=0)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=15)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=15)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$10load_global.0']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=15)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$10load_global.0', '$arr12.1']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=STORE_FAST(arg=2, lineno=15)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$14call_function.2']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=18 nstack_initial=0), State(pc_initial=18 nstack_initial=0)])
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=18 nstack_initial=0)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=17)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=STORE_FAST(arg=3, lineno=17)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack ['$const18.0.2']
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=18)
2025-06-18 10:06:37,538 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=18)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$N22.1']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=18)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$N22.1', '$const24.2.3']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=28, inst=STORE_FAST(arg=4, lineno=18)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$26binary_subtract.3']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=19)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=32, inst=STORE_FAST(arg=5, lineno=19)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$const30.4.4']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=34, inst=LOAD_CONST(arg=4, lineno=20)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=36, inst=STORE_FAST(arg=6, lineno=20)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$const34.5.4']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=38, inst=LOAD_FAST(arg=3, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=40, inst=LOAD_FAST(arg=4, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$L38.6']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$L38.6', '$R40.7']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=44, inst=LOAD_CONST(arg=5, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$42binary_add.8']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=46, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$42binary_add.8', '$const44.9.5']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=48, inst=STORE_FAST(arg=7, lineno=21)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$46binary_floor_divide.10']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=22)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:341 - dispatch pc=52, inst=POP_JUMP_IF_TRUE(arg=74, lineno=22)
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:342 - stack ['$done50.11']
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=18 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2025-06-18 10:06:37,539 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=23)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=23)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$arr54.0']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=23)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$arr54.0', '$m56.1']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=60, inst=STORE_FAST(arg=8, lineno=23)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$58binary_subscr.2']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=24)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=64, inst=LOAD_FAST(arg=1, lineno=24)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$xm62.3']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=66, inst=COMPARE_OP(arg=0, lineno=24)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$xm62.3', '$x64.4']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=41, lineno=24)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$66compare_op.5']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=80, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=70 nstack_initial=0), State(pc_initial=80 nstack_initial=0)])
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=35)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=148, inst=LOAD_FAST(arg=6, lineno=35)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$L146.0']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=150, inst=BUILD_TUPLE(arg=2, lineno=35)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$L146.0', '$eq148.1']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:341 - dispatch pc=152, inst=RETURN_VALUE(arg=None, lineno=35)
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:342 - stack ['$150build_tuple.2']
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=80 nstack_initial=0)])
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,540 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=70, inst=LOAD_FAST(arg=7, lineno=25)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=72, inst=LOAD_CONST(arg=3, lineno=25)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$m70.0']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=74, inst=BINARY_ADD(arg=None, lineno=25)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$m70.0', '$const72.1.3']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=76, inst=STORE_FAST(arg=3, lineno=25)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$74binary_add.2']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=78, inst=JUMP_FORWARD(arg=19, lineno=25)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=80 nstack_initial=0)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=80, inst=LOAD_FAST(arg=8, lineno=26)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=26)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$xm80.0']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=84, inst=COMPARE_OP(arg=4, lineno=26)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$xm80.0', '$x82.1']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=50, lineno=26)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$84compare_op.2']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=118 nstack_initial=0)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=32)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=120, inst=LOAD_FAST(arg=4, lineno=32)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$L118.0']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=122, inst=BINARY_ADD(arg=None, lineno=32)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$L118.0', '$R120.1']
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:341 - dispatch pc=124, inst=LOAD_CONST(arg=5, lineno=32)
2025-06-18 10:06:37,541 - DEBUG - byteflow.py:342 - stack ['$122binary_add.2']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=126, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=32)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$122binary_add.2', '$const124.3.5']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=128, inst=STORE_FAST(arg=7, lineno=32)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$126binary_floor_divide.4']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=130, inst=LOAD_FAST(arg=3, lineno=33)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=132, inst=LOAD_FAST(arg=4, lineno=33)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$L130.5']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=134, inst=COMPARE_OP(arg=4, lineno=33)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$L130.5', '$R132.6']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=72, lineno=33)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$134compare_op.7']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=142, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=142 nstack_initial=0)])
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=88 nstack_initial=0)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=27)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=27)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$m88.0']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=92, inst=BINARY_SUBTRACT(arg=None, lineno=27)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$m88.0', '$const90.1.3']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=27)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack ['$92binary_subtract.2']
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=96, inst=JUMP_FORWARD(arg=10, lineno=27)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=98, inst=LOAD_FAST(arg=8, lineno=28)
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,542 - DEBUG - byteflow.py:341 - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=28)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack ['$xm98.0']
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=102, inst=COMPARE_OP(arg=2, lineno=28)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack ['$xm98.0', '$x100.1']
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=60, lineno=28)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack ['$102compare_op.2']
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=118, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=138, inst=LOAD_CONST(arg=6, lineno=34)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=140, inst=STORE_FAST(arg=5, lineno=34)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack ['$const138.0.6']
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=142, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=142 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=142 nstack_initial=0)])
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=142 nstack_initial=0)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=142, inst=LOAD_FAST(arg=5, lineno=22)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=28, lineno=22)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:342 - stack ['$done142.0']
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=54, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-06-18 10:06:37,543 - DEBUG - byteflow.py:341 - dispatch pc=106, inst=LOAD_FAST(arg=7, lineno=29)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:341 - dispatch pc=108, inst=STORE_FAST(arg=3, lineno=29)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack ['$m106.0']
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:341 - dispatch pc=110, inst=LOAD_CONST(arg=6, lineno=30)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:341 - dispatch pc=112, inst=STORE_FAST(arg=6, lineno=30)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack ['$const110.1.6']
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:341 - dispatch pc=114, inst=LOAD_CONST(arg=6, lineno=31)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:341 - dispatch pc=116, inst=STORE_FAST(arg=5, lineno=31)
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:342 - stack ['$const114.2.6']
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=118 nstack_initial=0)])
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=142 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set()})
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,544 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$N2.0'}), (4, {'res': '$const4.1.1'}), (6, {'lhs': '$N2.0', 'rhs': '$const4.1.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 18: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_global.0'}), (12, {'res': '$arr12.1'}), (14, {'func': '$10load_global.0', 'args': ['$arr12.1'], 'res': '$14call_function.2'}), (16, {'value': '$14call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=((18, {'res': '$const18.0.2'}), (20, {'value': '$const18.0.2'}), (22, {'res': '$N22.1'}), (24, {'res': '$const24.2.3'}), (26, {'lhs': '$N22.1', 'rhs': '$const24.2.3', 'res': '$26binary_subtract.3'}), (28, {'value': '$26binary_subtract.3'}), (30, {'res': '$const30.4.4'}), (32, {'value': '$const30.4.4'}), (34, {'res': '$const34.5.4'}), (36, {'value': '$const34.5.4'}), (38, {'res': '$L38.6'}), (40, {'res': '$R40.7'}), (42, {'lhs': '$L38.6', 'rhs': '$R40.7', 'res': '$42binary_add.8'}), (44, {'res': '$const44.9.5'}), (46, {'lhs': '$42binary_add.8', 'rhs': '$const44.9.5', 'res': '$46binary_floor_divide.10'}), (48, {'value': '$46binary_floor_divide.10'}), (50, {'res': '$done50.11'}), (52, {'pred': '$done50.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 146: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$arr54.0'}), (56, {'res': '$m56.1'}), (58, {'index': '$m56.1', 'target': '$arr54.0', 'res': '$58binary_subscr.2'}), (60, {'value': '$58binary_subscr.2'}), (62, {'res': '$xm62.3'}), (64, {'res': '$x64.4'}), (66, {'lhs': '$xm62.3', 'rhs': '$x64.4', 'res': '$66compare_op.5'}), (68, {'pred': '$66compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 80: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$m70.0'}), (72, {'res': '$const72.1.3'}), (74, {'lhs': '$m70.0', 'rhs': '$const72.1.3', 'res': '$74binary_add.2'}), (76, {'value': '$74binary_add.2'}), (78, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$xm80.0'}), (82, {'res': '$x82.1'}), (84, {'lhs': '$xm80.0', 'rhs': '$x82.1', 'res': '$84compare_op.2'}), (86, {'pred': '$84compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 98: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$m88.0'}), (90, {'res': '$const90.1.3'}), (92, {'lhs': '$m88.0', 'rhs': '$const90.1.3', 'res': '$92binary_subtract.2'}), (94, {'value': '$92binary_subtract.2'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$xm98.0'}), (100, {'res': '$x100.1'}), (102, {'lhs': '$xm98.0', 'rhs': '$x100.1', 'res': '$102compare_op.2'}), (104, {'pred': '$102compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 118: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$m106.0'}), (108, {'value': '$m106.0'}), (110, {'res': '$const110.1.6'}), (112, {'value': '$const110.1.6'}), (114, {'res': '$const114.2.6'}), (116, {'value': '$const114.2.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$L118.0'}), (120, {'res': '$R120.1'}), (122, {'lhs': '$L118.0', 'rhs': '$R120.1', 'res': '$122binary_add.2'}), (124, {'res': '$const124.3.5'}), (126, {'lhs': '$122binary_add.2', 'rhs': '$const124.3.5', 'res': '$126binary_floor_divide.4'}), (128, {'value': '$126binary_floor_divide.4'}), (130, {'res': '$L130.5'}), (132, {'res': '$R132.6'}), (134, {'lhs': '$L130.5', 'rhs': '$R132.6', 'res': '$134compare_op.7'}), (136, {'pred': '$134compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 142: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$const138.0.6'}), (140, {'value': '$const138.0.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=142 nstack_initial=0):
AdaptBlockInfo(insts=((142, {'res': '$done142.0'}), (144, {'pred': '$done142.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 54: ()})
2025-06-18 10:06:37,545 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$L146.0'}), (148, {'res': '$eq148.1'}), (150, {'items': ['$L146.0', '$eq148.1'], 'res': '$150build_tuple.2'}), (152, {'retval': '$150build_tuple.2', 'castval': '$152return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,547 - DEBUG - interpreter.py:1420 - label 0:
    arr = arg(0, name=arr)                   ['arr']
    x = arg(1, name=x)                       ['x']
    N = arg(2, name=N)                       ['N']
    $const4.1.1 = const(int, -1)             ['$const4.1.1']
    $6compare_op.2 = N == $const4.1.1        ['$6compare_op.2', '$const4.1.1', 'N']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 18                    ['$8pred']
label 10:
    $10load_global.0 = global(len: <built-in function len>) ['$10load_global.0']
    N = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.0', 'N', 'arr']
    jump 18                                  []
label 18:
    L = const(int, 0)                        ['L']
    $const24.2.3 = const(int, 1)             ['$const24.2.3']
    R = N - $const24.2.3                     ['$const24.2.3', 'N', 'R']
    done = const(bool, False)                ['done']
    eq = const(bool, False)                  ['eq']
    $42binary_add.8 = L + R                  ['$42binary_add.8', 'L', 'R']
    $const44.9.5 = const(int, 2)             ['$const44.9.5']
    m = $42binary_add.8 // $const44.9.5      ['$42binary_add.8', '$const44.9.5', 'm']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
    $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None) ['$52pred', 'bool52', 'done']
    branch $52pred, 146, 54                  ['$52pred']
label 54:
    xm = getitem(value=arr, index=m, fn=<built-in function getitem>) ['arr', 'm', 'xm']
    $66compare_op.5 = xm < x                 ['$66compare_op.5', 'x', 'xm']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.5', '$68pred', 'bool68']
    branch $68pred, 70, 80                   ['$68pred']
label 70:
    $const72.1.3 = const(int, 1)             ['$const72.1.3']
    L = m + $const72.1.3                     ['$const72.1.3', 'L', 'm']
    jump 118                                 []
label 80:
    $84compare_op.2 = xm > x                 ['$84compare_op.2', 'x', 'xm']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.2', '$86pred', 'bool86']
    branch $86pred, 88, 98                   ['$86pred']
label 88:
    $const90.1.3 = const(int, 1)             ['$const90.1.3']
    R = m - $const90.1.3                     ['$const90.1.3', 'R', 'm']
    jump 118                                 []
label 98:
    $102compare_op.2 = xm == x               ['$102compare_op.2', 'x', 'xm']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.2', '$104pred', 'bool104']
    branch $104pred, 106, 118                ['$104pred']
label 106:
    L = m                                    ['L', 'm']
    eq = const(bool, True)                   ['eq']
    done = const(bool, True)                 ['done']
    jump 118                                 []
label 118:
    $122binary_add.2 = L + R                 ['$122binary_add.2', 'L', 'R']
    $const124.3.5 = const(int, 2)            ['$const124.3.5']
    m = $122binary_add.2 // $const124.3.5    ['$122binary_add.2', '$const124.3.5', 'm']
    $134compare_op.7 = L > R                 ['$134compare_op.7', 'L', 'R']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.7', '$136pred', 'bool136']
    branch $136pred, 138, 142                ['$136pred']
label 138:
    done = const(bool, True)                 ['done']
    jump 142                                 []
label 142:
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None) ['$144pred', 'bool144', 'done']
    branch $144pred, 146, 54                 ['$144pred']
label 146:
    $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)]) ['$150build_tuple.2', 'L', 'eq']
    $152return_value.3 = cast(value=$150build_tuple.2) ['$150build_tuple.2', '$152return_value.3']
    return $152return_value.3                ['$152return_value.3']

2025-06-18 10:06:37,553 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,553 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,554 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 10
2025-06-18 10:06:37,554 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: N = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,554 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 18
2025-06-18 10:06:37,554 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: R = N - $const24.2.3
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,554 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,554 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 54
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,555 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 70
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: L = m + $const72.1.3
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,555 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 80
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,555 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 88
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,555 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 98
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,555 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,555 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 106
2025-06-18 10:06:37,555 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: L = m
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,556 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 118
2025-06-18 10:06:37,556 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L + R
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L > R
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,556 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 138
2025-06-18 10:06:37,556 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,556 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 142
2025-06-18 10:06:37,556 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,556 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 146
2025-06-18 10:06:37,556 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bc689540>
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,556 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,556 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$102compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b7ce6b60>,
                                   98)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7db9b7ce4760>,
                           98)],
             '$10load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc688490>,
                                   10)],
             '$122binary_add.2': [(<numba.core.ir.Assign object at 0x7db9b7ce47f0>,
                                   118)],
             '$134compare_op.7': [(<numba.core.ir.Assign object at 0x7db9b7ce6770>,
                                   118)],
             '$136pred': [(<numba.core.ir.Assign object at 0x7db9bc7f6da0>,
                           118)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7db9bc7f6ce0>,
                           142)],
             '$150build_tuple.2': [(<numba.core.ir.Assign object at 0x7db9bc08e440>,
                                    146)],
             '$152return_value.3': [(<numba.core.ir.Assign object at 0x7db9bc08c190>,
                                     146)],
             '$42binary_add.8': [(<numba.core.ir.Assign object at 0x7db9b7ce5930>,
                                  18)],
             '$52pred': [(<numba.core.ir.Assign object at 0x7db9b7ce6e90>, 18)],
             '$66compare_op.5': [(<numba.core.ir.Assign object at 0x7db9b7ce58d0>,
                                  54)],
             '$68pred': [(<numba.core.ir.Assign object at 0x7db9b7ce4820>, 54)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x7db9bc689ed0>,
                                 0)],
             '$84compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b7ce6800>,
                                  80)],
             '$86pred': [(<numba.core.ir.Assign object at 0x7db9b7ce7cd0>, 80)],
             '$8pred': [(<numba.core.ir.Assign object at 0x7db9bc688e50>, 0)],
             '$const124.3.5': [(<numba.core.ir.Assign object at 0x7db9b7ce4280>,
                                118)],
             '$const24.2.3': [(<numba.core.ir.Assign object at 0x7db9b7dbfd90>,
                               18)],
             '$const4.1.1': [(<numba.core.ir.Assign object at 0x7db9bc6894b0>,
                              0)],
             '$const44.9.5': [(<numba.core.ir.Assign object at 0x7db9b7ce43d0>,
                               18)],
             '$const72.1.3': [(<numba.core.ir.Assign object at 0x7db9b7ce7430>,
                               70)],
             '$const90.1.3': [(<numba.core.ir.Assign object at 0x7db9b7ce44f0>,
                               88)],
             'L': [(<numba.core.ir.Assign object at 0x7db9bc689d80>, 18),
                   (<numba.core.ir.Assign object at 0x7db9b7ce4940>, 70),
                   (<numba.core.ir.Assign object at 0x7db9b7ce50f0>, 106)],
             'N': [(<numba.core.ir.Assign object at 0x7db9bc68a7d0>, 0),
                   (<numba.core.ir.Assign object at 0x7db9bc689720>, 10)],
             'R': [(<numba.core.ir.Assign object at 0x7db9b7dbc160>, 18),
                   (<numba.core.ir.Assign object at 0x7db9b7ce49d0>, 88)],
             'arr': [(<numba.core.ir.Assign object at 0x7db9bc68ae00>, 0)],
             'bool104': [(<numba.core.ir.Assign object at 0x7db9b7ce7e20>, 98)],
             'bool136': [(<numba.core.ir.Assign object at 0x7db9bc7f5570>,
                          118)],
             'bool144': [(<numba.core.ir.Assign object at 0x7db9bc7f6d40>,
                          142)],
             'bool52': [(<numba.core.ir.Assign object at 0x7db9b7ce6830>, 18)],
             'bool68': [(<numba.core.ir.Assign object at 0x7db9b7ce6980>, 54)],
             'bool8': [(<numba.core.ir.Assign object at 0x7db9bc68aad0>, 0)],
             'bool86': [(<numba.core.ir.Assign object at 0x7db9b7ce5d20>, 80)],
             'done': [(<numba.core.ir.Assign object at 0x7db9b7dbe260>, 18),
                      (<numba.core.ir.Assign object at 0x7db9b7ce46d0>, 106),
                      (<numba.core.ir.Assign object at 0x7db9b7ce5360>, 138)],
             'eq': [(<numba.core.ir.Assign object at 0x7db9b7ce7c10>, 18),
                    (<numba.core.ir.Assign object at 0x7db9b7ce4a60>, 106)],
             'm': [(<numba.core.ir.Assign object at 0x7db9b7ce5f90>, 18),
                   (<numba.core.ir.Assign object at 0x7db9b7ce4790>, 118)],
             'x': [(<numba.core.ir.Assign object at 0x7db9bc68ac80>, 0)],
             'xm': [(<numba.core.ir.Assign object at 0x7db9b7ce5ba0>, 54)]})
2025-06-18 10:06:37,558 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bc689540>
2025-06-18 10:06:37,558 - DEBUG - ssa.py:63 - Fix SSA violator on var N
2025-06-18 10:06:37,558 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,558 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:301 - first assign: N
2025-06-18 10:06:37,558 - DEBUG - ssa.py:215 - replaced with: N = arg(2, name=N)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,558 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,558 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,558 - DEBUG - ssa.py:209 - on stmt: N = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:215 - replaced with: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,559 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,559 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: R = N - $const24.2.3
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,559 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,559 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,559 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,559 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: L = m + $const72.1.3
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,559 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,559 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,559 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: L = m
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L + R
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L > R
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,560 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,560 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,560 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,561 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,561 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688730>
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,561 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7db9bc688af0>],
             10: [<numba.core.ir.Assign object at 0x7db9bc6899c0>]})
2025-06-18 10:06:37,561 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,561 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,561 - DEBUG - ssa.py:385 - find_def var='N' stmt=$6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,561 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,561 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,561 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,561 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,561 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: R = N - $const24.2.3
2025-06-18 10:06:37,562 - DEBUG - ssa.py:385 - find_def var='N' stmt=R = N - $const24.2.3
2025-06-18 10:06:37,562 - DEBUG - ssa.py:416 - find_def_from_top label 18
2025-06-18 10:06:37,562 - DEBUG - ssa.py:433 - insert phi node N.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
2025-06-18 10:06:37,562 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:37,562 - DEBUG - ssa.py:441 - incoming_def N = arg(2, name=N)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:459 - find_def_from_bottom label 10
2025-06-18 10:06:37,562 - DEBUG - ssa.py:441 - incoming_def N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:215 - replaced with: R = N.2 - $const24.2.3
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,562 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,562 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,562 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,562 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,562 - DEBUG - ssa.py:209 - on stmt: L = m + $const72.1.3
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,563 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,563 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,563 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,563 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,563 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,563 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,563 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,563 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: L = m
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,563 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,563 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L + R
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L > R
2025-06-18 10:06:37,563 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,564 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,564 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,564 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,564 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,564 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,564 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc688730>
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,564 - DEBUG - ssa.py:63 - Fix SSA violator on var L
2025-06-18 10:06:37,564 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,564 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,564 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,564 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,564 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,565 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,565 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:301 - first assign: L
2025-06-18 10:06:37,565 - DEBUG - ssa.py:215 - replaced with: L = const(int, 0)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,565 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,565 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,565 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,565 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: L = m + $const72.1.3
2025-06-18 10:06:37,565 - DEBUG - ssa.py:215 - replaced with: L.1 = m + $const72.1.3
2025-06-18 10:06:37,565 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,565 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,565 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,566 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,566 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,566 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,566 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,566 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,566 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: L = m
2025-06-18 10:06:37,566 - DEBUG - ssa.py:215 - replaced with: L.2 = m
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,566 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,566 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L + R
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L > R
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,566 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,566 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,566 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,567 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,567 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,567 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,567 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68b730>
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,567 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {18: [<numba.core.ir.Assign object at 0x7db9bc688b80>],
             70: [<numba.core.ir.Assign object at 0x7db9bc08ef20>],
             106: [<numba.core.ir.Assign object at 0x7db9bc08df00>]})
2025-06-18 10:06:37,567 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,567 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,567 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,567 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,567 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,567 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,567 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,568 - DEBUG - ssa.py:385 - find_def var='L' stmt=$42binary_add.8 = L + R
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,568 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,568 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,568 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,568 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,568 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,568 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,568 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,569 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,569 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,569 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,569 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,569 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L + R
2025-06-18 10:06:37,569 - DEBUG - ssa.py:385 - find_def var='L' stmt=$122binary_add.2 = L + R
2025-06-18 10:06:37,569 - DEBUG - ssa.py:416 - find_def_from_top label 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:433 - insert phi node L.3 = phi(incoming_values=[], incoming_blocks=[]) at 118
2025-06-18 10:06:37,569 - DEBUG - ssa.py:459 - find_def_from_bottom label 88
2025-06-18 10:06:37,569 - DEBUG - ssa.py:416 - find_def_from_top label 88
2025-06-18 10:06:37,569 - DEBUG - ssa.py:453 - idom 80 from label 88
2025-06-18 10:06:37,569 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,569 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,569 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,569 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,569 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,569 - DEBUG - ssa.py:433 - insert phi node L.4 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L = const(int, 0)
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,570 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,570 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L.3 = phi(incoming_values=[], incoming_blocks=[])
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,570 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,570 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,570 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,570 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 70
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L.1 = m + $const72.1.3
2025-06-18 10:06:37,570 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:37,570 - DEBUG - ssa.py:441 - incoming_def L.2 = m
2025-06-18 10:06:37,570 - DEBUG - ssa.py:215 - replaced with: $122binary_add.2 = L.3 + R
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L > R
2025-06-18 10:06:37,570 - DEBUG - ssa.py:385 - find_def var='L' stmt=$134compare_op.7 = L > R
2025-06-18 10:06:37,570 - DEBUG - ssa.py:215 - replaced with: $134compare_op.7 = L.3 > R
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,570 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,570 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,570 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,571 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,571 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,571 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,571 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc68b730>
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,571 - DEBUG - ssa.py:385 - find_def var='L' stmt=$150build_tuple.2 = build_tuple(items=[Var(L, interp.py:17), Var(eq, interp.py:20)])
2025-06-18 10:06:37,571 - DEBUG - ssa.py:416 - find_def_from_top label 146
2025-06-18 10:06:37,571 - DEBUG - ssa.py:433 - insert phi node L.5 = phi(incoming_values=[], incoming_blocks=[]) at 146
2025-06-18 10:06:37,571 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,571 - DEBUG - ssa.py:441 - incoming_def L = const(int, 0)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,571 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,571 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,571 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,571 - DEBUG - ssa.py:441 - incoming_def L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,571 - DEBUG - ssa.py:215 - replaced with: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,571 - DEBUG - ssa.py:63 - Fix SSA violator on var R
2025-06-18 10:06:37,571 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,571 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,571 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,572 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,572 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,572 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,572 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,572 - DEBUG - ssa.py:301 - first assign: R
2025-06-18 10:06:37,572 - DEBUG - ssa.py:215 - replaced with: R = N.2 - $const24.2.3
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,572 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,572 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,572 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,572 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,573 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,573 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: R = m - $const90.1.3
2025-06-18 10:06:37,573 - DEBUG - ssa.py:215 - replaced with: R.1 = m - $const90.1.3
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,573 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,573 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,573 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,573 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R
2025-06-18 10:06:37,573 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,574 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,574 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,574 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,574 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,574 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,574 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc68bf40>
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,574 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {18: [<numba.core.ir.Assign object at 0x7db9bc6885b0>],
             88: [<numba.core.ir.Assign object at 0x7db9bc08c880>]})
2025-06-18 10:06:37,574 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,574 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,574 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,575 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,575 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,575 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,575 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,575 - DEBUG - ssa.py:385 - find_def var='R' stmt=$42binary_add.8 = L + R
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,575 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,575 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,575 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,575 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,576 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,576 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,576 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,576 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,576 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,576 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,576 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R
2025-06-18 10:06:37,576 - DEBUG - ssa.py:385 - find_def var='R' stmt=$122binary_add.2 = L.3 + R
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 118
2025-06-18 10:06:37,577 - DEBUG - ssa.py:433 - insert phi node R.2 = phi(incoming_values=[], incoming_blocks=[]) at 118
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 88
2025-06-18 10:06:37,577 - DEBUG - ssa.py:441 - incoming_def R.1 = m - $const90.1.3
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,577 - DEBUG - ssa.py:433 - insert phi node R.3 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,577 - DEBUG - ssa.py:441 - incoming_def R = N.2 - $const24.2.3
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,577 - DEBUG - ssa.py:441 - incoming_def R.2 = phi(incoming_values=[Var(R.1, interp.py:27)], incoming_blocks=[88])
2025-06-18 10:06:37,577 - DEBUG - ssa.py:441 - incoming_def R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 70
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 70
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 54 from label 70
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,577 - DEBUG - ssa.py:441 - incoming_def R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 98 from label 106
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,577 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,578 - DEBUG - ssa.py:441 - incoming_def R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,578 - DEBUG - ssa.py:215 - replaced with: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R
2025-06-18 10:06:37,578 - DEBUG - ssa.py:385 - find_def var='R' stmt=$134compare_op.7 = L.3 > R
2025-06-18 10:06:37,578 - DEBUG - ssa.py:215 - replaced with: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,578 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,578 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,578 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,578 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,578 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,578 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08ca90>
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,578 - DEBUG - ssa.py:63 - Fix SSA violator on var done
2025-06-18 10:06:37,578 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,578 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,578 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,579 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,579 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,579 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,579 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:301 - first assign: done
2025-06-18 10:06:37,579 - DEBUG - ssa.py:215 - replaced with: done = const(bool, False)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,579 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,579 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,579 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,580 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,580 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,580 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,580 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,580 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,580 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,580 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,580 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,580 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,580 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,580 - DEBUG - ssa.py:215 - replaced with: done.1 = const(bool, True)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,581 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,581 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,581 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,581 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: done = const(bool, True)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:215 - replaced with: done.2 = const(bool, True)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,581 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,581 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,581 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,581 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688370>
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,581 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,581 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {18: [<numba.core.ir.Assign object at 0x7db9bc08c3d0>],
             106: [<numba.core.ir.Assign object at 0x7db9bc08e6e0>],
             138: [<numba.core.ir.Assign object at 0x7db9bc4749d0>]})
2025-06-18 10:06:37,582 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,582 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,582 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,582 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,582 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,582 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:385 - find_def var='done' stmt=$52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,582 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,582 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,583 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,583 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,583 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,583 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,583 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,583 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,583 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,583 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,583 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,583 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,584 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,584 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: done.1 = const(bool, True)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,584 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,584 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,584 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,584 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: done.2 = const(bool, True)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,584 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,584 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:385 - find_def var='done' stmt=$144pred = call bool144(done, func=bool144, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,584 - DEBUG - ssa.py:433 - insert phi node done.3 = phi(incoming_values=[], incoming_blocks=[]) at 142
2025-06-18 10:06:37,584 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:37,584 - DEBUG - ssa.py:441 - incoming_def done.2 = const(bool, True)
2025-06-18 10:06:37,584 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 118
2025-06-18 10:06:37,585 - DEBUG - ssa.py:433 - insert phi node done.4 = phi(incoming_values=[], incoming_blocks=[]) at 118
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 88
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 88
2025-06-18 10:06:37,585 - DEBUG - ssa.py:453 - idom 80 from label 88
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,585 - DEBUG - ssa.py:433 - insert phi node done.5 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done = const(bool, False)
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.3 = phi(incoming_values=[Var(done.2, interp.py:34)], incoming_blocks=[138])
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,585 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 70
2025-06-18 10:06:37,585 - DEBUG - ssa.py:416 - find_def_from_top label 70
2025-06-18 10:06:37,585 - DEBUG - ssa.py:453 - idom 54 from label 70
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,585 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.1 = const(bool, True)
2025-06-18 10:06:37,585 - DEBUG - ssa.py:441 - incoming_def done.4 = phi(incoming_values=[Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.1, interp.py:31)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,585 - DEBUG - ssa.py:215 - replaced with: $144pred = call bool144(done.3, func=bool144, args=(Var(done.3, interp.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,586 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,586 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08e2f0>
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,586 - DEBUG - ssa.py:63 - Fix SSA violator on var eq
2025-06-18 10:06:37,586 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,586 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,586 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,586 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,586 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,586 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,586 - DEBUG - ssa.py:301 - first assign: eq
2025-06-18 10:06:37,586 - DEBUG - ssa.py:215 - replaced with: eq = const(bool, False)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,587 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,587 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,587 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,587 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,587 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,587 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,587 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,587 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,587 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,588 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,588 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,588 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,588 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, True)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:215 - replaced with: eq.1 = const(bool, True)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: done.1 = const(bool, True)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,588 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,588 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: done.4 = phi(incoming_values=[Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.1, interp.py:31)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,588 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,588 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: done.2 = const(bool, True)
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,588 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,588 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,588 - DEBUG - ssa.py:209 - on stmt: done.3 = phi(incoming_values=[Var(done.2, interp.py:34), Var(done.4, interp.py:22)], incoming_blocks=[138, 118])
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done.3, func=bool144, args=(Var(done.3, interp.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,589 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,589 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc6881f0>
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,589 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {18: [<numba.core.ir.Assign object at 0x7db9bc08ca90>],
             106: [<numba.core.ir.Assign object at 0x7db9bc476200>]})
2025-06-18 10:06:37,589 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,589 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,589 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,589 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,589 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,589 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,589 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,590 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,590 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,590 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,590 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,590 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,590 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,590 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,591 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,591 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,591 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,591 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,591 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,591 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: eq.1 = const(bool, True)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: done.1 = const(bool, True)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,591 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,591 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: done.4 = phi(incoming_values=[Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.1, interp.py:31)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,591 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,591 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,592 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: done.2 = const(bool, True)
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,592 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,592 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: done.3 = phi(incoming_values=[Var(done.2, interp.py:34), Var(done.4, interp.py:22)], incoming_blocks=[138, 118])
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done.3, func=bool144, args=(Var(done.3, interp.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,592 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,592 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,592 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,592 - DEBUG - ssa.py:385 - find_def var='eq' stmt=$150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq, interp.py:20)])
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 146
2025-06-18 10:06:37,592 - DEBUG - ssa.py:433 - insert phi node eq.2 = phi(incoming_values=[], incoming_blocks=[]) at 146
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,592 - DEBUG - ssa.py:441 - incoming_def eq = const(bool, False)
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,592 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 118
2025-06-18 10:06:37,592 - DEBUG - ssa.py:433 - insert phi node eq.3 = phi(incoming_values=[], incoming_blocks=[]) at 118
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 88
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 88
2025-06-18 10:06:37,592 - DEBUG - ssa.py:453 - idom 80 from label 88
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,592 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,592 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,592 - DEBUG - ssa.py:433 - insert phi node eq.4 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,592 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq = const(bool, False)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,593 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,593 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.3 = phi(incoming_values=[], incoming_blocks=[])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.4 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,593 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,593 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,593 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,593 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.4 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 70
2025-06-18 10:06:37,593 - DEBUG - ssa.py:416 - find_def_from_top label 70
2025-06-18 10:06:37,593 - DEBUG - ssa.py:453 - idom 54 from label 70
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.4 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.1 = const(bool, True)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:441 - incoming_def eq.3 = phi(incoming_values=[Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.1, interp.py:30)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:215 - replaced with: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq.2, interp.py:35)])
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,593 - DEBUG - ssa.py:63 - Fix SSA violator on var m
2025-06-18 10:06:37,593 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,593 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,593 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,594 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,594 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,594 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,594 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,594 - DEBUG - ssa.py:301 - first assign: m
2025-06-18 10:06:37,594 - DEBUG - ssa.py:215 - replaced with: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,594 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,594 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: eq.4 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,594 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,595 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,595 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,595 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,595 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,595 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: eq.1 = const(bool, True)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: done.1 = const(bool, True)
2025-06-18 10:06:37,595 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,595 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,596 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: eq.3 = phi(incoming_values=[Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.1, interp.py:30)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: done.4 = phi(incoming_values=[Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.1, interp.py:31)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: m = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,596 - DEBUG - ssa.py:215 - replaced with: m.1 = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,596 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,596 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: done.2 = const(bool, True)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,596 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,596 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: done.3 = phi(incoming_values=[Var(done.2, interp.py:34), Var(done.4, interp.py:22)], incoming_blocks=[138, 118])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done.3, func=bool144, args=(Var(done.3, interp.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,596 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,596 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9bc688be0>
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: eq.2 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq.2, interp.py:35)])
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,596 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,597 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {18: [<numba.core.ir.Assign object at 0x7db9bc08e2f0>],
             118: [<numba.core.ir.Assign object at 0x7db9bc4755d0>]})
2025-06-18 10:06:37,597 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:37,597 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: arr = arg(0, name=arr)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: x = arg(1, name=x)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: N = arg(2, name=N)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, -1)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $6compare_op.2 = N == $const4.1.1
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: bool8 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, interp.py:14),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: branch $8pred, 10, 18
2025-06-18 10:06:37,597 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 10
2025-06-18 10:06:37,597 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $10load_global.0 = global(len: <built-in function len>)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: N.1 = call $10load_global.0(arr, func=$10load_global.0, args=[Var(arr, interp.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: jump 18
2025-06-18 10:06:37,597 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 18
2025-06-18 10:06:37,597 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: N.2 = phi(incoming_values=[Var(N, interp.py:10), Var(N.1, interp.py:15)], incoming_blocks=[0, 10])
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: L = const(int, 0)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $const24.2.3 = const(int, 1)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: R = N.2 - $const24.2.3
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: done = const(bool, False)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: eq = const(bool, False)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $42binary_add.8 = L + R
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $const44.9.5 = const(int, 2)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: bool52 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,597 - DEBUG - ssa.py:209 - on stmt: $52pred = call bool52(done, func=bool52, args=(Var(done, interp.py:19),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: branch $52pred, 146, 54
2025-06-18 10:06:37,598 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 54
2025-06-18 10:06:37,598 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: eq.4 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: done.5 = phi(incoming_values=[Var(done, interp.py:19), Var(done.3, interp.py:22)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: R.3 = phi(incoming_values=[Var(R, interp.py:18), Var(R.2, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: L.4 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:385 - find_def var='m' stmt=xm = getitem(value=arr, index=m, fn=<built-in function getitem>)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:416 - find_def_from_top label 54
2025-06-18 10:06:37,598 - DEBUG - ssa.py:433 - insert phi node m.2 = phi(incoming_values=[], incoming_blocks=[]) at 54
2025-06-18 10:06:37,598 - DEBUG - ssa.py:459 - find_def_from_bottom label 18
2025-06-18 10:06:37,598 - DEBUG - ssa.py:441 - incoming_def m = $42binary_add.8 // $const44.9.5
2025-06-18 10:06:37,598 - DEBUG - ssa.py:459 - find_def_from_bottom label 142
2025-06-18 10:06:37,598 - DEBUG - ssa.py:416 - find_def_from_top label 142
2025-06-18 10:06:37,598 - DEBUG - ssa.py:453 - idom 118 from label 142
2025-06-18 10:06:37,598 - DEBUG - ssa.py:459 - find_def_from_bottom label 118
2025-06-18 10:06:37,598 - DEBUG - ssa.py:441 - incoming_def m.1 = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,598 - DEBUG - ssa.py:215 - replaced with: xm = getitem(value=arr, index=m.2, fn=<built-in function getitem>)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: $66compare_op.5 = xm < x
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: bool68 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: $68pred = call bool68($66compare_op.5, func=bool68, args=(Var($66compare_op.5, interp.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: branch $68pred, 70, 80
2025-06-18 10:06:37,598 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 70
2025-06-18 10:06:37,598 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: $const72.1.3 = const(int, 1)
2025-06-18 10:06:37,598 - DEBUG - ssa.py:209 - on stmt: L.1 = m + $const72.1.3
2025-06-18 10:06:37,598 - DEBUG - ssa.py:385 - find_def var='m' stmt=L.1 = m + $const72.1.3
2025-06-18 10:06:37,598 - DEBUG - ssa.py:416 - find_def_from_top label 70
2025-06-18 10:06:37,598 - DEBUG - ssa.py:453 - idom 54 from label 70
2025-06-18 10:06:37,599 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,599 - DEBUG - ssa.py:215 - replaced with: L.1 = m.2 + $const72.1.3
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,599 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 80
2025-06-18 10:06:37,599 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: $84compare_op.2 = xm > x
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: bool86 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: $86pred = call bool86($84compare_op.2, func=bool86, args=(Var($84compare_op.2, interp.py:26),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: branch $86pred, 88, 98
2025-06-18 10:06:37,599 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 88
2025-06-18 10:06:37,599 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: $const90.1.3 = const(int, 1)
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: R.1 = m - $const90.1.3
2025-06-18 10:06:37,599 - DEBUG - ssa.py:385 - find_def var='m' stmt=R.1 = m - $const90.1.3
2025-06-18 10:06:37,599 - DEBUG - ssa.py:416 - find_def_from_top label 88
2025-06-18 10:06:37,599 - DEBUG - ssa.py:453 - idom 80 from label 88
2025-06-18 10:06:37,599 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,599 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,599 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,599 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,599 - DEBUG - ssa.py:215 - replaced with: R.1 = m.2 - $const90.1.3
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,599 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:37,599 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: $102compare_op.2 = xm == x
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: bool104 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, interp.py:28),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: branch $104pred, 106, 118
2025-06-18 10:06:37,599 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:37,599 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,599 - DEBUG - ssa.py:209 - on stmt: L.2 = m
2025-06-18 10:06:37,599 - DEBUG - ssa.py:385 - find_def var='m' stmt=L.2 = m
2025-06-18 10:06:37,600 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:37,600 - DEBUG - ssa.py:453 - idom 98 from label 106
2025-06-18 10:06:37,600 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:37,600 - DEBUG - ssa.py:416 - find_def_from_top label 98
2025-06-18 10:06:37,600 - DEBUG - ssa.py:453 - idom 80 from label 98
2025-06-18 10:06:37,600 - DEBUG - ssa.py:459 - find_def_from_bottom label 80
2025-06-18 10:06:37,600 - DEBUG - ssa.py:416 - find_def_from_top label 80
2025-06-18 10:06:37,600 - DEBUG - ssa.py:453 - idom 54 from label 80
2025-06-18 10:06:37,600 - DEBUG - ssa.py:459 - find_def_from_bottom label 54
2025-06-18 10:06:37,600 - DEBUG - ssa.py:215 - replaced with: L.2 = m.2
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: eq.1 = const(bool, True)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: done.1 = const(bool, True)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: jump 118
2025-06-18 10:06:37,600 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 118
2025-06-18 10:06:37,600 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: eq.3 = phi(incoming_values=[Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.4, interp.py:35), Var(eq.1, interp.py:30)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: done.4 = phi(incoming_values=[Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.5, interp.py:22), Var(done.1, interp.py:31)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: R.2 = phi(incoming_values=[Var(R.1, interp.py:27), Var(R.3, interp.py:32), Var(R.3, interp.py:32), Var(R.3, interp.py:32)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: L.3 = phi(incoming_values=[Var(L.4, interp.py:32), Var(L.4, interp.py:32), Var(L.1, interp.py:25), Var(L.2, interp.py:29)], incoming_blocks=[88, 98, 70, 106])
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: $122binary_add.2 = L.3 + R.2
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: $const124.3.5 = const(int, 2)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: m.1 = $122binary_add.2 // $const124.3.5
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: $134compare_op.7 = L.3 > R.2
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.7, func=bool136, args=(Var($134compare_op.7, interp.py:33),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 142
2025-06-18 10:06:37,600 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:37,600 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: done.2 = const(bool, True)
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: jump 142
2025-06-18 10:06:37,600 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 142
2025-06-18 10:06:37,600 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,600 - DEBUG - ssa.py:209 - on stmt: done.3 = phi(incoming_values=[Var(done.2, interp.py:34), Var(done.4, interp.py:22)], incoming_blocks=[138, 118])
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144(done.3, func=bool144, args=(Var(done.3, interp.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 54
2025-06-18 10:06:37,601 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:37,601 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9bc08f6d0>
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: eq.2 = phi(incoming_values=[Var(eq, interp.py:20), Var(eq.3, interp.py:35)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: L.5 = phi(incoming_values=[Var(L, interp.py:17), Var(L.3, interp.py:32)], incoming_blocks=[18, 142])
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: $150build_tuple.2 = build_tuple(items=[Var(L.5, interp.py:35), Var(eq.2, interp.py:35)])
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: $152return_value.3 = cast(value=$150build_tuple.2)
2025-06-18 10:06:37,601 - DEBUG - ssa.py:209 - on stmt: return $152return_value.3
2025-06-18 10:06:37,908 - DEBUG - typeinfer.py:164 - captured error
Traceback (most recent call last):
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 780, in __call__
    self._refine_target_type(typeinfer, targetty, idxty, valty, sig)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 741, in _refine_target_type
    typeinfer.add_type(self.target.name, sig.args[0], loc=self.loc)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 1088, in add_type
    self.propagate_refined_type(var, unified)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 1104, in propagate_refined_type
    source_constraint.refine(self, updated_type)
  File "/home/tnd/.local/lib/python3.10/site-packages/numba/core/typeinfer.py", line 680, in refine
    raise TypingError(m.format(self.func, updated_type))
numba.core.errors.TypingError: no type refinement implemented for function empty_func updating to array(float64, 1d, C)
During: typing of setitem at /home/tnd/.local/lib/python3.10/site-packages/isochrones/interp.py (304)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$12call_function_kw.5']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:342 - stack ['$arr16.6']
2025-06-18 10:06:37,910 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:342 - stack ['$18load_method.7']
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:342 - stack ['$20call_method.8']
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:342 - stack ['$arr24.9']
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,911 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,912 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

2025-06-18 10:06:37,914 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,914 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2eeda50>
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
2025-06-18 10:06:37,914 - DEBUG - ssa.py:209 - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,915 - DEBUG - ssa.py:209 - on stmt: $26return_value.10 = cast(value=arr)
2025-06-18 10:06:37,915 - DEBUG - ssa.py:209 - on stmt: return $26return_value.10
2025-06-18 10:06:37,915 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7db9bc3c09a0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7db9bc3c00a0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7db9bc74fc10>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bcb03580>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7db9bcb02590>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7db9bc3c09d0>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9bcb01f90>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9bcb01cc0>, 0)]})
2025-06-18 10:06:37,915 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2eeda50>
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,917 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1']
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:342 - stack ['$10call_function.4']
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,918 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,918 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 2d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:37,920 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,920 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9bcd8f1c0>
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: $8load_deref.3 = freevar(retty: array(float64, 2d, C))
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-06-18 10:06:37,920 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:37,920 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7db9bc44f8b0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9b2db7310>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9bc44d930>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7db9bc44e1d0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9b7d3f6a0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9b7d3db70>, 0)]})
2025-06-18 10:06:37,921 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9bcd8f1c0>
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
2025-06-18 10:06:37,952 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$self4.1']
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack ['$6call_function.2']
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:342 - stack ['$const10.3.0']
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,953 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:37,954 - DEBUG - interpreter.py:1420 - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

2025-06-18 10:06:37,955 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:37,955 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b3163fd0>
2025-06-18 10:06:37,955 - DEBUG - ssa.py:209 - on stmt: self = arg(0, name=self)
2025-06-18 10:06:37,955 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
2025-06-18 10:06:37,955 - DEBUG - ssa.py:209 - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:37,956 - DEBUG - ssa.py:209 - on stmt: $const10.3.0 = const(NoneType, None)
2025-06-18 10:06:37,956 - DEBUG - ssa.py:209 - on stmt: $12return_value.4 = cast(value=$const10.3.0)
2025-06-18 10:06:37,956 - DEBUG - ssa.py:209 - on stmt: return $12return_value.4
2025-06-18 10:06:37,956 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7db9b3163eb0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b3163910>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7db9b3163c10>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7db9b3163d30>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7db9b3162a10>, 0)]})
2025-06-18 10:06:37,956 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b3163fd0>
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1']
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2']
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
2025-06-18 10:06:37,998 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$12call_function_kw.5']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$arr16.6']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$18load_method.7']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$20call_method.8']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:342 - stack ['$arr24.9']
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:37,999 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,000 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

2025-06-18 10:06:38,002 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,002 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2dce560>
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
2025-06-18 10:06:38,002 - DEBUG - ssa.py:209 - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,003 - DEBUG - ssa.py:209 - on stmt: $26return_value.10 = cast(value=arr)
2025-06-18 10:06:38,003 - DEBUG - ssa.py:209 - on stmt: return $26return_value.10
2025-06-18 10:06:38,003 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7db9b2dce6b0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7db9b2dcee30>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7db9b2dce9e0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2dcf7f0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7db9b2dcf970>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7db9b2dceb60>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9b2dcf6d0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9b2dcf610>, 0)]})
2025-06-18 10:06:38,003 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2dce560>
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1']
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:342 - stack ['$10call_function.4']
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,005 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,006 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,006 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:38,008 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,008 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2dcc5b0>
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-06-18 10:06:38,008 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:38,008 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7db9b2dcfd60>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9bc4f3400>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2dcc820>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7db9b2dcd4b0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9b2dcd1b0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9b2dcd060>, 0)]})
2025-06-18 10:06:38,008 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2dcc5b0>
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
2025-06-18 10:06:38,037 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$self4.1']
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:342 - stack ['$6call_function.2']
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:342 - stack ['$const10.3.0']
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,038 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,038 - DEBUG - interpreter.py:1420 - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

2025-06-18 10:06:38,040 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,040 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2f828f0>
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: self = arg(0, name=self)
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: $const10.3.0 = const(NoneType, None)
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: $12return_value.4 = cast(value=$const10.3.0)
2025-06-18 10:06:38,040 - DEBUG - ssa.py:209 - on stmt: return $12return_value.4
2025-06-18 10:06:38,040 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7db9b2f83b80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2f83310>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7db9b2f830d0>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7db9b2f81570>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7db9b2f82170>, 0)]})
2025-06-18 10:06:38,041 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2f828f0>
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$12call_function_kw.5']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:342 - stack ['$arr16.6']
2025-06-18 10:06:38,087 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:342 - stack ['$18load_method.7']
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:342 - stack ['$20call_method.8']
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:342 - stack ['$arr24.9']
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,088 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,089 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

2025-06-18 10:06:38,091 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,091 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2df9a20>
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.10/dist-packages/numpy/__init__.py'>)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: $26return_value.10 = cast(value=arr)
2025-06-18 10:06:38,091 - DEBUG - ssa.py:209 - on stmt: return $26return_value.10
2025-06-18 10:06:38,091 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7db9b2dfac20>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7db9b2dfae30>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7db9b2dfb040>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2dfa140>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7db9b2dfa2c0>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7db9b2dfa980>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9b2df9fc0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9b2df8f40>, 0)]})
2025-06-18 10:06:38,092 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2df9a20>
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,095 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1']
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:342 - stack ['$10call_function.4']
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,096 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,097 - DEBUG - interpreter.py:1420 - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(uint32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-06-18 10:06:38,098 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,098 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2df2080>
2025-06-18 10:06:38,098 - DEBUG - ssa.py:209 - on stmt: shape = arg(0, name=shape)
2025-06-18 10:06:38,098 - DEBUG - ssa.py:209 - on stmt: dtype = arg(1, name=dtype)
2025-06-18 10:06:38,098 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-06-18 10:06:38,098 - DEBUG - ssa.py:209 - on stmt: $8load_deref.3 = freevar(retty: array(uint32, 1d, C))
2025-06-18 10:06:38,098 - DEBUG - ssa.py:209 - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,099 - DEBUG - ssa.py:209 - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-06-18 10:06:38,099 - DEBUG - ssa.py:209 - on stmt: return $12return_value.5
2025-06-18 10:06:38,099 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7db9b2df12a0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7db9b2df1030>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2df1d50>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7db9b2df1060>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7db9b2df17b0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7db9b2df2860>, 0)]})
2025-06-18 10:06:38,099 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2df2080>
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
2025-06-18 10:06:38,128 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack ['$2load_global.0']
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack ['$2load_global.0', '$self4.1']
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack ['$6call_function.2']
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:342 - stack ['$const10.3.0']
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,129 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,130 - DEBUG - interpreter.py:1420 - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

2025-06-18 10:06:38,131 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,131 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2d98a90>
2025-06-18 10:06:38,131 - DEBUG - ssa.py:209 - on stmt: self = arg(0, name=self)
2025-06-18 10:06:38,131 - DEBUG - ssa.py:209 - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
2025-06-18 10:06:38,131 - DEBUG - ssa.py:209 - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,131 - DEBUG - ssa.py:209 - on stmt: $const10.3.0 = const(NoneType, None)
2025-06-18 10:06:38,131 - DEBUG - ssa.py:209 - on stmt: $12return_value.4 = cast(value=$const10.3.0)
2025-06-18 10:06:38,132 - DEBUG - ssa.py:209 - on stmt: return $12return_value.4
2025-06-18 10:06:38,132 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7db9bcd8d150>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2d9a170>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7db9b2d988e0>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7db9b2d9aef0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7db9b2d98970>, 0)]})
2025-06-18 10:06:38,132 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2d98a90>
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:81 - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack ['$2load_deref.0']
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack ['$2load_deref.0', '$const4.1.1']
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack ['$6call_function.2']
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack ['$10load_deref.3']
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:341 - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2025-06-18 10:06:38,260 - DEBUG - byteflow.py:342 - stack ['$10load_deref.3', '$a12.4']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$14call_function.5']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$b18.6']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$b18.6', '$const20.7.2']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$22compare_op.8']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$const26.0.3']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$b30.1']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$32unary_negative.2']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$exp36.3']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$exp36.3', '$const38.4.2']
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:341 - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
2025-06-18 10:06:38,261 - DEBUG - byteflow.py:342 - stack ['$40compare_op.5']
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack ['$const98.0.6']
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack ['$b102.1']
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack ['$44load_global.0']
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack ['$48load_deref.0']
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:341 - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2025-06-18 10:06:38,262 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$exp106.0']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$exp106.0', '$const108.1.7']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$110compare_op.2']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$a52.0']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$a52.0', '$const54.1.2']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$56compare_op.2']
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:341 - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2025-06-18 10:06:38,263 - DEBUG - byteflow.py:342 - stack ['$114load_global.0']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$116load_method.1']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$116load_method.1', '$a118.2']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$126call_method.6']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$exp130.0']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$exp130.0', '$const132.1.2']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$134compare_op.2']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:341 - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:342 - stack ['$60load_deref.0']
2025-06-18 10:06:38,264 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=76 nstack_initial=0)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$a76.0']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$a76.0', '$const78.1.1']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$80compare_op.2']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$exp138.0']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$exp138.0', '$const140.1.1']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$142binary_and.2']
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:341 - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
2025-06-18 10:06:38,265 - DEBUG - byteflow.py:342 - stack ['$invert178.0']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$64load_deref.0']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$68load_global.0']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$68load_global.0', '$const70.1.4']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$72call_function.2']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$a84.0']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$a84.0', '$const86.1.5']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:341 - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:342 - stack ['$88compare_op.2']
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,266 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$r146.0']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$r146.0', '$a148.1']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$150inplace_multiply.2']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$exp154.0']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$exp154.0', '$const156.1.1']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$158inplace_rshift.2']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$a162.3']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$a162.3', '$a164.4']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:342 - stack ['$166inplace_multiply.5']
2025-06-18 10:06:38,267 - DEBUG - byteflow.py:341 - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$exp170.6']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$exp170.6', '$const172.7.2']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$174compare_op.8']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:129 - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$const182.0.8']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$const182.0.8', '$r184.1']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$186binary_true_divide.2']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack ['$r190.0']
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:110 - stack: []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:111 - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:342 - stack []
2025-06-18 10:06:38,268 - DEBUG - byteflow.py:341 - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:342 - stack ['$const92.0.2']
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:129 - end state. edges=[]
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:107 - pending: deque([State(pc_initial=138 nstack_initial=0)])
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:210 - -------------------------Prune PHIs-------------------------
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:279 - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:236 - defmap: {}
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:237 - phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:258 - changing phismap: defaultdict(<class 'set'>, {})
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:267 - keep phismap: {}
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:273 - new_out: defaultdict(<class 'dict'>, {})
2025-06-18 10:06:38,269 - DEBUG - byteflow.py:283 - ----------------------DONE Prune PHIs-----------------------
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7.2'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7.2', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0.3'}), (28, {'value': '$const26.0.3'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4.2'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4.2', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1.2'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1.2', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1.4'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1.4'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1.5'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1.5', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0.2'}), (94, {'retval': '$const92.0.2', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0.6'}), (100, {'value': '$const98.0.6'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1.7'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1.7', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1.2'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1.2', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7.2'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7.2', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0.8'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0.8', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,270 - DEBUG - byteflow.py:141 - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-18 10:06:38,273 - DEBUG - interpreter.py:1420 - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: int64)      ['$2load_deref.0']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1.1', 'r']
    $10load_deref.3 = freevar(tp: int64)     ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7.2 = const(int, 0)             ['$const20.7.2']
    $22compare_op.8 = b < $const20.7.2       ['$22compare_op.8', '$const20.7.2', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4.2 = const(int, 0)             ['$const38.4.2']
    $40compare_op.5 = exp < $const38.4.2     ['$40compare_op.5', '$const38.4.2', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: True) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1.2 = const(int, 0)             ['$const54.1.2']
    $56compare_op.2 = a.1 == $const54.1.2    ['$56compare_op.2', '$const54.1.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1.4 = const(str, 0 cannot be raised to a negative power) ['$const70.1.4']
    $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1.4']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1.1 = const(int, 1)             ['$const78.1.1']
    $80compare_op.2 = a.1 != $const78.1.1    ['$80compare_op.2', '$const78.1.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1.5 = const(int, -1)            ['$const86.1.5']
    $88compare_op.2 = a.1 != $const86.1.5    ['$88compare_op.2', '$const86.1.5', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0.2 = const(int, 0)             ['$const92.0.2']
    $94return_value.1 = cast(value=$const92.0.2) ['$94return_value.1', '$const92.0.2']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1.7 = const(int, 65536)        ['$const108.1.7']
    $110compare_op.2 = exp > $const108.1.7   ['$110compare_op.2', '$const108.1.7', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1.2 = const(int, 0)            ['$const132.1.2']
    $134compare_op.2 = exp != $const132.1.2  ['$134compare_op.2', '$const132.1.2', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1.1 = const(int, 1)            ['$const140.1.1']
    $142binary_and.2 = exp & $const140.1.1   ['$142binary_and.2', '$const140.1.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1.1 = const(int, 1)            ['$const156.1.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7.2 = const(int, 0)            ['$const172.7.2']
    $174compare_op.8 = exp != $const172.7.2  ['$174compare_op.8', '$const172.7.2', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0.8 = const(float, 1.0)        ['$const182.0.8']
    $186binary_true_divide.2 = $const182.0.8 / r ['$186binary_true_divide.2', '$const182.0.8', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

2025-06-18 10:06:38,283 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 0
2025-06-18 10:06:38,283 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,283 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,284 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 26
2025-06-18 10:06:38,284 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,284 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 44
2025-06-18 10:06:38,284 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,284 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 48
2025-06-18 10:06:38,284 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,284 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 52
2025-06-18 10:06:38,284 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,284 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,285 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 60
2025-06-18 10:06:38,285 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,285 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 68
2025-06-18 10:06:38,285 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,285 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 76
2025-06-18 10:06:38,285 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,285 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 84
2025-06-18 10:06:38,285 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,285 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,286 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 92
2025-06-18 10:06:38,286 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,286 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 96
2025-06-18 10:06:38,286 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,286 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 98
2025-06-18 10:06:38,286 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,286 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 106
2025-06-18 10:06:38,286 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,286 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 114
2025-06-18 10:06:38,286 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,286 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,287 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 130
2025-06-18 10:06:38,287 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,287 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 138
2025-06-18 10:06:38,287 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,287 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 146
2025-06-18 10:06:38,287 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: r = $150inplace_multiply.2
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,287 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 154
2025-06-18 10:06:38,287 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: a.1 = $166inplace_multiply.5
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,287 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,288 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 178
2025-06-18 10:06:38,288 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,288 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 182
2025-06-18 10:06:38,288 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,288 - DEBUG - ssa.py:177 - ==== SSA block analysis pass on 190
2025-06-18 10:06:38,288 - DEBUG - ssa.py:207 - Running <numba.core.ssa._GatherDefsHandler object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r)
2025-06-18 10:06:38,288 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,288 - DEBUG - ssa.py:156 - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x7db9b2e29b10>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b2e2e530>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7db9b2e2e7a0>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2e2e9e0>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x7db9b2e2eb60>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x7db9b2e2ee00>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x7db9b2e2f100>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x7db9b2e2f2b0>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x7db9b2e2f3a0>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b2e2f850>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x7db9b2e2fac0>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x7db9b2e2ffd0>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7db9b2e30280>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x7db9b2e30730>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x7db9b2e30c70>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x7db9b2e310f0>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x7db9b2e315d0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x7db9b2e31840>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x7db9b2e31ba0>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x7db9b2e320b0>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x7db9b2e32200>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x7db9b2e32560>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x7db9b2e2a320>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x7db9b2e2a590>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x7db9b2e29570>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x7db9b2e288e0>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7db9b2e28040>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2e2aa10>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x7db9b2e2ad10>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7db9b2e2afb0>, 48)],
             '$56compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b2e2b520>,
                                  52)],
             '$58pred': [(<numba.core.ir.Assign object at 0x7db9b2e2b790>, 52)],
             '$60load_deref.0': [(<numba.core.ir.Assign object at 0x7db9b2e2ba00>,
                                  60)],
             '$62pred': [(<numba.core.ir.Assign object at 0x7db9b2e2bca0>, 60)],
             '$68load_global.0': [(<numba.core.ir.Assign object at 0x7db9b2e2c3a0>,
                                   68)],
             '$72call_function.2': [(<numba.core.ir.Assign object at 0x7db9b2e2c700>,
                                     68)],
             '$80compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b2e2cc70>,
                                  76)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7db9b2e2cee0>, 76)],
             '$88compare_op.2': [(<numba.core.ir.Assign object at 0x7db9b2e2d3f0>,
                                  84)],
             '$90pred': [(<numba.core.ir.Assign object at 0x7db9b2e2d660>, 84)],
             '$94return_value.1': [(<numba.core.ir.Assign object at 0x7db9b2e2da20>,
                                    92)],
             '$const108.1.7': [(<numba.core.ir.Assign object at 0x7db9b2e2e380>,
                                106)],
             '$const132.1.2': [(<numba.core.ir.Assign object at 0x7db9b2e2f6a0>,
                                130)],
             '$const140.1.1': [(<numba.core.ir.Assign object at 0x7db9b2e2fe20>,
                                138)],
             '$const156.1.1': [(<numba.core.ir.Assign object at 0x7db9b2e30ac0>,
                                154)],
             '$const172.7.2': [(<numba.core.ir.Assign object at 0x7db9b2e31420>,
                                154)],
             '$const182.0.8': [(<numba.core.ir.Assign object at 0x7db9b2e31de0>,
                                182)],
             '$const20.7.2': [(<numba.core.ir.Assign object at 0x7db9b2e2a170>,
                               0)],
             '$const38.4.2': [(<numba.core.ir.Assign object at 0x7db9b2e28a90>,
                               26)],
             '$const4.1.1': [(<numba.core.ir.Assign object at 0x7db9b2e296f0>,
                              0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x7db9b2e2b370>,
                               52)],
             '$const70.1.4': [(<numba.core.ir.Assign object at 0x7db9b2e2c520>,
                               68)],
             '$const78.1.1': [(<numba.core.ir.Assign object at 0x7db9b2e2cac0>,
                               76)],
             '$const86.1.5': [(<numba.core.ir.Assign object at 0x7db9b2e2d240>,
                               84)],
             '$const92.0.2': [(<numba.core.ir.Assign object at 0x7db9b2e2d8a0>,
                               92)],
             'a': [(<numba.core.ir.Assign object at 0x7db9b2e290f0>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7db9b2e29e10>, 0),
                     (<numba.core.ir.Assign object at 0x7db9b2e311b0>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x7db9b2e29450>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x7db9b2e2e680>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x7db9b2e2f9a0>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x7db9b2e30160>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x7db9b2e31720>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x7db9b2e31a80>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x7db9b2e2a470>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x7db9b2e28790>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x7db9b2e2ae90>, 48)],
             'bool58': [(<numba.core.ir.Assign object at 0x7db9b2e2b670>, 52)],
             'bool62': [(<numba.core.ir.Assign object at 0x7db9b2e2bb80>, 60)],
             'bool82': [(<numba.core.ir.Assign object at 0x7db9b2e2cdc0>, 76)],
             'bool90': [(<numba.core.ir.Assign object at 0x7db9b2e2d540>, 84)],
             'exp': [(<numba.core.ir.Assign object at 0x7db9b2e23c70>, 26),
                     (<numba.core.ir.Assign object at 0x7db9b2e2e110>, 98),
                     (<numba.core.ir.Assign object at 0x7db9b2e30d30>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x7db9b2e2a6b0>, 26),
                        (<numba.core.ir.Assign object at 0x7db9b2e2de40>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x7db9b2e298d0>, 0),
                   (<numba.core.ir.Assign object at 0x7db9b2e307f0>, 146)]})
2025-06-18 10:06:38,291 - DEBUG - ssa.py:171 - SSA violators <numba.core.utils.OrderedSet object at 0x7db9b2e33eb0>
2025-06-18 10:06:38,291 - DEBUG - ssa.py:63 - Fix SSA violator on var r
2025-06-18 10:06:38,291 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,291 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:301 - first assign: r
2025-06-18 10:06:38,291 - DEBUG - ssa.py:215 - replaced with: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,291 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,292 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,292 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,292 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,292 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,292 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,292 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,292 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,292 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,292 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,292 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,293 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,293 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,293 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,294 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,294 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,294 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,294 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,294 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,294 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,294 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,294 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,294 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,294 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,295 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: r = $150inplace_multiply.2
2025-06-18 10:06:38,295 - DEBUG - ssa.py:215 - replaced with: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,295 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,295 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: a.1 = $166inplace_multiply.5
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,295 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,295 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,295 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,295 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,295 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,295 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e332b0>
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r)
2025-06-18 10:06:38,295 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,295 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7db9b2e32680>],
             146: [<numba.core.ir.Assign object at 0x7db9b2e32800>]})
2025-06-18 10:06:38,296 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,296 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,296 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,296 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,296 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,296 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,296 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,297 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,297 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,297 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,297 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,297 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,297 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,297 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,297 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,297 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,297 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,298 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,298 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,298 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,299 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,299 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,299 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,299 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,299 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,299 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,299 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:385 - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,299 - DEBUG - ssa.py:416 - find_def_from_top label 146
2025-06-18 10:06:38,299 - DEBUG - ssa.py:453 - idom 138 from label 146
2025-06-18 10:06:38,299 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:38,299 - DEBUG - ssa.py:416 - find_def_from_top label 138
2025-06-18 10:06:38,300 - DEBUG - ssa.py:433 - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 130
2025-06-18 10:06:38,300 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,300 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,300 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,300 - DEBUG - ssa.py:453 - idom 0 from label 106
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,300 - DEBUG - ssa.py:441 - incoming_def r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 154
2025-06-18 10:06:38,300 - DEBUG - ssa.py:416 - find_def_from_top label 154
2025-06-18 10:06:38,300 - DEBUG - ssa.py:433 - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:38,300 - DEBUG - ssa.py:441 - incoming_def r.2 = phi(incoming_values=[Var(r, old_numbers.py:216)], incoming_blocks=[130])
2025-06-18 10:06:38,300 - DEBUG - ssa.py:459 - find_def_from_bottom label 146
2025-06-18 10:06:38,300 - DEBUG - ssa.py:441 - incoming_def r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,300 - DEBUG - ssa.py:441 - incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,300 - DEBUG - ssa.py:215 - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,300 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,300 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: a.1 = $166inplace_multiply.5
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,300 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,301 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,301 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,301 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,301 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r
2025-06-18 10:06:38,301 - DEBUG - ssa.py:385 - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0.8 / r
2025-06-18 10:06:38,301 - DEBUG - ssa.py:416 - find_def_from_top label 182
2025-06-18 10:06:38,301 - DEBUG - ssa.py:453 - idom 178 from label 182
2025-06-18 10:06:38,301 - DEBUG - ssa.py:459 - find_def_from_bottom label 178
2025-06-18 10:06:38,301 - DEBUG - ssa.py:416 - find_def_from_top label 178
2025-06-18 10:06:38,301 - DEBUG - ssa.py:433 - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
2025-06-18 10:06:38,301 - DEBUG - ssa.py:459 - find_def_from_bottom label 130
2025-06-18 10:06:38,301 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,301 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,301 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,301 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,301 - DEBUG - ssa.py:453 - idom 0 from label 106
2025-06-18 10:06:38,301 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,301 - DEBUG - ssa.py:441 - incoming_def r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:459 - find_def_from_bottom label 154
2025-06-18 10:06:38,301 - DEBUG - ssa.py:441 - incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,301 - DEBUG - ssa.py:215 - replaced with: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,301 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,302 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,302 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e332b0>
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:385 - find_def var='r' stmt=$192return_value.1 = cast(value=r)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:416 - find_def_from_top label 190
2025-06-18 10:06:38,302 - DEBUG - ssa.py:453 - idom 178 from label 190
2025-06-18 10:06:38,302 - DEBUG - ssa.py:459 - find_def_from_bottom label 178
2025-06-18 10:06:38,302 - DEBUG - ssa.py:215 - replaced with: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,302 - DEBUG - ssa.py:63 - Fix SSA violator on var a.1
2025-06-18 10:06:38,302 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,302 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:301 - first assign: a.1
2025-06-18 10:06:38,302 - DEBUG - ssa.py:215 - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,302 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,302 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,302 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,303 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,303 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,303 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,303 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,303 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,303 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,303 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,303 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,303 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,303 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,304 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,304 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,304 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,305 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,305 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,305 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,305 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,305 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,305 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,305 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,305 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,305 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,305 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,305 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: a.1 = $166inplace_multiply.5
2025-06-18 10:06:38,306 - DEBUG - ssa.py:215 - replaced with: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,306 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,306 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,306 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,306 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,306 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,306 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32dd0>
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,306 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,306 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7db9b2e33d90>],
             154: [<numba.core.ir.Assign object at 0x7db9b2e32bf0>]})
2025-06-18 10:06:38,306 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,306 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,307 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,307 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,307 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,307 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,307 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,307 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,307 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,308 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,308 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,308 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,308 - DEBUG - ssa.py:416 - find_def_from_top label 52
2025-06-18 10:06:38,308 - DEBUG - ssa.py:453 - idom 48 from label 52
2025-06-18 10:06:38,308 - DEBUG - ssa.py:459 - find_def_from_bottom label 48
2025-06-18 10:06:38,308 - DEBUG - ssa.py:416 - find_def_from_top label 48
2025-06-18 10:06:38,308 - DEBUG - ssa.py:453 - idom 26 from label 48
2025-06-18 10:06:38,308 - DEBUG - ssa.py:459 - find_def_from_bottom label 26
2025-06-18 10:06:38,308 - DEBUG - ssa.py:416 - find_def_from_top label 26
2025-06-18 10:06:38,308 - DEBUG - ssa.py:453 - idom 0 from label 26
2025-06-18 10:06:38,308 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,308 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,308 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,308 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,308 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,308 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,308 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,308 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,308 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 76
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 52 from label 76
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 48 from label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 26 from label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 0 from label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,309 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,309 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,309 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 84
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 76 from label 84
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 76
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 76
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 52 from label 76
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 48 from label 52
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 26 from label 48
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:416 - find_def_from_top label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:453 - idom 0 from label 26
2025-06-18 10:06:38,309 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,309 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,310 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,310 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,310 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,310 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,310 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,310 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,310 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,310 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,310 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,310 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,310 - DEBUG - ssa.py:416 - find_def_from_top label 114
2025-06-18 10:06:38,310 - DEBUG - ssa.py:453 - idom 106 from label 114
2025-06-18 10:06:38,310 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,311 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,311 - DEBUG - ssa.py:453 - idom 0 from label 106
2025-06-18 10:06:38,311 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,311 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,311 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,311 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,311 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,311 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,311 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,311 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,311 - DEBUG - ssa.py:416 - find_def_from_top label 146
2025-06-18 10:06:38,311 - DEBUG - ssa.py:453 - idom 138 from label 146
2025-06-18 10:06:38,311 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:38,311 - DEBUG - ssa.py:416 - find_def_from_top label 138
2025-06-18 10:06:38,311 - DEBUG - ssa.py:433 - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-06-18 10:06:38,311 - DEBUG - ssa.py:459 - find_def_from_bottom label 130
2025-06-18 10:06:38,311 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,311 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,311 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,312 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,312 - DEBUG - ssa.py:453 - idom 0 from label 106
2025-06-18 10:06:38,312 - DEBUG - ssa.py:459 - find_def_from_bottom label 0
2025-06-18 10:06:38,312 - DEBUG - ssa.py:441 - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:459 - find_def_from_bottom label 154
2025-06-18 10:06:38,312 - DEBUG - ssa.py:441 - incoming_def a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,312 - DEBUG - ssa.py:215 - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,312 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,312 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:385 - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:416 - find_def_from_top label 154
2025-06-18 10:06:38,312 - DEBUG - ssa.py:453 - idom 138 from label 154
2025-06-18 10:06:38,312 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:38,312 - DEBUG - ssa.py:215 - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,312 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,312 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,312 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,313 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,313 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,313 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,313 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e23970>
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,313 - DEBUG - ssa.py:63 - Fix SSA violator on var invert
2025-06-18 10:06:38,313 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,313 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,313 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,313 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,313 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:301 - first assign: invert
2025-06-18 10:06:38,314 - DEBUG - ssa.py:215 - replaced with: invert = const(bool, True)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,314 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,314 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,314 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,314 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,314 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,314 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,314 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,314 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,314 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,314 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,314 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, False)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:215 - replaced with: invert.1 = const(bool, False)
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,315 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,315 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,315 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,316 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,316 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,316 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,316 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,316 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,316 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, old_numbers.py:217), Var(a.1.1, old_numbers.py:241)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,316 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,316 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,317 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,317 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,317 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,317 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,317 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,317 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,317 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,317 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,317 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e239d0>
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,317 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,317 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7db9b2e33220>],
             98: [<numba.core.ir.Assign object at 0x7db9b2e32aa0>]})
2025-06-18 10:06:38,318 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,318 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,318 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,318 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,318 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,318 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,318 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,318 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,319 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,319 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,319 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,319 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,319 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,319 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,319 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,319 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,319 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,319 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,319 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,320 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,320 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,320 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: invert.1 = const(bool, False)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,320 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,320 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,320 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,320 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,321 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,321 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,321 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,321 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, old_numbers.py:217), Var(a.1.1, old_numbers.py:241)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,321 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,321 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,321 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,321 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,321 - DEBUG - ssa.py:209 - on stmt: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,322 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,322 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:385 - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 178
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 130 from label 178
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 130
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,322 - DEBUG - ssa.py:433 - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 96
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 96
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 76 from label 96
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 76
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 76
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 52 from label 76
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 52
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 52
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 48 from label 52
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 48
2025-06-18 10:06:38,322 - DEBUG - ssa.py:416 - find_def_from_top label 48
2025-06-18 10:06:38,322 - DEBUG - ssa.py:453 - idom 26 from label 48
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 26
2025-06-18 10:06:38,322 - DEBUG - ssa.py:441 - incoming_def invert = const(bool, True)
2025-06-18 10:06:38,322 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:38,323 - DEBUG - ssa.py:441 - incoming_def invert.1 = const(bool, False)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:215 - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,323 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,323 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,323 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,323 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e33850>
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,323 - DEBUG - ssa.py:63 - Fix SSA violator on var exp
2025-06-18 10:06:38,323 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,323 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,323 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,323 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,323 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:301 - first assign: exp
2025-06-18 10:06:38,324 - DEBUG - ssa.py:215 - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,324 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,324 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,324 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,324 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,324 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,324 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,324 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,324 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,324 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,324 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,324 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: invert.1 = const(bool, False)
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: exp = b
2025-06-18 10:06:38,325 - DEBUG - ssa.py:215 - replaced with: exp.1 = b
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,325 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,325 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,325 - DEBUG - ssa.py:209 - on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[96, 98])
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,326 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,326 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,326 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,326 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,326 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,326 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, old_numbers.py:217), Var(a.1.1, old_numbers.py:241)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,326 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,327 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,327 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,327 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,327 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: exp = $158inplace_rshift.2
2025-06-18 10:06:38,327 - DEBUG - ssa.py:215 - replaced with: exp.2 = $158inplace_rshift.2
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,327 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,327 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,327 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,327 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,327 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,327 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,327 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FreshVarHandler object at 0x7db9b2e32f20>
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:38,328 - DEBUG - ssa.py:69 - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7db9b2e326b0>],
             98: [<numba.core.ir.Assign object at 0x7db9b2e32e30>],
             154: [<numba.core.ir.Assign object at 0x7db9b2e281f0>]})
2025-06-18 10:06:38,328 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 0
2025-06-18 10:06:38,328 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: a = arg(0, name=a)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: b = arg(1, name=b)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $2load_deref.0 = freevar(tp: int64)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $const4.1.1 = const(int, 1)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: r = call $2load_deref.0($const4.1.1, func=$2load_deref.0, args=[Var($const4.1.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $10load_deref.3 = freevar(tp: int64)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $const20.7.2 = const(int, 0)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $22compare_op.8 = b < $const20.7.2
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: bool24 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: branch $24pred, 26, 98
2025-06-18 10:06:38,328 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 26
2025-06-18 10:06:38,328 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: invert = const(bool, True)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $const38.4.2 = const(int, 0)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,328 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4.2
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: bool42 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,328 - DEBUG - ssa.py:209 - on stmt: branch $42pred, 44, 48
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 44
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'OverflowError'>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 48
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $48load_deref.0 = freevar(is_integer: True)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: bool50 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: jump 52
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 52
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $const54.1.2 = const(int, 0)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $56compare_op.2 = a.1 == $const54.1.2
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: bool58 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: branch $58pred, 60, 76
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 60
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $60load_deref.0 = freevar(zerodiv_return: False)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: bool62 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: jump 68
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 68
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $const70.1.4 = const(str, 0 cannot be raised to a negative power)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $72call_function.2 = call $68load_global.0($const70.1.4, func=$68load_global.0, args=[Var($const70.1.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: <static> raise <class 'ZeroDivisionError'>('0 cannot be raised to a negative power')
2025-06-18 10:06:38,329 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 76
2025-06-18 10:06:38,329 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $const78.1.1 = const(int, 1)
2025-06-18 10:06:38,329 - DEBUG - ssa.py:209 - on stmt: $80compare_op.2 = a.1 != $const78.1.1
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: bool82 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: branch $82pred, 84, 96
2025-06-18 10:06:38,330 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 84
2025-06-18 10:06:38,330 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $const86.1.5 = const(int, -1)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $88compare_op.2 = a.1 != $const86.1.5
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: bool90 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: branch $90pred, 92, 96
2025-06-18 10:06:38,330 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 92
2025-06-18 10:06:38,330 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $const92.0.2 = const(int, 0)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $94return_value.1 = cast(value=$const92.0.2)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: return $94return_value.1
2025-06-18 10:06:38,330 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 96
2025-06-18 10:06:38,330 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,330 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 98
2025-06-18 10:06:38,330 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: invert.1 = const(bool, False)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: exp.1 = b
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: jump 106
2025-06-18 10:06:38,330 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 106
2025-06-18 10:06:38,330 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[96, 98])
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $const108.1.7 = const(int, 65536)
2025-06-18 10:06:38,330 - DEBUG - ssa.py:209 - on stmt: $110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,330 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1.7
2025-06-18 10:06:38,330 - DEBUG - ssa.py:416 - find_def_from_top label 106
2025-06-18 10:06:38,330 - DEBUG - ssa.py:433 - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-06-18 10:06:38,330 - DEBUG - ssa.py:459 - find_def_from_bottom label 96
2025-06-18 10:06:38,330 - DEBUG - ssa.py:416 - find_def_from_top label 96
2025-06-18 10:06:38,331 - DEBUG - ssa.py:453 - idom 76 from label 96
2025-06-18 10:06:38,331 - DEBUG - ssa.py:459 - find_def_from_bottom label 76
2025-06-18 10:06:38,331 - DEBUG - ssa.py:416 - find_def_from_top label 76
2025-06-18 10:06:38,331 - DEBUG - ssa.py:453 - idom 52 from label 76
2025-06-18 10:06:38,331 - DEBUG - ssa.py:459 - find_def_from_bottom label 52
2025-06-18 10:06:38,331 - DEBUG - ssa.py:416 - find_def_from_top label 52
2025-06-18 10:06:38,331 - DEBUG - ssa.py:453 - idom 48 from label 52
2025-06-18 10:06:38,331 - DEBUG - ssa.py:459 - find_def_from_bottom label 48
2025-06-18 10:06:38,331 - DEBUG - ssa.py:416 - find_def_from_top label 48
2025-06-18 10:06:38,331 - DEBUG - ssa.py:453 - idom 26 from label 48
2025-06-18 10:06:38,331 - DEBUG - ssa.py:459 - find_def_from_bottom label 26
2025-06-18 10:06:38,331 - DEBUG - ssa.py:441 - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:459 - find_def_from_bottom label 98
2025-06-18 10:06:38,331 - DEBUG - ssa.py:441 - incoming_def exp.1 = b
2025-06-18 10:06:38,331 - DEBUG - ssa.py:215 - replaced with: $110compare_op.2 = exp.3 > $const108.1.7
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: bool112 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: branch $112pred, 114, 130
2025-06-18 10:06:38,331 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 114
2025-06-18 10:06:38,331 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, old_numbers.py:217), Var($124call_function.5, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: return $128return_value.7
2025-06-18 10:06:38,331 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 130
2025-06-18 10:06:38,331 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $const132.1.2 = const(int, 0)
2025-06-18 10:06:38,331 - DEBUG - ssa.py:209 - on stmt: $134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,331 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1.2
2025-06-18 10:06:38,332 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,332 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,332 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,332 - DEBUG - ssa.py:215 - replaced with: $134compare_op.2 = exp.3 != $const132.1.2
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: bool136 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: branch $136pred, 138, 178
2025-06-18 10:06:38,332 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 138
2025-06-18 10:06:38,332 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, old_numbers.py:217), Var(a.1.1, old_numbers.py:241)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: r.2 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: $const140.1.1 = const(int, 1)
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: $142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,332 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1.1
2025-06-18 10:06:38,332 - DEBUG - ssa.py:416 - find_def_from_top label 138
2025-06-18 10:06:38,332 - DEBUG - ssa.py:433 - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-06-18 10:06:38,332 - DEBUG - ssa.py:459 - find_def_from_bottom label 130
2025-06-18 10:06:38,332 - DEBUG - ssa.py:416 - find_def_from_top label 130
2025-06-18 10:06:38,332 - DEBUG - ssa.py:453 - idom 106 from label 130
2025-06-18 10:06:38,332 - DEBUG - ssa.py:459 - find_def_from_bottom label 106
2025-06-18 10:06:38,332 - DEBUG - ssa.py:441 - incoming_def exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[96, 98])
2025-06-18 10:06:38,332 - DEBUG - ssa.py:459 - find_def_from_bottom label 154
2025-06-18 10:06:38,332 - DEBUG - ssa.py:441 - incoming_def exp.2 = $158inplace_rshift.2
2025-06-18 10:06:38,332 - DEBUG - ssa.py:215 - replaced with: $142binary_and.2 = exp.4 & $const140.1.1
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: bool144 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: branch $144pred, 146, 154
2025-06-18 10:06:38,332 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 146
2025-06-18 10:06:38,332 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,332 - DEBUG - ssa.py:209 - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: r.1 = $150inplace_multiply.2
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: jump 154
2025-06-18 10:06:38,333 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 154
2025-06-18 10:06:38,333 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[138, 146])
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $const156.1.1 = const(int, 1)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:416 - find_def_from_top label 154
2025-06-18 10:06:38,333 - DEBUG - ssa.py:453 - idom 138 from label 154
2025-06-18 10:06:38,333 - DEBUG - ssa.py:459 - find_def_from_bottom label 138
2025-06-18 10:06:38,333 - DEBUG - ssa.py:215 - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1.1, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: exp.2 = $158inplace_rshift.2
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: a.1.1 = $166inplace_multiply.5
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $const172.7.2 = const(int, 0)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,333 - DEBUG - ssa.py:385 - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7.2
2025-06-18 10:06:38,333 - DEBUG - ssa.py:215 - replaced with: $174compare_op.8 = exp.2 != $const172.7.2
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: bool176 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: branch $176pred, 138, 178
2025-06-18 10:06:38,333 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 178
2025-06-18 10:06:38,333 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: r.4 = phi(incoming_values=[Var(r, old_numbers.py:216), Var(r.3, old_numbers.py:239)], incoming_blocks=[130, 154])
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: bool180 = global(bool: <class 'bool'>)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-06-18 10:06:38,333 - DEBUG - ssa.py:209 - on stmt: branch $180pred, 182, 190
2025-06-18 10:06:38,333 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 182
2025-06-18 10:06:38,334 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: $const182.0.8 = const(float, 1.0)
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: $186binary_true_divide.2 = $const182.0.8 / r.4
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: return $188return_value.3
2025-06-18 10:06:38,334 - DEBUG - ssa.py:186 - ==== SSA block rewrite pass on 190
2025-06-18 10:06:38,334 - DEBUG - ssa.py:207 - Running <numba.core.ssa._FixSSAVars object at 0x7db9b2e28490>
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: $192return_value.1 = cast(value=r.4)
2025-06-18 10:06:38,334 - DEBUG - ssa.py:209 - on stmt: return $192return_value.1
2025-06-18 10:06:45,002 - INFO - mesa_plotter.py:110 - Blue loop specific plots with BCs generated successfully.
2025-06-18 10:06:45,002 - INFO - cli.py:225 - Blue Loop CMD/HRD with Bolometric Corrections generated.
2025-06-18 10:06:45,002 - WARNING - cli.py:246 - GYRE modules not available. Skipping GYRE workflow.
2025-06-18 10:06:45,002 - INFO - cli.py:250 - 
--- MESA Grid Analysis Finished ---
